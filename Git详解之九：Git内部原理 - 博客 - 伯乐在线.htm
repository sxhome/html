<!DOCTYPE html>
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!-->
<html prefix="og: http://ogp.me/ns#" class=" js rgba borderradius boxshadow textshadow opacity cssanimations cssgradients csstransitions fontface generatedcontent video audio js" lang="zh-CN"><!--<![endif]--><!-- BEGIN head --><head><div class="fit-vids-style">­<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style></div><script charset="utf-8" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shares.php"></script><script charset="utf-8" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/id.php"></script>

	<!-- Title -->
	
	
	<!-- Meta Tags -->
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
	<!-- Favicon & Mobileicon -->
	<link rel="shortcut icon" href="http://jbcdn2.b0.upaiyun.com/2013/12/favicon.png">
	<link rel="apple-touch-icon" href="http://jbcdn2.b0.upaiyun.com/2013/12/jobbole-blog-logo-mobile.png">
	
	<!-- RSS, Atom & Pingbacks -->
		<link rel="alternate" title="博客 – 伯乐在线 RSS Feed" href="http://blog.jobbole.com/feed/">
		<link rel="alternate" title="RSS .92" href="http://blog.jobbole.com/feed/rss/">
	<link rel="alternate" title="Atom 0.3" href="http://blog.jobbole.com/feed/atom/">
	<link rel="pingback" href="http://blog.jobbole.com/xmlrpc.php">
	
	<!-- Theme Hook -->
	
<!-- This site is optimized with the Yoast WordPress SEO plugin v1.4.13 - http://yoast.com/wordpress/seo/ -->
<title>Git详解之九：Git内部原理 - 博客 - 伯乐在线</title>
<meta name="description" content="本文将介绍 Git 的内部工作原理和实现方式。我个人发现学习这些内容对于理解 Git 的用处和强大是非常重要的，不过也有人认为这些内容对于初学者来说可能难以理解且过于复杂。">
<link rel="canonical" href="http://blog.jobbole.com/26209/">
<meta property="og:locale" content="zh_CN">
<meta property="og:type" content="article">
<meta property="og:title" content="Git详解之九：Git内部原理 - 博客 - 伯乐在线">
<meta property="og:description" content="本文将介绍 Git 的内部工作原理和实现方式。我个人发现学习这些内容对于理解 Git 的用处和强大是非常重要的，不过也有人认为这些内容对于初学者来说可能难以理解且过于复杂。">
<meta property="og:url" content="http://blog.jobbole.com/26209/">
<meta property="og:site_name" content="博客 - 伯乐在线">
<meta property="og:image" content="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122841_684.png">
<meta property="og:image" content="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122842_622.png">
<meta property="og:image" content="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122843_478.png">
<meta property="og:image" content="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122844_77.png">
<!-- / Yoast WordPress SEO plugin. -->

<link rel="stylesheet" id="thickbox-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/thickbox.css" type="text/css" media="all">
<link rel="stylesheet" id="jobbole-wp-css-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jobbole-wp-plugin.css" type="text/css" media="all">
<link rel="stylesheet" id="v48fv_images-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/images.css" type="text/css" media="all">
<link rel="stylesheet" id="v48fv_front-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/front.css" type="text/css" media="all">
<link rel="stylesheet" id="v48fv_common-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/common.css" type="text/css" media="all">
<link rel="stylesheet" id="core3.0-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shCore.css" type="text/css" media="all">
<link rel="stylesheet" id="core-Default3.0-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shCoreDefault.css" type="text/css" media="all">
<link rel="stylesheet" id="theme-Default3.0-css" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shThemeDefault.css" type="text/css" media="all">
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jquery.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/comment-reply.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/superfish.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/menu-effects.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var JobboleAjax = {"ajaxurl":"http:\/\/blog.jobbole.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jobbole-wp-plugin.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/modernizr.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/rc-textarea-hl.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blog.jobbole.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.jobbole.com/wp-includes/wlwmanifest.xml"> 
<link rel="shortlink" href="http://blog.jobbole.com/?p=26209">
<script type="text/javascript">
	window._wp_rp_static_base_url = 'http://dtmvdvtzf8rz0.cloudfront.net/static/';
	window._wp_rp_wp_ajax_url = "http://blog.jobbole.com/wp-admin/admin-ajax.php";
	window._wp_rp_plugin_version = '2.8';
	window._wp_rp_post_id = '26209';
	window._wp_rp_num_rel_posts = '10';
</script>

<!-- WP SyntaxHighlighter Ver.1.7.3 CSS for code Begin -->
<style type="text/css">
.syntaxhighlighter,
.syntaxhighlighter a,
.syntaxhighlighter div,
.syntaxhighlighter code,
.syntaxhighlighter table,
.syntaxhighlighter table td,
.syntaxhighlighter table tr,
.syntaxhighlighter table tbody,
.syntaxhighlighter table thead,
.syntaxhighlighter table caption,
.syntaxhighlighter textarea {
font-size: 12px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
.syntaxhighlighter table caption {
/* For Title(Caption) */  
font-size: 14px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
.syntaxhighlighter.nogutter td.code .line {
/* Set the left padding space when no-gutter in ver. 3.0 */  
padding-left: 3px !important;
}
.syntaxhighlighter {
/* For Chrome/Safari(WebKit) */  
/* Hide the superfluous vertical scrollbar in ver. 3.0 */  
overflow-y: hidden !important;
padding: 1px !important;
}
.widget-area.syntaxhighlighter a,
.widget-area.syntaxhighlighter div,
.widget-area.syntaxhighlighter code,
.widget-area.syntaxhighlighter table,
.widget-area.syntaxhighlighter table td,
.widget-area.syntaxhighlighter table tr,
.widget-area.syntaxhighlighter table tbody,
.widget-area.syntaxhighlighter table thead,
.widget-area.syntaxhighlighter table caption,
.widget-area.syntaxhighlighter textarea {
/* For Widget */  
font-size: 14px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
.widget-area table caption {
/* For Widget */  
/* For Title(Caption) */  
font-size: 10px !important; /* Set the font size in pixels */  
font-family: "Consolas", "Bitstream Vera Sans Mono", "Courier New", Courier, monospace !important; /* Set the font type */  
}
</style>
<!-- WP SyntaxHighlighter Ver.1.7.3 CSS for code End -->
	
	<!-- CSS -->
    <link rel="stylesheet" type="text/css" media="screen" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/style.css">
	<style>
				*::selection { background: #0099cc; }
		*::-moz-selection { background: #0099cc; }
		body {
            background: #ffffff         }

        a,
        .tabs ul.nav li a:hover,
        .tabs ul.nav li.active a,
        .dropcap,
        .toggle.hover .toggle-title,
        li.comment cite a:hover,
        h3.widget-title,
        .post-meta .meta-title:hover,
        .the-latest a:hover h4,
        .aw_socialcounter_widget li a:hover,
        .aw_tabbed_widget #tab-latest-comments a:hover
        {
            color: #0099cc;
        }

		a:hover { color: #b30000; }
		input:focus, textarea:focus { border-color: #0099cc; }

		#searchsubmit,
        .highlight,
        .aw_tabbed_widget .tabs ul.nav li.active a, footer .aw_tabbed_widget .tabs ul.nav li.active a,
        #top .aw_tabbed_widget .tabs ul.nav li.active a,
        .aw_tabbed_widget .tabs ul.nav li a:hover,
        footer .aw_tabbed_widget .tabs ul.nav li a:hover,
        #top .aw_tabbed_widget .tabs ul.nav li a:hover,
        .aw_twitter_widget .twitter-icon, .testimonial-icon,
        #top-closed:hover,
        .flex-control-nav a:hover,
        .flex-control-nav a.flex-active {
            background-color: #0099cc;
        }

		.submit { background-color: #0099cc; border-color: #007399; }
		.submit:hover { background-color: #b30000; border-color: #860000; }
		#searchsubmit:hover { background-color: #b30000; }
		.toggle.hover .toggle-icon { border-top-color: #0099cc; }
		.toggle.hover.active .toggle-icon { border-bottom-color: #0099cc; }
		.flex-direction-nav li .flex-prev:hover { border-right-color: #0099cc; }
		.flex-direction-nav li .flex-next:hover { border-left-color: #0099cc; }
		@media only screen and (min-width: 768px) and (max-width: 959px) {
			.aw_tabbed_widget .tabs ul.nav li a:hover, .tabs ul.nav li.active a { color: #0099cc; }
		}
		@media screen and (max-width: 767px) {
			.tabs ul.nav li a:hover, .tabs ul.nav li.active a { color: #0099cc; }
		}
	</style>

	<!--[if IE 8]>
		<script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
		<script src="http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js"></script>
    <![endif]-->

	<!-- Links: RSS + Atom Syndication + Pingback etc. -->
	<link rel="alternate" type="application/rss+xml" title="博客 – 伯乐在线 RSS Feed" href="http://blog.jobbole.com/feed/">
	<link rel="alternate" type="text/xml" title="RSS .92" href="http://blog.jobbole.com/feed/rss/">
	<link rel="alternate" type="application/atom+xml" title="Atom 0.3" href="http://blog.jobbole.com/feed/atom/">
	<link rel="pingback" href="http://blog.jobbole.com/xmlrpc.php">

<!-- END head -->
</head>

<!-- BEGIN body -->
<body class="single single-post postid-26209 single-format-standard chrome"><link type="text/css" rel="stylesheet" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jiathis_counter.css"><link type="text/css" rel="stylesheet" href="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jiathis_share.css"><iframe style="position: fixed; display: none; opacity: 0;" frameborder="0"></iframe><div style="position: absolute; z-index: 1000000000; display: none; top: 50%; left: 50%; overflow: auto;" class="jiathis_style"></div><div style="position: absolute; z-index: 1000000000; display: none; overflow: auto;" class="jiathis_style"></div><iframe src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jiathis_utility.htm" style="display: none;" frameborder="0"></iframe>

		
	    <nav id="top-nav" class="menu-nav">

        <!-- BEGIN .container -->
        <div class="container">

            <div class="grid-7 hide-on-480 hide-on-767">
                <ul id="menu-main-menu" class="menu left sf-js-enabled">
                    <li class="menu-item">
                        <a href="http://www.jobbole.com/">首页</a>
                    </li>
                    <li class="menu-item">
                        <a href="http://top.jobbole.com/">头条</a>
                    </li>
                    <li class="menu-item">
                        <a href="http://blog.jobbole.com/">文章</a>
                    </li>
                    <li class="menu-item">
                        <span><a href="#">频道 <i class="fa fa-angle-double-down"></i></a></span>
                        <ul style="display: none; visibility: hidden;" class="sub-menu sf-js-enabled">
                            <li class="menu-item"><a href="http://design.jobbole.com/">设计频道</a></li>
                            <li class="menu-item"><a href="http://web.jobbole.com/">Web前端</a></li>
                            <li class="menu-item"><a href="http://python.jobbole.com/">Python开发</a></li>
                            <li class="menu-item"><a href="http://www.importnew.com/?utm_source=home-top-nav">Java技术</a></li>
                            <li class="menu-item"><a href="http://android.jobbole.com/">Android应用</a></li>
                            <li class="menu-item"><a href="http://ios.jobbole.com/">iOS应用</a></li>
                        </ul>
                    </li>
                    <li class="menu-item">
                        <a href="http://hao.jobbole.com/">资源</a>
                    </li>

                    
                    <li class="menu-item">
                        <a href="http://group.jobbole.com/">小组</a>
                    </li>

                    <li class="menu-item">
                        <a href="http://date.jobbole.com/"><i class="fa fa-heart-o pinkiconcolor"></i> 相亲</a>
                    </li>
                </ul>
            </div>

            <div class="grid-5">
                <ul id="menu-main-menu" class="menu sf-js-enabled">
                    <li class="menu-item hide-on-768-wider left">
                        <span><a href="#">频道 <i class="fa fa-angle-double-down"></i></a></span>
                        <ul style="display: none; visibility: hidden;" class="sub-menu sf-js-enabled">
                            <li class="menu-item"><a href="http://www.jobbole.com/">首页</a></li>
                            <li class="menu-item"><a href="http://top.jobbole.com/">头条</a></li>
                            <li class="menu-item"><a href="http://blog.jobbole.com/">文章</a></li>
                            <li class="menu-item"><a href="http://group.jobbole.com/">小组</a></li>
                            <li class="menu-item"><a href="http://date.jobbole.com/">相亲 <i class="fa fa-heart-o pinkiconcolor"></i></a></li>
                            <li class="menu-item"><a href="http://hao.jobbole.com/">资源</a></li>
                            <li class="menu-item"><a href="http://design.jobbole.com/">设计</a></li>
                            <li class="menu-item"><a href="http://web.jobbole.com/">前端</a></li>
                            <li class="menu-item"><a href="http://python.jobbole.com/">Python</a></li>
                            <li class="menu-item"><a href="http://www.importnew.com/">Java</a></li>
                            <li class="menu-item"><a href="http://android.jobbole.com/">安卓</a></li>
                            <li class="menu-item"><a href="http://ios.jobbole.com/">iOS</a></li>

                                                    </ul>
                    </li>

                                            <li class="menu-item"><a href="http://www.jobbole.com/login?redirect=http%3A%2F%2Fblog.jobbole.com%2F26209%2F"><i class="fa fa-sign-in"></i> 登录</a></li>
                        <li class="menu-item"><a href="http://www.jobbole.com/register"><i class="fa fa-user-plus"></i> 注册</a></li>
                    
                    
                    <li class="menu-item"><a title="帮助" href="http://blog.jobbole.com/87622/"><i class="fa fa-question-circle fa-lg"></i></a></li>
                </ul>
            </div>
            <div class="clear"></div>

        </div>
        <!-- END .container -->

    </nav>
    <!-- END #top-nav -->
  	
	<!-- BEGIN #wrapper -->
	<div id="wrapper" class="container">

		<!-- BEGIN header -->
		<header>
		
						
			<div class="header-wrapper">
								
				<!-- BEGIN #logo -->
				<div id="logo" class="leaderboard-true">
                    <a href="http://blog.jobbole.com/"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jobbole-logo.png" alt="博客 – 伯乐在线"></a>
				</div>
				<!-- END #logo -->
				
				<!-- BEGIN #leaderboard -->
				<div id="leaderboard">
				
					<script language="javascript"> 
var randomNumTop = Math.round(Math.random()*5);
var imageTop=new Array(6);
imageTop[0]="http://ww1.sinaimg.cn/mw690/bfdcef89gw1es2pv45zshj20k802iab0.jpg";
imageTop[1]="http://ww2.sinaimg.cn/mw690/bfdcef89gw1es2pv3b8exj20k802iwfd.jpg";
imageTop[2]="http://ww1.sinaimg.cn/mw690/bfdcef89gw1es2pv2u731j20k802igmb.jpg";
imageTop[3]="http://ww3.sinaimg.cn/mw690/bfdcef89gw1es2pv27ligj20k802idgs.jpg";
imageTop[4]="http://ww3.sinaimg.cn/mw690/bfdcef89gw1es2pv1k80jj20k802it9o.jpg";
imageTop[5]="http://ww1.sinaimg.cn/mw690/bfdcef89gw1etvdqv1dj5j20k802iq40.jpg";
var imageUrlTop=imageTop[randomNumTop];
var urlsTop=new Array(6);
urlsTop[0]="http://www.imooc.com/activity/androidindex?from=jobboleblog&mc_marking=4fe27dd9db69d53bab273d1d3c6cf27e&mc_channel=jobboleblog&mc_billing=%E5%85%8D%E8%B4%B9%E8%B5%A0%E9%80%81&mc_keywords=&mc_position=&mc_business=";
urlsTop[1]="http://www.imooc.com/activity/javaerindex?from=jobboleblog&mc_marking=5725cce24eda63001d5a6011725ade41&mc_channel=jobboleblog&mc_billing=%E5%85%8D%E8%B4%B9%E8%B5%A0%E9%80%81&mc_keywords=&mc_position=&mc_business=";
urlsTop[2]="http://www.imooc.com/course/programdetail/pid/11?from=jobboleblog&mc_marking=f726d606d0ce56f8cebc9b87771de84d&mc_channel=jobboleblog&mc_billing=%E5%85%8D%E8%B4%B9%E8%B5%A0%E9%80%81&mc_keywords=&mc_position=&mc_business=";
urlsTop[3]="http://www.imooc.com/activity/feerindex?from=jobboleblog&mc_marking=97abfff1b39d6e9c92281898db324d71&mc_channel=jobboleblog&mc_billing=%E5%85%8D%E8%B4%B9%E8%B5%A0%E9%80%81&mc_keywords=&mc_position=&mc_business=";
urlsTop[4]="http://www.imooc.com/activity/planhtml5?from=jobboleblog&mc_marking=49ed987767cfb761bce2b94cb7cbd5c9&mc_channel=jobboleblog&mc_billing=%E5%85%8D%E8%B4%B9%E8%B5%A0%E9%80%81&mc_keywords=&mc_position=&mc_business=";
urlsTop[5]="http://www.imooc.com/course/list?from=jobboleblog";
var urlTop = urlsTop[randomNumTop];
var adHTML = "<a href='"+urlTop+"' target='_blank'><img width='728' height='90'  src='"+imageUrlTop+"' border='0'></a>";
document.write(adHTML);
</script><a href="http://www.imooc.com/course/programdetail/pid/11?from=jobboleblog&amp;mc_marking=f726d606d0ce56f8cebc9b87771de84d&amp;mc_channel=jobboleblog&amp;mc_billing=%E5%85%8D%E8%B4%B9%E8%B5%A0%E9%80%81&amp;mc_keywords=&amp;mc_position=&amp;mc_business=" target="_blank"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/bfdcef89gw1es2pv2u731j20k802igmb.jpg" height="90" width="728" border="0"></a>				
				</div>
				<!-- END #leaderboard -->
				
				<div class="clear"></div>
			
			</div>
			
						
			<div class="clear"></div>

            			<!-- BEGIN #main-nav -->
			<nav id="main-nav" class="grid-12 menu-nav">
                <div class="menu-sub-menu-container"><ul id="main-nav-menu" class="menu sf-js-enabled"><li id="menu-item-33290" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-33290"><a href="http://blog.jobbole.com/">首页</a></li>
<li id="menu-item-33406" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-33406"><a href="http://blog.jobbole.com/all-posts/">最新文章</a></li>
<li id="menu-item-56111" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-56111"><a href="http://blog.jobbole.com/tag/featuredpost/">经典回顾</a></li>
<li id="menu-item-33319" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33319"><a href="http://blog.jobbole.com/category/programmer/">开发</a>
<ul style="display: none; visibility: hidden;" class="sub-menu sf-js-enabled">
	<li id="menu-item-81047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-81047"><a href="http://web.jobbole.com/">Web前端</a></li>
	<li id="menu-item-81218" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-81218"><a href="http://python.jobbole.com/">Python</a></li>
	<li id="menu-item-81220" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-81220"><a href="http://android.jobbole.com/">Android</a></li>
	<li id="menu-item-81219" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-81219"><a href="http://ios.jobbole.com/">iOS</a></li>
	<li id="menu-item-53194" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-53194"><a href="http://www.importnew.com/">Java</a></li>
	<li id="menu-item-57616" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-57616"><a href="http://blog.jobbole.com/category/c-cpp/">C/C++</a></li>
	<li id="menu-item-57003" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-57003"><a href="http://blog.jobbole.com/category/php-programmer/">PHP</a></li>
	<li id="menu-item-97173" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-97173"><a href="http://blog.jobbole.com/tag/net/">.NET</a></li>
	<li id="menu-item-55603" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55603"><a href="http://blog.jobbole.com/category/ruby/">Ruby</a></li>
	<li id="menu-item-70347" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-70347"><a href="http://blog.jobbole.com/category/go/">Go</a></li>
</ul>
</li>
<li id="menu-item-95935" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-95935"><a href="http://design.jobbole.com/">设计</a>
<ul style="display: none; visibility: hidden;" class="sub-menu sf-js-enabled">
	<li id="menu-item-55608" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55608"><a href="http://design.jobbole.com/category/ui-design/">UI设计</a></li>
	<li id="menu-item-55610" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55610"><a href="http://design.jobbole.com/category/web-design/">网页设计</a></li>
	<li id="menu-item-55609" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55609"><a href="http://design.jobbole.com/category/inter-design/">交互设计</a></li>
	<li id="menu-item-55611" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55611"><a href="http://design.jobbole.com/category/ue-design/">用户体验</a></li>
	<li id="menu-item-95936" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-95936"><a href="http://design.jobbole.com/category/guide/">设计教程</a></li>
	<li id="menu-item-95937" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-95937"><a href="http://design.jobbole.com/category/design-career/">设计职场</a></li>
</ul>
</li>
<li id="menu-item-97313" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-97313"><a href="http://blog.jobbole.com/category/geeks/">极客</a></li>
<li id="menu-item-33313" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-33313"><a href="http://blog.jobbole.com/category/it-tech/">IT技术</a>
<ul style="display: none; visibility: hidden;" class="sub-menu sf-js-enabled">
	<li id="menu-item-55604" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55604"><a href="http://blog.jobbole.com/tag/linux/">Linux</a></li>
	<li id="menu-item-55607" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55607"><a href="http://blog.jobbole.com/tag/unix/">UNIX</a></li>
	<li id="menu-item-55605" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55605"><a href="http://blog.jobbole.com/tag/mysql/">MySQL</a></li>
	<li id="menu-item-55621" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55621"><a href="http://blog.jobbole.com/tag/nosql/">NoSQL</a></li>
	<li id="menu-item-55622" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55622"><a href="http://blog.jobbole.com/tag/database/">数据库</a></li>
	<li id="menu-item-55606" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55606"><a href="http://blog.jobbole.com/tag/git/">Git</a></li>
	<li id="menu-item-89963" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-89963"><a href="http://blog.jobbole.com/tag/machinelearning/">机器学习</a></li>
	<li id="menu-item-55635" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55635"><a href="http://blog.jobbole.com/tag/algorithm/">算法</a></li>
	<li id="menu-item-55612" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55612"><a href="http://blog.jobbole.com/tag/%e6%b5%8b%e8%af%95/">测试</a></li>
	<li id="menu-item-55618" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55618"><a href="http://blog.jobbole.com/tag/%e5%ae%89%e5%85%a8/">信息安全</a></li>
	<li id="menu-item-55636" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-55636"><a href="http://blog.jobbole.com/tag/vim/">Vim</a></li>
</ul>
</li>
<li id="menu-item-95977" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-95977"><a href="http://top.jobbole.com/category/news/">业界</a></li>
<li id="menu-item-33390" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33390"><a href="http://blog.jobbole.com/category/career/">职场</a></li>
<li id="menu-item-33317" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-33317"><a href="http://blog.jobbole.com/category/startup/">创业</a></li>
<li id="menu-item-56094" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-56094"><a href="http://blog.jobbole.com/category/interview/">访谈</a></li>
<li id="menu-item-56110" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-56110"><a href="http://blog.jobbole.com/category/overseas/">在国外</a></li>
</ul><select class="selectnav" id="selectnav1"><option selected="selected" value="">- 导航条 -</option><option value="http://blog.jobbole.com/">首页</option><option value="http://blog.jobbole.com/all-posts/">最新文章</option><option value="http://blog.jobbole.com/tag/featuredpost/">经典回顾</option><option value="http://blog.jobbole.com/category/programmer/">开发</option><option value="http://web.jobbole.com/">- Web前端</option><option value="http://python.jobbole.com/">- Python</option><option value="http://android.jobbole.com/">- Android</option><option value="http://ios.jobbole.com/">- iOS</option><option value="http://www.importnew.com/">- Java</option><option value="http://blog.jobbole.com/category/c-cpp/">- C/C++</option><option value="http://blog.jobbole.com/category/php-programmer/">- PHP</option><option value="http://blog.jobbole.com/tag/net/">- .NET</option><option value="http://blog.jobbole.com/category/ruby/">- Ruby</option><option value="http://blog.jobbole.com/category/go/">- Go</option><option value="http://design.jobbole.com/">设计</option><option value="http://design.jobbole.com/category/ui-design/">- UI设计</option><option value="http://design.jobbole.com/category/web-design/">- 网页设计</option><option value="http://design.jobbole.com/category/inter-design/">- 交互设计</option><option value="http://design.jobbole.com/category/ue-design/">- 用户体验</option><option value="http://design.jobbole.com/category/guide/">- 设计教程</option><option value="http://design.jobbole.com/category/design-career/">- 设计职场</option><option value="http://blog.jobbole.com/category/geeks/">极客</option><option value="http://blog.jobbole.com/category/it-tech/">IT技术</option><option value="http://blog.jobbole.com/tag/linux/">- Linux</option><option value="http://blog.jobbole.com/tag/unix/">- UNIX</option><option value="http://blog.jobbole.com/tag/mysql/">- MySQL</option><option value="http://blog.jobbole.com/tag/nosql/">- NoSQL</option><option value="http://blog.jobbole.com/tag/database/">- 数据库</option><option value="http://blog.jobbole.com/tag/git/">- Git</option><option value="http://blog.jobbole.com/tag/machinelearning/">- 机器学习</option><option value="http://blog.jobbole.com/tag/algorithm/">- 算法</option><option value="http://blog.jobbole.com/tag/%e6%b5%8b%e8%af%95/">- 测试</option><option value="http://blog.jobbole.com/tag/%e5%ae%89%e5%85%a8/">- 信息安全</option><option value="http://blog.jobbole.com/tag/vim/">- Vim</option><option value="http://top.jobbole.com/category/news/">业界</option><option value="http://blog.jobbole.com/category/career/">职场</option><option value="http://blog.jobbole.com/category/startup/">创业</option><option value="http://blog.jobbole.com/category/interview/">访谈</option><option value="http://blog.jobbole.com/category/overseas/">在国外</option></select></div>				<div class="clear"></div>
			</nav>
			<!-- END #main-nav -->
                        <div class="clear"></div>

		</header>
		<!-- END header -->
		
		<div id="breadcrumb" class="grid-12 margin-20"><div class="breadcrumb-wrapper"><!-- Breadcrumb NavXT 4.4.0 -->
<a title="Go to 伯乐在线." href="http://www.jobbole.com/" class="main-home">伯乐在线</a> &gt; <a href="http://blog.jobbole.com/" class="home">首页</a> &gt; <a href="http://blog.jobbole.com/all-posts/" class="post-root post-post">所有文章</a> &gt; <a href="http://blog.jobbole.com/category/it-tech/" class="category">IT技术</a> &gt; Git详解之九：Git内部原理</div></div><div class="clear"></div>

<!-- BEGIN .grid-8 -->
<div class="grid-8">

		
	<!-- BEGIN .post -->
<div class="post-26209 post type-post status-publish format-standard hentry category-it-tech category-books tag-git tag-pro-git tag-1698 odd" id="post-26209">
	
	<!-- BEGIN .entry-header -->
	<div class="entry-header">
	
				
		<h1>Git详解之九：Git内部原理</h1>
		
							
	</div>
	<!-- BEGIN .entry-header -->
	
	<!-- BEGIN .entry-meta -->
	<div class="entry-meta">
	
		<p class="entry-meta-hide-on-mobile">

            2012/09/01 ·  <a href="http://blog.jobbole.com/category/it-tech/" title="查看 IT技术 中的全部文章" rel="category tag">IT技术</a>, <a href="http://blog.jobbole.com/category/books/" title="查看 书籍与教程 中的全部文章" rel="category tag">书籍与教程</a>
            
            

            
             ·  <a href="http://blog.jobbole.com/tag/git/">Git</a>, <a href="http://blog.jobbole.com/tag/pro-git/">Pro Git</a>, <a href="http://blog.jobbole.com/tag/%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6/">版本控制</a>
            
</p>

<!-- JiaThis Button BEGIN -->
<div class="jiathis_style" style="display: block; margin: 0 0px; clear: both;"><span class="jiathis_txt">分享到：</span>
<a title="分享到新浪微博" class="jiathis_button_tsina"><span class="jiathis_txt jtico jtico_tsina"></span></a>
<a title="分享到微信" class="jiathis_button_weixin"><span class="jiathis_txt jtico jtico_weixin"></span></a>
<a title="分享到QQ空间" class="jiathis_button_qzone"><span class="jiathis_txt jtico jtico_qzone"></span></a>
<a title="分享到Facebook" class="jiathis_button_fb"><span class="jiathis_txt jtico jtico_fb"></span></a>
<a title="分享到豆瓣" class="jiathis_button_douban"><span class="jiathis_txt jtico jtico_douban"></span></a>
<a class="jiathis_button_readitlater"></a>
<a title="分享到印象笔记" class="jiathis_button_evernote"><span class="jiathis_txt jtico jtico_evernote"></span></a>
<a title="分享到有道云笔记" class="jiathis_button_ydnote"><span class="jiathis_txt jtico jtico_ydnote"></span></a>
<a href="http://www.jiathis.com/share?uid=1745061" class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" target="_blank"></a>
<a class="jiathis_counter_style"><span title="累计分享36次" id="jiathis_counter_89" class="jiathis_button_expanded jiathis_counter jiathis_bubble_style">36</span></a>
</div>
<!-- JiaThis Button END -->


	</div>
	<!-- END .entry-meta -->

	<!-- BEGIN .entry -->
	<div class="entry">

        <script src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/courselistrandjs"></script><style type="text/css">.imooc ,.imooc ul,.imooc li{margin:0;padding:0;}.imooc{background:#f0f0f0;text-align:left;}.imooc ul{list-style:none;padding:9px;border:1px dotted #9b9b9b;overflow:hidden;}.imooc ul li{width:300px;float:left;font-size:14px;font-weight:bold;line-height:19px;}.imooc li a{display:block;height:19px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#09c;text-decoration: none;margin-right:10px;}.imooc li a:hover{color:#b30000;}.imooc li.no-data{line-height: 50px;color: #000;}</style><div class="imooc"><ul><li><a target="_blank" title="Shell典型应用之应用日志分析" href="http://www.imooc.com/view/540?from=jobboleblog">Shell典型应用之应用日志分析</a></li><li><a target="_blank" title="PHP第三方登录—QQ登录" href="http://www.imooc.com/view/596?from=jobboleblog">PHP第三方登录—QQ登录</a></li><li><a target="_blank" title="高性能的PHP日志系统—SeasLog" href="http://www.imooc.com/view/591?from=jobboleblog">高性能的PHP日志系统—SeasLog</a></li><li><a target="_blank" title="iOS新特性之不一样的任务管理器" href="http://www.imooc.com/view/561?from=jobboleblog">iOS新特性之不一样的任务管理器</a></li></ul></div><span style="display:block;margin-bottom:10px;"></span>
		<p id="git_">原文：<a href="http://git-scm.com/book/zh" target="_blank">《Pro Git》</a></p>
<p><strong>Git 内部原理</strong></p>
<p>不管你是从前面的章节直接跳到了本章，还是读完了其余各章一直到这，你都将在本章见识 Git 
的内部工作原理和实现方式。我个人发现学习这些内容对于理解 Git 
的用处和强大是非常重要的，不过也有人认为这些内容对于初学者来说可能难以理解且过于复杂。正因如此我把这部分内容放在最后一章，你在学习过程中可以先阅
 读这部分，也可以晚点阅读这部分，这完全取决于你自己。（<a title="伯乐" href="http://www.jobbole.com/">伯乐</a>在线注：如果你对Git还不了解，建议从本<a href="http://blog.jobbole.com/25775/">Git</a>系列<a href="http://blog.jobbole.com/25775/">第一篇文章</a>开始阅读）</p>
<p>既然已经读到这了，就让我们开始吧。首先要弄明白一点，从根本上来讲 Git 是一套内容寻址 (content-addressable) 文件系统，在此之上提供了一个 VCS 用户界面。马上你就会学到这意味着什么。</p>
<p>早期的 Git (主要是 1.5 之前版本) 的用户界面要比现在复杂得多，这是因为它更侧重于成为文件系统而不是一套更精致的 VCS 
。最近几年改进了 UI 从而使它跟其他任何系统一样清晰易用。即便如此，还是经常会有一些陈腔滥调提到早期 Git 的 UI 复杂又难学。</p>
<p>内容寻址文件系统这一层相当酷，在本章中我会先讲解这部分。随后你会学到传输机制和最终要使用的各种库管理任务。</p>
<p>&nbsp;</p>
<p id="_plumbing__porcelain"><span style="color: #ff0000;"><strong>9.1&nbsp; 底层命令 (Plumbing) 和高层命令 (Porcelain)</strong></span></p>
<p>本书讲解了使用&nbsp;<code>checkout</code>,&nbsp;<code>branch</code>,&nbsp;<code>remote</code>&nbsp;
等共约 30 个 Git 命令。然而由于 Git 一开始被设计成供 VCS 使用的工具集而不是一整套用户友好的 
VCS，它还包含了许多底层命令，这些命令用于以 UNIX 风格使用或由脚本调用。这些命令一般被称为 “plumbing” 
命令（底层命令），其他的更友好的命令则被称为 “porcelain” 命令（高层命令）。</p>
<p>本书前八章主要专门讨论高层命令。本章将主要讨论底层命令以理解 Git 的内部工作机制、演示 Git 如何及为何要以这种方式工作。这些命令主要不是用来从命令行手工使用的，更多的是用来为其他工具和自定义脚本服务的。</p>
<p>当你在一个新目录或已有目录内执行&nbsp;<code>git init</code>&nbsp;时，Git 会创建一个&nbsp;<code>.git</code>&nbsp;目录，几乎所有 Git 存储和操作的内容都位于该目录下。如果你要备份或复制一个库，基本上将这一目录拷贝至其他地方就可以了。本章基本上都讨论该目录下的内容。该目录结构如下：</p>
<div><div id="highlighter_971402" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ ls</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">HEAD</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">branches/</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">config</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">description</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">hooks/</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">index</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">info/</code></div><div class="line number9 index8 alt2"><code class="actionscript3 plain">objects/</code></div><div class="line number10 index9 alt1"><code class="actionscript3 plain">refs/</code></div></div></td></tr></tbody></table></div></div>
<p>该目录下有可能还有其他文件，但这是一个全新的&nbsp;<code>git init</code>&nbsp;生成的库，所以默认情况下这些就是你能看到的结构。新版本的 Git 不再使用<code>branches</code>&nbsp;目录，<code>description</code>&nbsp;文件仅供 GitWeb 程序使用，所以不用关心这些内容。<code>config</code>&nbsp;文件包含了项目特有的配置选项，<code>info</code>&nbsp;目录保存了一份不希望在 .gitignore 文件中管理的忽略模式 (ignored patterns) 的全局可执行文件。<code>hooks</code>&nbsp;目录包住了第六章详细介绍了的客户端或服务端钩子脚本。</p>
<p>另外还有四个重要的文件或目录：<code>HEAD</code>&nbsp;及&nbsp;<code>index</code>&nbsp;文件，<code>objects</code>&nbsp;及<code>refs</code>&nbsp;目录。这些是 Git 的核心部分。<code>objects</code>&nbsp;目录存储所有数据内容，<code>refs</code>&nbsp;目录存储指向数据 (分支) 的提交对象的指针，<code>HEAD</code>&nbsp;文件指向当前分支，<code>index</code>&nbsp;文件保存了暂存区域信息。马上你将详细了解 Git 是如何操纵这些内容的。</p>
<p>&nbsp;</p>
<p id="git_"><span style="color: #ff0000;"><strong>9.2&nbsp; Git 对象</strong></span></p>
<p>Git 是一套内容寻址文件系统。很不错。不过这是什么意思呢？这种说法的意思是，从内部来看，Git 是简单的 key-value 数据存储。它允许插入任意类型的内容，并会返回一个键值，通过该键值可以在任何时候再取出该内容。可以通过底层命令<code>hash-object</code>&nbsp;来示范这点，传一些数据给该命令，它会将数据保存在&nbsp;<code>.git</code>&nbsp;目录并返回表示这些数据的键值。首先初使化一个 Git 仓库并确认<code>objects</code>&nbsp;目录是空的：</p>
<div><div id="highlighter_130509" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ mkdir test</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ cd test</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git init</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">Initialized empty Git repository </code><code class="actionscript3 keyword">in</code> <code class="actionscript3 plain">/tmp/test/.git/</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">$ find .git/objects</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">.git/objects</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">.git/objects/info</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">.git/objects/pack</code></div><div class="line number9 index8 alt2"><code class="actionscript3 plain">$ find .git/objects -type f</code></div><div class="line number10 index9 alt1"><code class="actionscript3 plain">$</code></div></div></td></tr></tbody></table></div></div>
<p>Git 初始化了&nbsp;<code>objects</code>&nbsp;目录，同时在该目录下创建了&nbsp;<code>pack</code>&nbsp;和&nbsp;<code>info</code>&nbsp;子目录，但是该目录下没有其他常规文件。我们往这个 Git 数据库里存储一些文本：</p>
<pre></pre>
<div><div id="highlighter_616955" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'test content'</code> <code class="actionscript3 plain">| git hash-object -w --stdin</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">d670460b4b4aece5915caf5c68d12f560a9fe3e4</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>参数&nbsp;<code>-w</code>&nbsp;指示&nbsp;<code>hash-object</code>&nbsp;命令存储 (数据) 对象，若不指定这个参数该命令仅仅返回键值。<code>--stdin</code>&nbsp;
指定从标准输入设备 (stdin) 来读取内容，若不指定这个参数则需指定一个要存储的文件的路径。该命令输出长度为 40 个字符的校验和。这是个 
SHA-1 哈希值──其值为要存储的数据加上你马上会了解到的一种头信息的校验和。现在可以查看到 Git 已经存储了数据：</p>
<div><div id="highlighter_584589" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ find .git/objects -type f</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4</code></div></div></td></tr></tbody></table></div></div>
<p>可以在&nbsp;<code>objects</code>&nbsp;目录下看到一个文件。这便是 Git 存储数据内容的方式──为每份内容生成一个文件，取得该内容与头信息的 SHA-1 校验和，创建以该校验和前两个字符为名称的子目录，并以 (校验和) 剩下 38 个字符为文件命名 (保存至子目录下)。</p>
<p>通过&nbsp;<code>cat-file</code>&nbsp;命令可以将数据内容取回。该命令是查看 Git 对象的瑞士军刀。传入&nbsp;<code>-p</code>&nbsp;参数可以让该命令输出数据内容的类型：</p>
<pre></pre>
<div><div id="highlighter_667411" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">test content</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>可以往 Git 中添加更多内容并取回了。也可以直接添加文件。比方说可以对一个文件进行简单的版本控制。首先，创建一个新文件，并把文件内容存储到数据库中：</p>
<div><div id="highlighter_81638" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'version 1'</code> <code class="actionscript3 plain">&gt; test.txt</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git hash-object -w test.txt</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">83baae61804e65cc73a7201a7252750c76066a30</code></div></div></td></tr></tbody></table></div></div>
<p>接着往该文件中写入一些新内容并再次保存：</p>
<div><div id="highlighter_442952" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'version 2'</code> <code class="actionscript3 plain">&gt; test.txt</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git hash-object -w test.txt</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">1f7a7a472abf3dd9643fd615f6da379c4acb3e3a</code></div></div></td></tr></tbody></table></div></div>
<p>数据库中已经将文件的两个新版本连同一开始的内容保存下来了：</p>
<div><div id="highlighter_747718" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ find .git/objects -type f</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">.git/objects/1f/7a7a472abf3dd9643fd615f6da379c4acb3e3a</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">.git/objects/</code><code class="actionscript3 value">83</code><code class="actionscript3 plain">/baae61804e65cc73a7201a7252750c76066a30</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4</code></div></div></td></tr></tbody></table></div></div>
<p>再将文件恢复到第一个版本：</p>
<pre></pre>
<div><div id="highlighter_755235" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p 83baae61804e65cc73a7201a7252750c76066a30 &gt; test.txt</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ cat test.txt</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">version </code><code class="actionscript3 value">1</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>或恢复到第二个版本：</p>
<pre></pre>
<div><div id="highlighter_917345" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a &gt; test.txt</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ cat test.txt</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">version </code><code class="actionscript3 value">2</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>需要记住的是几个版本的文件 SHA-1 值可能与实际的值不同，其次，存储的并不是文件名而仅仅是文件内容。这种对象类型称为 blob 。通过传递 SHA-1 值给<code>cat-file -t</code>&nbsp;命令可以让 Git 返回任何对象的类型：</p>
<pre></pre>
<div><div id="highlighter_715216" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -t 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">blob</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>&nbsp;</p>
<p><strong>tree (树) 对象</strong></p>
<p>接下去来看 tree 对象，tree 对象可以存储文件名，同时也允许存储一组文件。Git 以一种类似 UNIX 
文件系统但更简单的方式来存储内容。所有内容以 tree 或 blob 对象存储，其中 tree 对象对应于 UNIX 中的目录，blob 
对象则大致对应于 inodes 或文件内容。一个单独的 tree 对象包含一条或多条 tree 记录，每一条记录含有一个指向 blob 或子 
tree 对象的 SHA-1 指针，并附有该对象的权限模式 (mode)、类型和文件名信息。以 simplegit 项目为例，最新的 tree 
可能是这个样子：</p>
<div><div id="highlighter_839128" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p master^{tree}</code></div><div class="line number2 index1 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob a906cb2a4a904a152e80877d4088654daad0c859&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; README</code></div><div class="line number3 index2 alt2"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob 8f94139338f9404f26296befa88755fc2598c289&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Rakefile</code></div><div class="line number4 index3 alt1"><code class="actionscript3 value">040000</code> <code class="actionscript3 plain">tree 99f1a6d12cb4b6f19c8655fca46c3ecf317074e0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lib</code></div></div></td></tr></tbody></table></div></div>
<p><code>master^{tree}</code>&nbsp;表示&nbsp;<code>branch</code>&nbsp;分支上最新提交指向的 tree 对象。请注意&nbsp;<code>lib</code>&nbsp;子目录并非一个 blob 对象，而是一个指向别一个 tree 对象的指针：</p>
<pre></pre>
<div><div id="highlighter_74700" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p 99f1a6d12cb4b6f19c8655fca46c3ecf317074e0</code></div><div class="line number2 index1 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob 47c6340d6459e05787f644c2447d2595f5d3a54b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; simplegit.rb</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>从概念上来讲，Git 保存的数据如图 9-1 所示。<br>
</p><center><a href="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122841_684.png"><img class="aligncenter size-full wp-image-26215" title="Git详解之九：Git内部原理" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/20120201122841_684.png" alt="Git详解之九：Git内部原理" height="335" width="500"></a></center><p></p>
<p> 图 9-1. Git 对象模型的简化版</p>
<p>&nbsp;</p>
<p>你可以自己创建 tree 。通常 Git 根据你的暂存区域或 index 来创建并写入一个 tree 。因此要创建一个 tree 对象的话首先要通过将一些文件暂存从而创建一个 index 。可以使用 plumbing 命令<code>update-index</code>&nbsp;
为一个单独文件 ── test.txt 文件的第一个版本 ──&nbsp;&nbsp;&nbsp;&nbsp;创建一个 
index&nbsp;&nbsp;&nbsp;&nbsp;。通过该命令人为的将 test.txt 
文件的首个版本加入到了一个新的暂存区域中。由于该文件原先并不在暂存区域中 (甚至就连暂存区域也还没被创建出来呢) ，必须传入<code>--add</code>&nbsp;参数;由于要添加的文件并不在当前目录下而是在数据库中，必须传入&nbsp;<code>--cacheinfo</code>&nbsp;参数。同时指定了文件模式，SHA-1 值和文件名：</p>
<pre></pre>
<div><div id="highlighter_965167" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git update-index --add --cacheinfo </code><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">\</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;</code><code class="actionscript3 plain">83baae61804e65cc73a7201a7252750c76066a30 test.txt</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>在本例中，指定了文件模式为&nbsp;<code>100644</code>，表明这是一个普通文件。其他可用的模式有：<code>100755</code>&nbsp;表示可执行文件，<code>120000</code>&nbsp;表示符号链接。文件模式是从常规的 UNIX 文件模式中参考来的，但是没有那么灵活 ── 上述三种模式仅对 Git 中的文件 (blobs) 有效 (虽然也有其他模式用于目录和子模块)。</p>
<p>现在可以用&nbsp;<code>write-tree</code>&nbsp;命令将暂存区域的内容写到一个 tree 对象了。无需&nbsp;<code>-w</code>&nbsp;参数 ── 如果目标 tree 不存在，调用<code>write-tree</code>&nbsp;会自动根据 index 状态创建一个 tree 对象。</p>
<pre></pre>
<div><div id="highlighter_57961" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git write-tree</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">d8329fc1cc938780ffdd9f94e0d364e0ea74f579</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git cat-file -p d8329fc1cc938780ffdd9f94e0d364e0ea74f579</code></div><div class="line number4 index3 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob 83baae61804e65cc73a7201a7252750c76066a30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test.txt</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>可以这样验证这确实是一个 tree 对象：</p>
<pre></pre>
<div><div id="highlighter_872911" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -t d8329fc1cc938780ffdd9f94e0d364e0ea74f579</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">tree</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>再根据 test.txt 的第二个版本以及一个新文件创建一个新 tree 对象：</p>
<pre></pre>
<div><div id="highlighter_808777" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'new file'</code> <code class="actionscript3 plain">&gt; </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git update-index test.txt</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git update-index --add </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>这时暂存区域中包含了 test.txt 的新版本及一个新文件 new.txt 。创建 (写) 该 tree 对象 (将暂存区域或 index 状态写入到一个 tree 对象)，然后瞧瞧它的样子：</p>
<div><div id="highlighter_593881" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git write-tree</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">0155eb4229851634a0f03eb265b69f5a2d56f341</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git cat-file -p 0155eb4229851634a0f03eb265b69f5a2d56f341</code></div><div class="line number4 index3 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob fa49b077972391ad58037050f2a75f74e3671e92&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div><div class="line number5 index4 alt2"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test.txt</code></div></div></td></tr></tbody></table></div></div>
<p>请注意该 tree 对象包含了两个文件记录，且 test.txt 的 SHA 值是早先值的 “第二版” (<code>1f7a7a</code>)。来点更有趣的，你将把第一个 tree 对象作为一个子目录加进该 tree 中。可以用<code>read-tree</code>&nbsp;命令将 tree 对象读到暂存区域中去。在这时，通过传一个&nbsp;<code>--prefix</code>&nbsp;参数给&nbsp;<code>read-tree</code>，将一个已有的 tree 对象作为一个子 tree 读到暂存区域中：</p>
<div><div id="highlighter_808956" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git read-tree --prefix=bak d8329fc1cc938780ffdd9f94e0d364e0ea74f579</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git write-tree</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">3c4e9cd789d88d8d89c1073707c3585e41b0e614</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">$ git cat-file -p 3c4e9cd789d88d8d89c1073707c3585e41b0e614</code></div><div class="line number5 index4 alt2"><code class="actionscript3 value">040000</code> <code class="actionscript3 plain">tree d8329fc1cc938780ffdd9f94e0d364e0ea74f579&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bak</code></div><div class="line number6 index5 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob fa49b077972391ad58037050f2a75f74e3671e92&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div><div class="line number7 index6 alt2"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test.txt</code></div></div></td></tr></tbody></table></div></div>
<p>如果从刚写入的新 tree 对象创建一个工作目录，将得到位于工作目录顶级的两个文件和一个名为&nbsp;<code>bak</code>&nbsp;的子目录，该子目录包含了 test.txt 文件的第一个版本。可以将 Git 用来包含这些内容的数据想象成如图 9-2 所示的样子。</p>
<p></p><center><a href="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122842_622.png"><img class="aligncenter size-full wp-image-26216" title="Git详解之九：Git内部原理" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/20120201122842_622.png" alt="Git详解之九：Git内部原理" height="339" width="500"></a></center><p></p>
<p style="text-align: center;">图 9-2. 当前 Git 数据的内容结构</p>
<p><strong>commit (提交) 对象</strong></p>
<p>你现在有三个 tree 对象，它们指向了你要跟踪的项目的不同快照，可是先前的问题依然存在：必须记往三个 SHA-1 值以获得这些快照。你也没有关于谁、何时以及为何保存了这些快照的信息。commit 对象为你保存了这些基本信息。</p>
<p>要创建一个 commit 对象，使用&nbsp;<code>commit-tree</code>&nbsp;命令，指定一个 tree 的 SHA-1，如果有任何前继提交对象，也可以指定。从你写的第一个 tree 开始：</p>
<pre></pre>
<div><div id="highlighter_217962" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'first commit'</code> <code class="actionscript3 plain">| git commit-tree d8329f</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">fdf4fc3344e67ab068f836878b6c4951e3b15f3d</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>通过&nbsp;<code>cat-file</code>&nbsp;查看这个新 commit 对象：</p>
<div><div id="highlighter_124" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p fdf4fc3</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">tree d8329fc1cc938780ffdd9f94e0d364e0ea74f579</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">author Scott Chacon </code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 value">1243040974</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">committer Scott Chacon </code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 value">1243040974</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="actionscript3 plain">first commit</code></div></div></td></tr></tbody></table></div></div>
<p>commit 对象有格式很简单：指明了该时间点项目快照的顶层树对象、作者/提交者信息（从 Git 设理发店的&nbsp;<code>user.name</code>和<code>user.email</code>中获得)以及当前时间戳、一个空行，以及提交注释信息。</p>
<p>接着再写入另外两个 commit 对象，每一个都指定其之前的那个 commit 对象：</p>
<pre></pre>
<div><div id="highlighter_334074" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'second commit'</code> <code class="actionscript3 plain">| git commit-tree 0155eb -p fdf4fc3</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'third commit'</code>&nbsp; <code class="actionscript3 plain">| git commit-tree 3c4e9c -p cac0cab</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">1a410efbd13591db07496601ebc7a059dd55cfe9</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>每一个 commit 对象都指向了你创建的树对象快照。出乎意料的是，现在已经有了真实的 Git 历史了，所以如果运行&nbsp;<code>git log</code>&nbsp;命令并指定最后那个 commit 对象的 SHA-1 便可以查看历史：</p>
<div><div id="highlighter_230682" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git log --stat 1a410e</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">commit 1a410efbd13591db07496601ebc7a059dd55cfe9</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">Author: Scott Chacon </code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="actionscript3 keyword">Date</code><code class="actionscript3 plain">:&nbsp;&nbsp; Fri May </code><code class="actionscript3 value">22</code> <code class="actionscript3 value">18</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">15</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">24</code> <code class="actionscript3 value">2009</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">third commit</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">bak/test.txt |&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">+</code></div><div class="line number10 index9 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">files changed, </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">insertions(+), </code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">deletions(-)</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="actionscript3 plain">commit cac0cab538b970a37ea1e769cbbde608743bc96d</code></div><div class="line number13 index12 alt2"><code class="actionscript3 plain">Author: Scott Chacon </code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="actionscript3 keyword">Date</code><code class="actionscript3 plain">:&nbsp;&nbsp; Fri May </code><code class="actionscript3 value">22</code> <code class="actionscript3 value">18</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">14</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">29</code> <code class="actionscript3 value">2009</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">second commit</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt&nbsp; |&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">+</code></div><div class="line number20 index19 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">test.txt |&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 value">2</code> <code class="actionscript3 plain">+-</code></div><div class="line number21 index20 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 value">2</code> <code class="actionscript3 plain">files changed, </code><code class="actionscript3 value">2</code> <code class="actionscript3 plain">insertions(+), </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">deletions(-)</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="actionscript3 plain">commit fdf4fc3344e67ab068f836878b6c4951e3b15f3d</code></div><div class="line number24 index23 alt1"><code class="actionscript3 plain">Author: Scott Chacon </code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="actionscript3 keyword">Date</code><code class="actionscript3 plain">:&nbsp;&nbsp; Fri May </code><code class="actionscript3 value">22</code> <code class="actionscript3 value">18</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">09</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">34</code> <code class="actionscript3 value">2009</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number27 index26 alt2">&nbsp;</div><div class="line number28 index27 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">first commit</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">test.txt |&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">+</code></div><div class="line number31 index30 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">files changed, </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">insertions(+), </code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">deletions(-)</code></div></div></td></tr></tbody></table></div></div>
<p>真棒。你刚刚通过使用低级操作而不是那些普通命令创建了一个 Git 历史。这基本上就是运行&nbsp;&nbsp;&nbsp;&nbsp;<code>git add</code>&nbsp;和&nbsp;<code>git commit</code>命
令时 Git 进行的工作&nbsp;&nbsp;&nbsp;&nbsp;──保存修改了的文件的 blob，更新索引，创建 tree 
对象，最后创建 commit 对象，这些 commit 对象指向了顶层 tree 对象以及先前的 commit 对象。这三类 Git 对象 ──
 blob，tree 以及 tree ── 都各自以文件的方式保存在<code>.git/objects</code>&nbsp;目录下。以下所列是目前为止样例中的所有对象，每个对象后面的注释里标明了它们保存的内容：</p>
<div><div id="highlighter_598448" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ find .git/objects -type f</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">.git/objects/</code><code class="actionscript3 value">01</code><code class="actionscript3 plain">/55eb4229851634a0f03eb265b69f5a2d56f341 # tree </code><code class="actionscript3 value">2</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">.git/objects/1a/410efbd13591db07496601ebc7a059dd55cfe9 # commit </code><code class="actionscript3 value">3</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">.git/objects/1f/7a7a472abf3dd9643fd615f6da379c4acb3e3a # test.txt v2</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">.git/objects/3c/4e9cd789d88d8d89c1073707c3585e41b0e614 # tree </code><code class="actionscript3 value">3</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">.git/objects/</code><code class="actionscript3 value">83</code><code class="actionscript3 plain">/baae61804e65cc73a7201a7252750c76066a30 # test.txt v1</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">.git/objects/ca/c0cab538b970a37ea1e769cbbde608743bc96d # commit </code><code class="actionscript3 value">2</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4 # </code><code class="actionscript3 string">'test content'</code></div><div class="line number9 index8 alt2"><code class="actionscript3 plain">.git/objects/d8/329fc1cc938780ffdd9f94e0d364e0ea74f579 # tree </code><code class="actionscript3 value">1</code></div><div class="line number10 index9 alt1"><code class="actionscript3 plain">.git/objects/fa/49b077972391ad58037050f2a75f74e3671e92 # </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div><div class="line number11 index10 alt2"><code class="actionscript3 plain">.git/objects/fd/f4fc3344e67ab068f836878b6c4951e3b15f3d # commit </code><code class="actionscript3 value">1</code></div></div></td></tr></tbody></table></div></div>
<p>如果你按照以上描述进行了操作，可以得到如图 9-3 所示的对象图。</p>
<p></p><center><a href="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122843_478.png"><img class="aligncenter size-full wp-image-26217" title="Git详解之九：Git内部原理" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/20120201122843_478.png" alt="Git详解之九：Git内部原理" height="358" width="500"></a></center><p></p>
<p style="text-align: center;">图 9-3. Git 目录下的所有对象</p>
<p><strong>对象存储</strong></p>
<p>之前我提到当存储数据内容时，同时会有一个文件头被存储起来。我们花些时间来看看 Git 是如何存储对象的。你将看来如何通过 Ruby 脚本语言存储一个 blob 对象 (这里以字符串 “what is up, doc?” 为例) 。使用<code>irb</code>&nbsp;命令进入 Ruby 交互式模式：</p>
<pre></pre>
<div><div id="highlighter_310582" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ irb</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">&gt;&gt; content = </code><code class="actionscript3 string">"what is up, doc?"</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 string">"what is up, doc?"</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>Git 以对象类型为起始内容构造一个文件头，本例中是一个 blob。然后添加一个空格，接着是数据内容的长度，最后是一个空字节 (null byte)：</p>
<pre></pre>
<div><div id="highlighter_239785" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">&gt;&gt; header = </code><code class="actionscript3 string">"blob #{content.length}\0"</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 string">"blob 16\000"</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>Git 将文件头与原始数据内容拼接起来，并计算拼接后的新内容的 SHA-1 校验和。可以在 Ruby 中使用&nbsp;<code>require</code>&nbsp;语句导入 SHA1 digest 库，然后调用<code>Digest::SHA1.hexdigest()</code>&nbsp;方法计算字符串的 SHA-1 值：</p>
<div><div id="highlighter_966834" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">&gt;&gt; store = header + content</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 string">"blob 16\000what is up, doc?"</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">&gt;&gt; require </code><code class="actionscript3 string">'digest/sha1'</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 keyword">true</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">&gt;&gt; sha1 = Digest::SHA1.hexdigest(store)</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 string">"bd9dbf5aae1a3862dd1526723246b20206e5fc37"</code></div></div></td></tr></tbody></table></div></div>
<p>Git 用 zlib 对数据内容进行压缩，在 Ruby 中可以用 zlib 库来实现。首先需要导入该库，然后用<code>Zlib::Deflate.deflate()</code>&nbsp;对数据进行压缩：</p>
<div><div id="highlighter_960521" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">&gt;&gt; require </code><code class="actionscript3 string">'zlib'</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 keyword">true</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">&gt;&gt; zlib_content = Zlib::Deflate.deflate(store)</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 string">"x\234K\312\311OR04c(\317H,Q\310,V(-\320QH\311O\266\a\000_\034\a\235"</code></div></div></td></tr></tbody></table></div></div>
<p>最后将用 zlib 压缩后的内容写入磁盘。需要指定保存对象的路径 (SHA-1 值的头两个字符作为子目录名称，剩余 38 个字符作为文件名保存至该子目录中)。在 Ruby 中，如果子目录不存在可以用<code>FileUtils.mkdir_p()</code>&nbsp;函数创建它。接着用<code>File.open</code>&nbsp;方法打开文件，并用&nbsp;<code>write()</code>&nbsp;方法将之前压缩的内容写入该文件：</p>
<pre></pre>
<div><div id="highlighter_141611" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">&gt;&gt; path = </code><code class="actionscript3 string">'.git/objects/'</code> <code class="actionscript3 plain">+ sha1[</code><code class="actionscript3 value">0</code><code class="actionscript3 plain">,</code><code class="actionscript3 value">2</code><code class="actionscript3 plain">] + </code><code class="actionscript3 string">'/'</code> <code class="actionscript3 plain">+ sha1[</code><code class="actionscript3 value">2</code><code class="actionscript3 plain">,</code><code class="actionscript3 value">38</code><code class="actionscript3 plain">]</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 string">".git/objects/bd/9dbf5aae1a3862dd1526723246b20206e5fc37"</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">&gt;&gt; require </code><code class="actionscript3 string">'fileutils'</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 keyword">true</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">&gt;&gt; FileUtils.mkdir_p(File.dirname(path))</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 string">".git/objects/bd"</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">&gt;&gt; File.open(path, </code><code class="actionscript3 string">'w'</code><code class="actionscript3 plain">) { |f| f.write zlib_content }</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">=&gt; </code><code class="actionscript3 value">32</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>这就行了 ── 你已经创建了一个正确的 blob 对象。所有的 Git 对象都以这种方式存储，惟一的区别是类型不同 ── 除了字符串 
blob，文件头起始内容还可以是 commit 或 tree 。不过虽然 blob 几乎可以是任意内容，commit 和 tree 
的数据却是有固定格式的。</p>
<p>&nbsp;</p>
<p><span style="color: #ff0000;"><strong>9.3&nbsp; Git References</strong></span></p>
<p>你可以执行像&nbsp;<code>git log 1a410e</code>&nbsp;这样的命令来查看完整的历史，但是这样你就要记得&nbsp;<code>1a410e</code>&nbsp;是你最后一次提交，这样才能在提交历史中找到这些对象。你需要一个文件来用一个简单的名字来记录这些 SHA-1 值，这样你就可以用这些指针而不是原来的 SHA-1 值去检索了。</p>
<p>在 Git 中，我们称之为“引用”（references 或者 refs，译者注）。你可以在&nbsp;<code>.git/refs</code>&nbsp;目录下面找到这些包含 SHA-1 值的文件。在这个项目里，这个目录还没不包含任何文件，但是包含这样一个简单的结构：</p>
<pre></pre>
<div><div id="highlighter_4589" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ find .git/refs</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">.git/refs</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">.git/refs/heads</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">.git/refs/tags</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">$ find .git/refs -type f</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">$</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>如果想要创建一个新的引用帮助你记住最后一次提交，技术上你可以这样做：</p>
<div><div id="highlighter_414699" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">&lt;code&gt;$ echo </code><code class="actionscript3 string">"1a410efbd13591db07496601ebc7a059dd55cfe9"</code> <code class="actionscript3 plain">&amp;gt; .git/refs/heads/master&lt;/code&gt;</code></div></div></td></tr></tbody></table></div></div>
<p>现在，你就可以在 Git 命令中使用你刚才创建的引用而不是 SHA-1 值：</p>
<div><div id="highlighter_990488" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git log --pretty=oneline&nbsp; master</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">1a410efbd13591db07496601ebc7a059dd55cfe9 third commit</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d second commit</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">fdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit</code></div></div></td></tr></tbody></table></div></div>
<p>当然，我们并不鼓励你直接修改这些引用文件。如果你确实需要更新一个引用，Git 提供了一个安全的命令&nbsp;<code>update-ref</code>：</p>
<div><div id="highlighter_678236" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git update-ref refs/heads/master 1a410efbd13591db07496601ebc7a059dd55cfe9</code></div></div></td></tr></tbody></table></div></div>
<p>基本上 Git 中的一个分支其实就是一个指向某个工作版本一条 HEAD 记录的指针或引用。你可以用这条命令创建一个指向第二次提交的分支：</p>
<div><div id="highlighter_561025" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git update-ref refs/heads/test cac0ca</code></div></div></td></tr></tbody></table></div></div>
<p>这样你的分支将会只包含那次提交以及之前的工作：</p>
<div><div id="highlighter_518097" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git log --pretty=oneline test</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d second commit</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">fdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit</code></div></div></td></tr></tbody></table></div></div>
<p>现在，你的 Git 数据库应该看起来像图 9-4 一样。</p>
<p></p><center><a href="http://jbcdn2.b0.upaiyun.com/2012/08/20120201122844_77.png"><img class="aligncenter size-full wp-image-26214" title="Git详解之九：Git内部原理" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/20120201122844_77.png" alt="Git详解之九：Git内部原理" height="269" width="500"></a></center><p></p>
<p style="text-align: center;">图 9-4. 包含分支引用的 Git 目录对象</p>
<p>每当你执行&nbsp;<code>git branch (分支名称)</code>&nbsp;这样的命令，Git 基本上就是执行&nbsp;<code>update-ref</code>&nbsp;命令，把你现在所在分支中最后一次提交的 SHA-1 值，添加到你要创建的分支的引用。</p>
<p>&nbsp;</p>
<p id="head_"><strong>HEAD 标记</strong></p>
<p>现在的问题是，当你执行&nbsp;<code>git branch (分支名称)</code>&nbsp;这条命令的时候，Git 
怎么知道最后一次提交的 SHA-1 值呢？答案就是 HEAD 文件。HEAD 
文件是一个指向你当前所在分支的引用标识符。这样的引用标识符——它看起来并不像一个普通的引用——其实并不包含 SHA-1 
值，而是一个指向另外一个引用的指针。如果你看一下这个文件，通常你将会看到这样的内容：</p>
<pre></pre>
<div><div id="highlighter_600324" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ cat .git/HEAD</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">ref: refs/heads/master</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>如果你执行&nbsp;<code>git checkout test</code>，Git 就会更新这个文件，看起来像这样：</p>
<pre></pre>
<div><div id="highlighter_30628" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ cat .git/HEAD</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">ref: refs/heads/test</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>当你再执行&nbsp;<code>git commit</code>&nbsp;命令，它就创建了一个 commit 对象，把这个 commit 对象的父级设置为 HEAD 指向的引用的 SHA-1 值。</p>
<p>你也可以手动编辑这个文件，但是同样有一个更安全的方法可以这样做：<code>symbolic-ref</code>。你可以用下面这条命令读取 HEAD 的值：</p>
<pre></pre>
<div><div id="highlighter_606847" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git symbolic-ref HEAD</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">refs/heads/master</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>你也可以设置 HEAD 的值：</p>
<pre></pre>
<div><div id="highlighter_426273" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git symbolic-ref HEAD refs/heads/test</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ cat .git/HEAD</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">ref: refs/heads/test</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>但是你不能设置成 refs 以外的形式：</p>
<pre></pre>
<div><div id="highlighter_493823" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git symbolic-ref HEAD test</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">fatal: Refusing to point HEAD outside of refs/</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>&nbsp;</p>
<p><strong>Tags</strong></p>
<p>你刚刚已经重温过了 Git 的三个主要对象类型，现在这是第四种。Tag 对象非常像一个 commit 
对象——包含一个标签，一组数据，一个消息和一个指针。最主要的区别就是 Tag 对象指向一个 commit 而不是一个 
tree。它就像是一个分支引用，但是不会变化——永远指向同一个 commit，仅仅是提供一个更加友好的名字。</p>
<p>正如我们在第二章所讨论的，Tag 有两种类型：annotated 和 lightweight 。你可以类似下面这样的命令建立一个 lightweight tag：</p>
<div><div id="highlighter_663986" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git update-ref refs/tags/v1.</code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d</code></div></div></td></tr></tbody></table></div></div>
<p>这就是 lightweight tag 的全部 —— 一个永远不会发生变化的分支。 annotated tag 
要更复杂一点。如果你创建一个 annotated tag，Git 会创建一个 tag 对象，然后写入一个指向指向它而不是直接指向 commit 的
 reference。你可以这样创建一个 annotated tag（<code>-a</code>&nbsp;参数表明这是一个 annotated tag）：</p>
<div><div id="highlighter_214531" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git tag -a v1.</code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">1a410efbd13591db07496601ebc7a059dd55cfe9 -m </code><code class="actionscript3 string">'test tag'</code></div></div></td></tr></tbody></table></div></div>
<p>这是所创建对象的 SHA-1 值：</p>
<pre></pre>
<div><div id="highlighter_129685" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ cat .git/refs/tags/v1.</code><code class="actionscript3 value">1</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">9585191f37f7b0fb9444f35a9bf50de191beadc2</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>现在你可以运行&nbsp;<code>cat-file</code>&nbsp;命令检查这个 SHA-1 值：</p>
<div><div id="highlighter_594897" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p 9585191f37f7b0fb9444f35a9bf50de191beadc2</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">object 1a410efbd13591db07496601ebc7a059dd55cfe9</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">type commit</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">tag v1.</code><code class="actionscript3 value">1</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">tagger Scott Chacon </code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">Sat May </code><code class="actionscript3 value">23</code> <code class="actionscript3 value">16</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">48</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">58</code> <code class="actionscript3 value">2009</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="actionscript3 plain">test tag</code></div></div></td></tr></tbody></table></div></div>
<p>值得注意的是这个对象指向你所标记的 commit 对象的 SHA-1 值。同时需要注意的是它并不是必须要指向一个 commit 
对象；你可以标记任何 Git 对象。例如，在 Git 的源代码里，管理者添加了一个 GPG 公钥（这是一个 blob 
对象）对它做了一个标签。你就可以运行：</p>
<div><div id="highlighter_102604" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file blob junio-gpg-pub</code></div></div></td></tr></tbody></table></div></div>
<p>来查看 Git 源代码仓库中的公钥. Linux kernel 也有一个不是指向 commit 对象的 tag —— 第一个 tag 是在导入源代码的时候创建的，它指向初始 tree （initial tree，译者注）。github</p>
<p>&nbsp;</p>
<p id="remotes"><strong>Remotes</strong></p>
<p>你将会看到的第四种 reference 是 remote reference（远程引用，译者注）。如果你添加了一个 remote 然后推送代码过去，Git 会把你最后一次推送到这个 remote 的每个分支的值都记录在<code>refs/remotes</code>&nbsp;目录下。例如，你可以添加一个叫做<code>origin</code>&nbsp;的 remote 然后把你的&nbsp;<code>master</code>&nbsp;分支推送上去：</p>
<div><div id="highlighter_756824" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git remote add origin git@ github.com:schacon/simplegit-progit.git</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git push origin master</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">Counting objects: </code><code class="actionscript3 value">11</code><code class="actionscript3 plain">, done.</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">Compressing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">5</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">5</code><code class="actionscript3 plain">), done.</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">Writing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">7</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">7</code><code class="actionscript3 plain">), </code><code class="actionscript3 value">716</code> <code class="actionscript3 plain">bytes, done.</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">Total </code><code class="actionscript3 value">7</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">2</code><code class="actionscript3 plain">), reused </code><code class="actionscript3 value">4</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">1</code><code class="actionscript3 plain">)</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">To git@ github.com:schacon/simplegit-progit.git</code></div><div class="line number8 index7 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">a11bef0..ca82a6d&nbsp; master -&gt; master</code></div></div></td></tr></tbody></table></div></div>
<p>然后查看&nbsp;<code>refs/remotes/origin/master</code>&nbsp;这个文件，你就会发现&nbsp;<code>origin</code>&nbsp;remote 中的<code>master</code>&nbsp;分支就是你最后一次和服务器的通信。</p>
<div><div id="highlighter_730308" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ cat .git/refs/remotes/origin/master</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">ca82a6dff817ec66f44342007202690a93763949</code></div></div></td></tr></tbody></table></div></div>
<p>Remote 应用和分支主要区别在于他们是不能被 check out 的。Git 把他们当作是标记这些了这些分支在服务器上最后状态的一种书签。</p>
<p>&nbsp;</p>
<p id="packfiles"><strong>9.4&nbsp; Packfiles</strong></p>
<p>我们再来看一下 test Git 仓库。目前为止，有 11 个对象 ── 4 个 blob，3 个 tree，3 个 commit 以及一个 tag：</p>
<div><div id="highlighter_970744" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ find .git/objects -type f</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">.git/objects/</code><code class="actionscript3 value">01</code><code class="actionscript3 plain">/55eb4229851634a0f03eb265b69f5a2d56f341 # tree </code><code class="actionscript3 value">2</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">.git/objects/1a/410efbd13591db07496601ebc7a059dd55cfe9 # commit </code><code class="actionscript3 value">3</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">.git/objects/1f/7a7a472abf3dd9643fd615f6da379c4acb3e3a # test.txt v2</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">.git/objects/3c/4e9cd789d88d8d89c1073707c3585e41b0e614 # tree </code><code class="actionscript3 value">3</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">.git/objects/</code><code class="actionscript3 value">83</code><code class="actionscript3 plain">/baae61804e65cc73a7201a7252750c76066a30 # test.txt v1</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">.git/objects/</code><code class="actionscript3 value">95</code><code class="actionscript3 plain">/85191f37f7b0fb9444f35a9bf50de191beadc2 # tag</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">.git/objects/ca/c0cab538b970a37ea1e769cbbde608743bc96d # commit </code><code class="actionscript3 value">2</code></div><div class="line number9 index8 alt2"><code class="actionscript3 plain">.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4 # </code><code class="actionscript3 string">'test content'</code></div><div class="line number10 index9 alt1"><code class="actionscript3 plain">.git/objects/d8/329fc1cc938780ffdd9f94e0d364e0ea74f579 # tree </code><code class="actionscript3 value">1</code></div><div class="line number11 index10 alt2"><code class="actionscript3 plain">.git/objects/fa/49b077972391ad58037050f2a75f74e3671e92 # </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div><div class="line number12 index11 alt1"><code class="actionscript3 plain">.git/objects/fd/f4fc3344e67ab068f836878b6c4951e3b15f3d # commit </code><code class="actionscript3 value">1</code></div></div></td></tr></tbody></table></div></div>
<p>Git 用 zlib 压缩文件内容，因此这些文件并没有占用太多空间，所有文件加起来总共仅用了 925 字节。接下去你会添加一些大文件以演示
 Git 的一个很有意思的功能。将你之前用到过的 Grit 库中的 repo.rb 文件加进去 ── 这个源代码文件大小约为 12K：</p>
<div><div id="highlighter_907185" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ curl http:</code><code class="actionscript3 comments">//github.com/mojombo/grit/raw/master/lib/grit/repo.rb &gt; repo.rb</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git add repo.rb</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git commit -m </code><code class="actionscript3 string">'added repo.rb'</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">[master 484a592] added repo.rb</code></div><div class="line number5 index4 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 value">3</code> <code class="actionscript3 plain">files changed, </code><code class="actionscript3 value">459</code> <code class="actionscript3 plain">insertions(+), </code><code class="actionscript3 value">2</code> <code class="actionscript3 plain">deletions(-)</code></div><div class="line number6 index5 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 keyword">delete</code> <code class="actionscript3 plain">mode </code><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">bak/test.txt</code></div><div class="line number7 index6 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">create mode </code><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">repo.rb</code></div><div class="line number8 index7 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">rewrite test.txt (</code><code class="actionscript3 value">100</code><code class="actionscript3 plain">%)</code></div></div></td></tr></tbody></table></div></div>
<p>如果查看一下生成的 tree，可以看到 repo.rb 文件的 blob 对象的 SHA-1 值：</p>
<div><div id="highlighter_110900" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p master^{tree}</code></div><div class="line number2 index1 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob fa49b077972391ad58037050f2a75f74e3671e92&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div><div class="line number3 index2 alt2"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob 9bc1dc421dcd51b4ac296e3e5b6e2a99cf44391e&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repo.rb</code></div><div class="line number4 index3 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob e3f094f522629ae358806b17daf78246c27c007b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test.txt</code></div></div></td></tr></tbody></table></div></div>
<p>然后可以用&nbsp;<code>git cat-file</code>&nbsp;命令查看这个对象有多大：</p>
<pre></pre>
<div><div id="highlighter_417268" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -s 9bc1dc421dcd51b4ac296e3e5b6e2a99cf44391e</code></div><div class="line number2 index1 alt1"><code class="actionscript3 value">12898</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>稍微修改一下些文件，看会发生些什么：</p>
<div><div id="highlighter_575563" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ echo </code><code class="actionscript3 string">'# testing'</code> <code class="actionscript3 plain">&gt;&gt; repo.rb</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git commit -am </code><code class="actionscript3 string">'modified repo a bit'</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">[master ab1afef] modified repo a bit</code></div><div class="line number4 index3 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">files changed, </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">insertions(+), </code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">deletions(-)</code></div></div></td></tr></tbody></table></div></div>
<p>查看这个 commit 生成的 tree，可以看到一些有趣的东西：</p>
<div><div id="highlighter_587378" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p master^{tree}</code></div><div class="line number2 index1 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob fa49b077972391ad58037050f2a75f74e3671e92&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 keyword">new</code><code class="actionscript3 plain">.txt</code></div><div class="line number3 index2 alt2"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob 05408d195263d853f09dca71d55116663690c27c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repo.rb</code></div><div class="line number4 index3 alt1"><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">blob e3f094f522629ae358806b17daf78246c27c007b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test.txt</code></div></div></td></tr></tbody></table></div></div>
<p>blob 对象与之前的已经不同了。这说明虽然只是往一个 400 行的文件最后加入了一行内容，Git 却用一个全新的对象来保存新的文件内容：</p>
<pre></pre>
<div><div id="highlighter_754584" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -s 05408d195263d853f09dca71d55116663690c27c</code></div><div class="line number2 index1 alt1"><code class="actionscript3 value">12908</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>你的磁盘上有了两个几乎完全相同的 12K 的对象。如果 Git 只完整保存其中一个，并保存另一个对象的差异内容，岂不更好？</p>
<p>事实上 Git 可以那样做。Git 往磁盘保存对象时默认使用的格式叫松散对象 (loose object) 格式。Git 时不时地将这些对象打包至一个叫 packfile 的二进制文件以节省空间并提高效率。当仓库中有太多的松散对象，或是手工调用<code>git gc</code>&nbsp;命令，或推送至远程服务器时，Git 都会这样做。手工调用&nbsp;<code>git gc</code>&nbsp;命令让 Git 将库中对象打包并看会发生些什么：</p>
<div><div id="highlighter_456358" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git gc</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">Counting objects: </code><code class="actionscript3 value">17</code><code class="actionscript3 plain">, done.</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">Delta compression using </code><code class="actionscript3 value">2</code> <code class="actionscript3 plain">threads.</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">Compressing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">13</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">13</code><code class="actionscript3 plain">), done.</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">Writing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">17</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">17</code><code class="actionscript3 plain">), done.</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">Total </code><code class="actionscript3 value">17</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">1</code><code class="actionscript3 plain">), reused </code><code class="actionscript3 value">10</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">0</code><code class="actionscript3 plain">)</code></div></div></td></tr></tbody></table></div></div>
<p>查看一下 objects 目录，会发现大部分对象都不在了，与此同时出现了两个新文件：</p>
<div><div id="highlighter_374071" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ find .git/objects -type f</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">.git/objects/</code><code class="actionscript3 value">71</code><code class="actionscript3 plain">/08f7ecb345ee9d0084193f147cdad4d2998293</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">.git/objects/info/packs</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">.git/objects/pack/pack-7a16e4488ae40c7d2bc56ea2bd43e25212a66c45.idx</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">.git/objects/pack/pack-7a16e4488ae40c7d2bc56ea2bd43e25212a66c45.pack</code></div></div></td></tr></tbody></table></div></div>
<p>仍保留着的几个对象是未被任何 commit 引用的 blob ── 在此例中是你之前创建的 “what is up, doc?” 和 
“test content” 这两个示例 blob。你从没将他们添加至任何 commit，所以 Git 认为它们是 “悬空” 
的，不会将它们打包进 packfile 。</p>
<p>剩下的文件是新创建的 packfile 以及一个索引。packfile 文件包含了刚才从文件系统中移除的所有对象。索引文件包含了 packfile 的偏移信息，这样就可以快速定位任意一个指定对象。有意思的是运行<code>gc</code>&nbsp;命令前磁盘上的对象大小约为 12K ，而这个新生成的 packfile 仅为 6K 大小。通过打包对象减少了一半磁盘使用空间。</p>
<p>Git 是如何做到这点的？Git 打包对象时，会查找命名及尺寸相近的文件，并只保存文件不同版本之间的差异内容。可以查看一下 packfile ，观察它是如何节省空间的。<code>git verify-pack</code>&nbsp;命令用于显示已打包的内容：</p>
<div><div id="highlighter_219546" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git verify-pack -v \</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;</code><code class="actionscript3 plain">.git/objects/pack/pack-7a16e4488ae40c7d2bc56ea2bd43e25212a66c45.idx</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">0155eb4229851634a0f03eb265b69f5a2d56f341 tree&nbsp;&nbsp; </code><code class="actionscript3 value">71</code> <code class="actionscript3 value">76</code> <code class="actionscript3 value">5400</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">05408d195263d853f09dca71d55116663690c27c blob&nbsp;&nbsp; </code><code class="actionscript3 value">12908</code> <code class="actionscript3 value">3478</code> <code class="actionscript3 value">874</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">09f01cea547666f58d6a8d809583841a7c6f0130 tree&nbsp;&nbsp; </code><code class="actionscript3 value">106</code> <code class="actionscript3 value">107</code> <code class="actionscript3 value">5086</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">1a410efbd13591db07496601ebc7a059dd55cfe9 commit </code><code class="actionscript3 value">225</code> <code class="actionscript3 value">151</code> <code class="actionscript3 value">322</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">1f7a7a472abf3dd9643fd615f6da379c4acb3e3a blob&nbsp;&nbsp; </code><code class="actionscript3 value">10</code> <code class="actionscript3 value">19</code> <code class="actionscript3 value">5381</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">3c4e9cd789d88d8d89c1073707c3585e41b0e614 tree&nbsp;&nbsp; </code><code class="actionscript3 value">101</code> <code class="actionscript3 value">105</code> <code class="actionscript3 value">5211</code></div><div class="line number9 index8 alt2"><code class="actionscript3 plain">484a59275031909e19aadb7c92262719cfcdf19a commit </code><code class="actionscript3 value">226</code> <code class="actionscript3 value">153</code> <code class="actionscript3 value">169</code></div><div class="line number10 index9 alt1"><code class="actionscript3 plain">83baae61804e65cc73a7201a7252750c76066a30 blob&nbsp;&nbsp; </code><code class="actionscript3 value">10</code> <code class="actionscript3 value">19</code> <code class="actionscript3 value">5362</code></div><div class="line number11 index10 alt2"><code class="actionscript3 plain">9585191f37f7b0fb9444f35a9bf50de191beadc2 tag&nbsp;&nbsp;&nbsp; </code><code class="actionscript3 value">136</code> <code class="actionscript3 value">127</code> <code class="actionscript3 value">5476</code></div><div class="line number12 index11 alt1"><code class="actionscript3 plain">9bc1dc421dcd51b4ac296e3e5b6e2a99cf44391e blob&nbsp;&nbsp; </code><code class="actionscript3 value">7</code> <code class="actionscript3 value">18</code> <code class="actionscript3 value">5193</code> <code class="actionscript3 value">1</code></div><div class="line number13 index12 alt2"><code class="actionscript3 plain">05408d195263d853f09dca71d55116663690c27c \</code></div><div class="line number14 index13 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;</code><code class="actionscript3 plain">ab1afef80fac8e34258ff41fc1b867c702daa24b commit </code><code class="actionscript3 value">232</code> <code class="actionscript3 value">157</code> <code class="actionscript3 value">12</code></div><div class="line number15 index14 alt2"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d commit </code><code class="actionscript3 value">226</code> <code class="actionscript3 value">154</code> <code class="actionscript3 value">473</code></div><div class="line number16 index15 alt1"><code class="actionscript3 plain">d8329fc1cc938780ffdd9f94e0d364e0ea74f579 tree&nbsp;&nbsp; </code><code class="actionscript3 value">36</code> <code class="actionscript3 value">46</code> <code class="actionscript3 value">5316</code></div><div class="line number17 index16 alt2"><code class="actionscript3 plain">e3f094f522629ae358806b17daf78246c27c007b blob&nbsp;&nbsp; </code><code class="actionscript3 value">1486</code> <code class="actionscript3 value">734</code> <code class="actionscript3 value">4352</code></div><div class="line number18 index17 alt1"><code class="actionscript3 plain">f8f51d7d8a1760462eca26eebafde32087499533 tree&nbsp;&nbsp; </code><code class="actionscript3 value">106</code> <code class="actionscript3 value">107</code> <code class="actionscript3 value">749</code></div><div class="line number19 index18 alt2"><code class="actionscript3 plain">fa49b077972391ad58037050f2a75f74e3671e92 blob&nbsp;&nbsp; </code><code class="actionscript3 value">9</code> <code class="actionscript3 value">18</code> <code class="actionscript3 value">856</code></div><div class="line number20 index19 alt1"><code class="actionscript3 plain">fdf4fc3344e67ab068f836878b6c4951e3b15f3d commit </code><code class="actionscript3 value">177</code> <code class="actionscript3 value">122</code> <code class="actionscript3 value">627</code></div><div class="line number21 index20 alt2"><code class="actionscript3 plain">chain length = </code><code class="actionscript3 value">1</code><code class="actionscript3 plain">: </code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">object</code></div><div class="line number22 index21 alt1"><code class="actionscript3 plain">pack-7a16e4488ae40c7d2bc56ea2bd43e25212a66c45.pack: ok</code></div></div></td></tr></tbody></table></div></div>
<p>如果你还记得的话, 9bc1d 这个 blob 是 repo.rb 文件的第一个版本，这个 blob 引用了 05408这个 
blob，即该文件的第二个版本。命令输出内容的第三列显示的是对象大小，可以看到05408占用了 12K 空间，而 9bc1d 仅为 7 
字节。非常有趣的是第二个版本才是完整保存文件内容的对象，而第一个版本是以差异方式保存的 ── 这是因为大部分情况下需要快速访问文件的最新版本。</p>
<p>最妙的是可以随时进行重新打包。Git 自动定期对仓库进行重新打包以节省空间。当然也可以手工运行&nbsp;<code>git gc</code>&nbsp;命令来这么做。</p>
<p>&nbsp;</p>
<p id="the_refspec"><strong>9.5&nbsp; The Refspec</strong></p>
<p>这本书读到这里，你已经使用过一些简单的远程分支到本地引用的映射方式了，这种映射可以更为复杂。 假设你像这样添加了一项远程仓库：</p>
<div><div id="highlighter_759099" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git remote add origin git@ github.com:schacon/simplegit-progit.git</code></div></div></td></tr></tbody></table></div></div>
<p>它在你的&nbsp;<code>.git/config</code>&nbsp;文件中添加了一节，指定了远程的名称 (<code>origin</code>), 远程仓库的URL地址，和用于获取操作的 Refspec:</p>
<div><div id="highlighter_295817" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">[remote </code><code class="actionscript3 string">"origin"</code><code class="actionscript3 plain">]</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">url = git@ github.com:schacon/simplegit-progit.git</code></div><div class="line number3 index2 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">fetch = +refs/heads/*:refs/remotes/origin/*</code></div></div></td></tr></tbody></table></div></div>
<p>Refspec 的格式是一个可选的&nbsp;<code>+</code>&nbsp;号，接着是&nbsp;<code>:&nbsp;</code>的格式，这里&nbsp;<code></code>是远端上的引用格式，<code>&nbsp;</code>是将要记录在本地的引用格式。可选的&nbsp;<code>+</code>&nbsp;号告诉 Git 在即使不能快速演进的情况下，也去强制更新它。</p>
<p>缺省情况下 refspec 会被&nbsp;<code>git remote add</code>&nbsp;命令所自动生成， Git 会获取远端上&nbsp;<code>refs/heads/</code>&nbsp;下面的所有引用，并将它写入到本地的<code>refs/remotes/origin/</code>. 所以，如果远端上有一个&nbsp;<code>master</code>&nbsp;分支，你在本地可以通过下面这种方式来访问它的历史记录：</p>
<div><div id="highlighter_50714" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git log origin/master</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git log remotes/origin/master</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git log refs/remotes/origin/master</code></div></div></td></tr></tbody></table></div></div>
<p>它们全是等价的，因为 Git 把它们都扩展成&nbsp;<code>refs/remotes/origin/master</code>.</p>
<p>如果你想让 Git 每次只拉取远程的&nbsp;<code>master</code>&nbsp;分支，而不是远程的所有分支，你可以把 fetch 这一行修改成这样：</p>
<div><div id="highlighter_60495" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">fetch = +refs/heads/master:refs/remotes/origin/master</code></div></div></td></tr></tbody></table></div></div>
<p>这是&nbsp;<code>git fetch</code>&nbsp;操作对这个远端的缺省 refspec 值。而如果你只想做一次该操作，也可以在命令行上指定这个 refspec. 如可以这样拉取远程的<code>master</code>&nbsp;分支到本地的&nbsp;<code>origin/mymaster</code>&nbsp;分支：</p>
<div><div id="highlighter_452164" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git fetch origin master:refs/remotes/origin/mymaster</code></div></div></td></tr></tbody></table></div></div>
<p>你也可以在命令行上指定多个 refspec. 像这样可以一次获取远程的多个分支：</p>
<div><div id="highlighter_946598" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git fetch origin master:refs/remotes/origin/mymaster \</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">topic:refs/remotes/origin/topic</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">From git@ github.com:schacon/simplegit</code></div><div class="line number4 index3 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">! [rejected]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; master&nbsp;&nbsp;&nbsp;&nbsp; -&gt; origin/mymaster&nbsp; (non fast forward)</code></div><div class="line number5 index4 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">* [</code><code class="actionscript3 keyword">new</code> <code class="actionscript3 plain">branch]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; topic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; origin/topic</code></div></div></td></tr></tbody></table></div></div>
<p>在这个例子中，&nbsp;<code>master</code>&nbsp;分支因为不是一个可以快速演进的引用而拉取操作被拒绝。你可以在 refspec 之前使用一个&nbsp;<code>+</code>&nbsp;号来重载这种行为。</p>
<p>你也可以在配置文件中指定多个 refspec. 如你想在每次获取时都获取&nbsp;<code>master</code>&nbsp;和&nbsp;<code>experiment</code>&nbsp;分支，就添加两行：</p>
<div><div id="highlighter_393236" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">[remote </code><code class="actionscript3 string">"origin"</code><code class="actionscript3 plain">]</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">url = git@ github.com:schacon/simplegit-progit.git</code></div><div class="line number3 index2 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">fetch = +refs/heads/master:refs/remotes/origin/master</code></div><div class="line number4 index3 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">fetch = +refs/heads/experiment:refs/remotes/origin/experiment</code></div></div></td></tr></tbody></table></div></div>
<p>但是这里不能使用部分通配符，像这样就是不合法的：</p>
<div><div id="highlighter_259057" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">fetch = +refs/heads/qa*:refs/remotes/origin/qa*</code></div></div></td></tr></tbody></table></div></div>
<p>但无论如何，你可以使用命名空间来达到这个目的。如你有一个QA组，他们推送一系列分支，你想每次获取&nbsp;<code>master</code>&nbsp;分支和QA组的所有分支，你可以使用这样的配置段落：</p>
<div><div id="highlighter_835466" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">[remote </code><code class="actionscript3 string">"origin"</code><code class="actionscript3 plain">]</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">url = git@ github.com:schacon/simplegit-progit.git</code></div><div class="line number3 index2 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">fetch = +refs/heads/master:refs/remotes/origin/master</code></div><div class="line number4 index3 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">fetch = +refs/heads/qa/*:refs/remotes/origin/qa/*</code></div></div></td></tr></tbody></table></div></div>
<p>如果你的工作流很复杂，有QA组推送的分支、开发人员推送的分支、和集成人员推送的分支，并且他们在远程分支上协作，你可以采用这种方式为他们创建各自的命名空间。</p>
<p>&nbsp;</p>
<p id="_refspec"><strong>推送 Refspec</strong></p>
<p>采用命名空间的方式确实很棒，但QA组成员第1次是如何将他们的分支推送到&nbsp;<code>qa/</code>&nbsp;空间里面的呢？答案是你可以使用 refspec 来推送。</p>
<p>如果QA组成员想把他们的&nbsp;<code>master</code>&nbsp;分支推送到远程的&nbsp;<code>qa/master</code>&nbsp;分支上，可以这样运行：</p>
<div><div id="highlighter_210221" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git push origin master:refs/heads/qa/master</code></div></div></td></tr></tbody></table></div></div>
<p>如果他们想让 Git 每次运行&nbsp;<code>git push origin</code>&nbsp;时都这样自动推送，他们可以在配置文件中添加&nbsp;<code>push</code>&nbsp;值：</p>
<div><div id="highlighter_984802" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">[remote </code><code class="actionscript3 string">"origin"</code><code class="actionscript3 plain">]</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">url = git@ github.com:schacon/simplegit-progit.git</code></div><div class="line number3 index2 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">fetch = +refs/heads/*:refs/remotes/origin/*</code></div><div class="line number4 index3 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">push = refs/heads/master:refs/heads/qa/master</code></div></div></td></tr></tbody></table></div></div>
<p>这样，就会让&nbsp;<code>git push origin</code>&nbsp;缺省就把本地的&nbsp;<code>master</code>&nbsp;分支推送到远程的&nbsp;<code>qa/master</code>&nbsp;分支上。</p>
<p>&nbsp;</p>
<p id="id398"><strong>删除引用</strong></p>
<p>你也可以使用 refspec 来删除远程的引用，是通过运行这样的命令：</p>
<div><div id="highlighter_223787" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git push origin :topic</code></div></div></td></tr></tbody></table></div></div>
<p>因为 refspec 的格式是&nbsp;<code>:&nbsp;</code>, 通过把&nbsp;<code></code>部分留空的方式，这个意思是是把远程的<code>topic</code>&nbsp;分支变成空，也就是删除它。</p>
<p>&nbsp;</p>
<p id="id399"><span style="color: #ff0000;"><strong>9.6&nbsp; 传输协议</strong></span></p>
<p>Git 可以以两种主要的方式跨越两个仓库传输数据：基于HTTP协议之上，和&nbsp;<code>file://</code>,&nbsp;<code>ssh://</code>, 和<code>git://</code>&nbsp;等智能传输协议。这一节带你快速浏览这两种主要的协议操作过程。</p>
<p>&nbsp;</p>
<p id="id400"><strong>哑协议</strong></p>
<p>Git 基于HTTP之上传输通常被称为哑协议，这是因为它在服务端不需要有针对 Git 特有的代码。这个获取过程仅仅是一系列GET请求，客户端可以假定服务端的Git仓库中的布局。让我们以 simplegit 库来看看<code>http-fetch</code>&nbsp;的过程：</p>
<div><div id="highlighter_749864" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git clone http:</code><code class="actionscript3 comments">//github.com/schacon/simplegit-progit.git</code></div></div></td></tr></tbody></table></div></div>
<p>它做的第1件事情就是获取&nbsp;<code>info/refs</code>&nbsp;文件。这个文件是在服务端运行了&nbsp;<code>update-server-info</code>&nbsp;所生成的，这也解释了为什么在服务端要想使用HTTP传输，必须要开启<code>post-receive</code>&nbsp;钩子：</p>
<pre></pre>
<div><div id="highlighter_333034" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET info/refs</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">ca82a6dff817ec66f44342007202690a93763949&nbsp;&nbsp;&nbsp;&nbsp; refs/heads/master</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>现在你有一个远端引用和SHA值的列表。下一步是寻找HEAD引用，这样你就知道了在完成后，什么应该被检出到工作目录：</p>
<pre></pre>
<div><div id="highlighter_761796" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET HEAD</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">ref: refs/heads/master</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>这说明在完成获取后，需要检出&nbsp;<code>master</code>&nbsp;分支。 这时，已经可以开始漫游操作了。因为你的起点是在&nbsp;<code>info/refs</code>&nbsp;文件中所提到的<code>ca82a6</code>&nbsp;commit 对象，你的开始操作就是获取它：</p>
<pre></pre>
<div><div id="highlighter_995027" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET objects/ca/82a6dff817ec66f44342007202690a93763949</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">(</code><code class="actionscript3 value">179</code> <code class="actionscript3 plain">bytes of binary data)</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>然后你取回了这个对象 － 这在服务端是一个松散格式的对象，你使用的是静态的 HTTP GET 请求获取的。可以使用 zlib 解压缩它，去除其头部，查看它的 commmit 内容：</p>
<div><div id="highlighter_203585" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git cat-file -p ca82a6dff817ec66f44342007202690a93763949</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">tree cfda3bf379e4f8dba8717dee55aab78aef7f4daf</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">parent 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">author Scott Chacon </code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 value">1205815931</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">committer Scott Chacon </code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 value">1240030591</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="actionscript3 plain">changed the version number</code></div></div></td></tr></tbody></table></div></div>
<p>这样，就得到了两个需要进一步获取的对象 －&nbsp;<code>cfda3b</code>&nbsp;是这个 commit 对象所对应的 tree 对象，和&nbsp;<code>085bb3</code>&nbsp;是它的父对象；</p>
<pre></pre>
<div><div id="highlighter_469439" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET objects/</code><code class="actionscript3 value">08</code><code class="actionscript3 plain">/5bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">(</code><code class="actionscript3 value">179</code> <code class="actionscript3 plain">bytes of data)</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>这样就取得了这它的下一步 commit 对象，再抓取 tree 对象：</p>
<pre></pre>
<div><div id="highlighter_335653" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET objects/cf/da3bf379e4f8dba8717dee55aab78aef7f4daf</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">(</code><code class="actionscript3 value">404</code> <code class="actionscript3 plain">- Not Found)</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>Oops – 看起来这个 tree 对象在服务端并不以松散格式对象存在，所以得到了404响应，代表在HTTP服务端没有找到该对象。这有好几个原因 － 这个对象可能在替代仓库里面，或者在打包文件里面， Git 会首先检查任何列出的替代仓库：</p>
<pre></pre>
<div><div id="highlighter_157593" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET objects/info/http-alternates</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">(empty file)</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>如果这返回了几个替代仓库列表，那么它会去那些地方检查松散格式对象和文件 － 这是一种在软件分叉之间共享对象以节省磁盘的好方法。然而，在这个例子中，没有替代仓库。所以你所需要的对象肯定在某个打包文件中。要检查服务端有哪些打包格式文件，你需要获取<code>objects/info/packs</code>&nbsp;文件，这里面包含有打包文件列表（是的，它也是被&nbsp;<code>update-server-info</code>&nbsp;所生成的）；</p>
<pre></pre>
<div><div id="highlighter_505351" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET objects/info/packs</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">P pack-816a9b2334da9953e530f27bcac22082a9f5b835.pack</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>这里服务端只有一个打包文件，所以你要的对象显然就在里面。但是你可以先检查它的索引文件以确认。这在服务端有多个打包文件时也很有用，因为这样就可以先检查你所需要的对象空间是在哪一个打包文件里面了：</p>
<pre></pre>
<div><div id="highlighter_200944" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET objects/pack/pack-816a9b2334da9953e530f27bcac22082a9f5b835.idx</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">(4k of binary data)</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>现在你有了这个打包文件的索引，你可以看看你要的对象是否在里面 － 因为索引文件列出了这个打包文件所包含的所有对象的SHA值，和该对象存在于打包文件中的偏移量，所以你只需要简单地获取整个打包文件：</p>
<pre></pre>
<div><div id="highlighter_129746" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">=&gt; GET objects/pack/pack-816a9b2334da9953e530f27bcac22082a9f5b835.pack</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">(13k of binary data)</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>现在你也有了这个 tree 对象，你可以继续在 commit 对象上漫游。它们全部都在这个你已经下载到的打包文件里面，所以你不用继续向服务端请求更多下载了。 在这完成之后，由于下载开始时已探明HEAD引用是指向<code>master</code>&nbsp;分支， Git 会将它检出到工作目录。</p>
<p>整个过程看起来就像这样：</p>
<div><div id="highlighter_332251" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git clone http:</code><code class="actionscript3 comments">//github.com/schacon/simplegit-progit.git</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">Initialized empty Git repository </code><code class="actionscript3 keyword">in</code> <code class="actionscript3 plain">/</code><code class="actionscript3 keyword">private</code><code class="actionscript3 plain">/tmp/simplegit-progit/.git/</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">got ca82a6dff817ec66f44342007202690a93763949</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">walk ca82a6dff817ec66f44342007202690a93763949</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">got 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">Getting alternates list </code><code class="actionscript3 keyword">for</code> <code class="actionscript3 plain">http:</code><code class="actionscript3 comments">//github.com/schacon/simplegit-progit.git</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">Getting pack list </code><code class="actionscript3 keyword">for</code> <code class="actionscript3 plain">http:</code><code class="actionscript3 comments">//github.com/schacon/simplegit-progit.git</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">Getting index </code><code class="actionscript3 keyword">for</code> <code class="actionscript3 plain">pack 816a9b2334da9953e530f27bcac22082a9f5b835</code></div><div class="line number9 index8 alt2"><code class="actionscript3 plain">Getting pack 816a9b2334da9953e530f27bcac22082a9f5b835</code></div><div class="line number10 index9 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">which contains cfda3bf379e4f8dba8717dee55aab78aef7f4daf</code></div><div class="line number11 index10 alt2"><code class="actionscript3 plain">walk 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</code></div><div class="line number12 index11 alt1"><code class="actionscript3 plain">walk a11bef06a3f659402fe7563abf99ad00de2209e6</code></div></div></td></tr></tbody></table></div></div>
<p><strong>智能协议</strong></p>
<p>这个HTTP方法是很简单但效率不是很高。使用智能协议是传送数据的更常用的方法。这些协议在远端都有Git智能型进程在服务 － 它可以读出本地数据并计算出客户端所需要的，并生成合适的数据给它，这有两类传输数据的进程：一对用于上传数据和一对用于下载。</p>
<p>&nbsp;</p>
<p id="id402"><strong>上传数据</strong></p>
<p>为了上传数据至远端， Git 使用&nbsp;<code>send-pack</code>&nbsp;和&nbsp;<code>receive-pack</code>&nbsp;进程。这个&nbsp;<code>send-pack</code>&nbsp;进程运行在客户端上，它连接至远端运行的&nbsp;<code>receive-pack</code>&nbsp;进程。</p>
<p>举例来说，你在你的项目上运行了&nbsp;<code>git push origin master</code>, 并且&nbsp;<code>origin</code>&nbsp;被定义为一个使用SSH协议的URL。 Git 会使用<code>send-pack</code>&nbsp;进程，它会启动一个基于SSH的连接到服务器。它尝试像这样透过SSH在服务端运行命令：</p>
<div><div id="highlighter_383568" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ ssh -x git@ github.com </code><code class="actionscript3 string">"git-receive-pack 'schacon/simplegit-progit.git'"</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">005bca82a6dff817ec66f4437202690a93763949 refs/heads/master report-status </code><code class="actionscript3 keyword">delete</code><code class="actionscript3 plain">-refs</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">003e085bb3bcb608e1e84b2432f8ecbe6306e7e7 refs/heads/topic</code></div><div class="line number4 index3 alt1"><code class="actionscript3 value">0000</code></div></div></td></tr></tbody></table></div></div>
<p>这里的&nbsp;<code>git-receive-pack</code>&nbsp;命令会立即对它所拥有的每一个引用响应一行 － 在这个例子中，只有&nbsp;<code>master</code>&nbsp;分支和它的SHA值。这里第1行也包含了服务端的能力列表（这里是<code>report-status</code>&nbsp;和&nbsp;<code>delete-refs</code>）。</p>
<p>每一行以4字节的十六进制开始，用于指定整行的长度。你看到第1行以005b开始，这在十六进制中表示91，意味着第1行有91字节长。下一行以003e起始，表示有62字节长，所以需要读剩下的62字节。再下一行是0000开始，表示服务器已完成了引用列表过程。</p>
<p>现在它知道了服务端的状态，你的&nbsp;<code>send-pack</code>&nbsp;进程会判断哪些 commit 是它所拥有但服务端没有的。针对每个引用，这次推送都会告诉对端的<code>receive-pack</code>&nbsp;这个信息。举例说，如果你在更新&nbsp;<code>master</code>&nbsp;分支，并且增加&nbsp;<code>experiment</code>&nbsp;分支，这个<code>send-pack</code>&nbsp;将会是像这样：</p>
<div><div id="highlighter_341328" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">0085ca82a6dff817ec66f44342007202690a93763949&nbsp; 15027957951b64cf874c3557a0f3547bd83b3ff6 refs/heads/master report-status</code></div><div class="line number2 index1 alt1"><code class="actionscript3 value">00670000000000000000000000000000000000000000</code> <code class="actionscript3 plain">cdfdb42577e2506715f8cfeacdbabc092bf63e8d refs/heads/experiment</code></div><div class="line number3 index2 alt2"><code class="actionscript3 value">0000</code></div></div></td></tr></tbody></table></div></div>
<p>这里的全’0’的SHA-1值表示之前没有过这个对象 － 因为你是在添加新的 experiment 引用。如果你在删除一个引用，你会看到相反的： 就是右边是全’0’。</p>
<p>Git 针对每个引用发送这样一行信息，就是旧的SHA值，新的SHA值，和将要更新的引用的名称。第1行还会包含有客户端的能力。下一步，客户端会发送一个所有那些服务端所没有的对象的一个打包文件。最后，服务端以成功(或者失败)来响应：</p>
<p>&nbsp;</p>
<div><div id="highlighter_690411" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">000Aunpack ok</code></div></div></td></tr></tbody></table></div></div>
<p id="id403"><strong>下载数据</strong></p>
<p>当你在下载数据时，&nbsp;<code>fetch-pack</code>&nbsp;和&nbsp;<code>upload-pack</code>&nbsp;进程就起作用了。客户端启动&nbsp;<code>fetch-pack</code>&nbsp;进程，连接至远端的&nbsp;<code>upload-pack</code>&nbsp;进程，以协商后续数据传输过程。</p>
<p>在远端仓库有不同的方式启动&nbsp;<code>upload-pack</code>&nbsp;进程。你可以使用与&nbsp;<code>receive-pack</code>&nbsp;相同的透过SSH管道的方式，也可以通过 Git 后台来启动这个进程，它默认监听在9418号端口上。这里<code>fetch-pack</code>&nbsp;进程在连接后像这样向后台发送数据：</p>
<div><div id="highlighter_675583" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">003fgit-upload-pack schacon/simplegit-progit.git\0host=myserver.com\</code><code class="actionscript3 value">0</code></div></div></td></tr></tbody></table></div></div>
<p>它也是以4字节指定后续字节长度的方式开始，然后是要运行的命令，和一个空字节，然后是服务端的主机名，再跟随一个最后的空字节。 Git 后台进程会检查这个命令是否可以运行，以及那个仓库是否存在，以及是否具有公开权限。如果所有检查都通过了，它会启动这个<code>upload-pack</code>&nbsp;进程并将客户端的请求移交给它。</p>
<p>如果你透过SSH使用获取功能，&nbsp;<code>fetch-pack</code>&nbsp;会像这样运行：</p>
<div><div id="highlighter_571052" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ ssh -x git@ github.com </code><code class="actionscript3 string">"git-upload-pack 'schacon/simplegit-progit.git'"</code></div></div></td></tr></tbody></table></div></div>
<p>不管哪种方式，在&nbsp;<code>fetch-pack</code>&nbsp;连接之后，&nbsp;<code>upload-pack</code>&nbsp;都会以这种形式返回：</p>
<div><div id="highlighter_69671" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">0088ca82a6dff817ec66f44342007202690a93763949 HEAD\0multi_ack thin-pack \</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;</code><code class="actionscript3 plain">side-band side-band-64k ofs-delta shallow no-progress </code><code class="actionscript3 keyword">include</code><code class="actionscript3 plain">-tag</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">003fca82a6dff817ec66f44342007202690a93763949 refs/heads/master</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">003e085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 refs/heads/topic</code></div><div class="line number5 index4 alt2"><code class="actionscript3 value">0000</code></div></div></td></tr></tbody></table></div></div>
<p>这与&nbsp;<code>receive-pack</code>&nbsp;响应很类似，但是这里指的能力是不同的。而且它还会指出HEAD引用，让客户端可以检查是否是一份克隆。</p>
<p>在这里，&nbsp;<code>fetch-pack</code>&nbsp;进程检查它自己所拥有的对象和所有它需要的对象，通过发送 “want” 和所需对象的SHA值，发送 “have” 和所有它已拥有的对象的SHA值。在列表完成时，再发送 “done” 通知<code>upload-pack</code>&nbsp;进程开始发送所需对象的打包文件。这个过程看起来像这样：</p>
<div><div id="highlighter_213845" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">0054want ca82a6dff817ec66f44342007202690a93763949 ofs-delta</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">0032have 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7</code></div><div class="line number3 index2 alt2"><code class="actionscript3 value">0000</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">0009done</code></div></div></td></tr></tbody></table></div></div>
<p>这是传输协议的一个很基础的例子，在更复杂的例子中，客户端可能会支持&nbsp;<code>multi_ack</code>&nbsp;或者&nbsp;<code>side-band</code>&nbsp;能力；但是这个例子中展示了智能协议的基本交互过程。</p>
<p>&nbsp;</p>
<p id="id404"><span style="color: #ff0000;"><strong>9.7&nbsp; 维护及数据恢复</strong></span></p>
<p>你时不时的需要进行一些清理工作 ── 如减小一个仓库的大小，清理导入的库，或是恢复丢失的数据。本节将描述这类使用场景。</p>
<p>&nbsp;</p>
<p id="id405"><strong>维护</strong></p>
<p>Git 会不定时地自动运行称为 “auto gc” 的命令。大部分情况下该命令什么都不处理。不过要是存在太多松散对象 (loose object, 不在 packfile 中的对象) 或 packfile，Git 会进行调用<code>git gc</code>&nbsp;命令。&nbsp;<code>gc</code>&nbsp;
指垃圾收集 (garbage collect)，此命令会做很多工作：收集所有松散对象并将它们存入 packfile，合并这些 packfile 
进一个大的 packfile，然后将不被任何 commit 引用并且已存在一段时间 (数月) 的对象删除。</p>
<p>可以手工运行 auto gc 命令：</p>
<div><div id="highlighter_539973" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git gc --auto</code></div></div></td></tr></tbody></table></div></div>
<p>再次强调，这个命令一般什么都不干。如果有 7,000 个左右的松散对象或是 50 个以上的 packfile，Git 才会真正调用 gc 命令。可能通过修改配置中的<code>gc.auto</code>&nbsp;和&nbsp;<code>gc.autopacklimit</code>&nbsp;来调整这两个阈值。</p>
<p><code>gc</code>&nbsp;还会将所有引用 (references) 并入一个单独文件。假设仓库中包含以下分支和标签：</p>
<div><div id="highlighter_694123" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ find .git/refs -type f</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">.git/refs/heads/experiment</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">.git/refs/heads/master</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">.git/refs/tags/v1.</code><code class="actionscript3 value">0</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">.git/refs/tags/v1.</code><code class="actionscript3 value">1</code></div></div></td></tr></tbody></table></div></div>
<p>这时如果运行&nbsp;<code>git gc</code>,&nbsp;<code>refs</code>&nbsp;下的所有文件都会消失。Git 会将这些文件挪到&nbsp;<code>.git/packed-refs</code>&nbsp;文件中去以提高效率，该文件是这个样子的：</p>
<div><div id="highlighter_650892" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ cat .git/packed-refs</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain"># pack-refs </code><code class="actionscript3 keyword">with</code><code class="actionscript3 plain">: peeled</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d refs/heads/experiment</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">ab1afef80fac8e34258ff41fc1b867c702daa24b refs/heads/master</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d refs/tags/v1.</code><code class="actionscript3 value">0</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">9585191f37f7b0fb9444f35a9bf50de191beadc2 refs/tags/v1.</code><code class="actionscript3 value">1</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">^1a410efbd13591db07496601ebc7a059dd55cfe9</code></div></div></td></tr></tbody></table></div></div>
<p>当更新一个引用时，Git 不会修改这个文件，而是在&nbsp;<code>refs/heads</code>&nbsp;下写入一个新文件。当查找一个引用的 SHA 时，Git 首先在<code>refs</code>&nbsp;目录下查找，如果未找到则到&nbsp;<code>packed-refs</code>&nbsp;文件中去查找。因此如果在&nbsp;<code>refs</code>&nbsp;目录下找不到一个引用，该引用可能存到<code>packed-refs</code>&nbsp;文件中去了。</p>
<p>请留意文件最后以&nbsp;<code>^</code>&nbsp;开头的那一行。这表示该行上一行的那个标签是一个 annotated 标签，而该行正是那个标签所指向的 commit 。</p>
<p>&nbsp;</p>
<p id="id406"><strong>数据恢复</strong></p>
<p>在使用 Git 的过程中，有时会不小心丢失 commit 
信息。这一般出现在以下情况下：强制删除了一个分支而后又想重新使用这个分支，hard-reset 了一个分支从而丢弃了分支的部分 
commit。如果这真的发生了，有什么办法把丢失的 commit 找回来呢？</p>
<p>下面的示例演示了对 test 仓库主分支进行 hard-reset 到一个老版本的 commit 的操作，然后恢复丢失的 commit 。首先查看一下当前的仓库状态：</p>
<div><div id="highlighter_540332" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git log --pretty=oneline</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">ab1afef80fac8e34258ff41fc1b867c702daa24b modified repo a bit</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">484a59275031909e19aadb7c92262719cfcdf19a added repo.rb</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">1a410efbd13591db07496601ebc7a059dd55cfe9 third commit</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d second commit</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">fdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit</code></div></div></td></tr></tbody></table></div></div>
<p>接着将&nbsp;<code>master</code>&nbsp;分支移回至中间的一个 commit：</p>
<div><div id="highlighter_93629" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git reset --hard 1a410efbd13591db07496601ebc7a059dd55cfe9</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">HEAD </code><code class="actionscript3 keyword">is</code> <code class="actionscript3 plain">now at 1a410ef third commit</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git log --pretty=oneline</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">1a410efbd13591db07496601ebc7a059dd55cfe9 third commit</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d second commit</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">fdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit</code></div></div></td></tr></tbody></table></div></div>
<p>这样就丢弃了最新的两个 commit ── 包含这两个 commit 的分支不存在了。现在要做的是找出最新的那个 commit 的 SHA，然后添加一个指它它的分支。关键在于找出最新的 commit 的 SHA ── 你不大可能记住了这个 SHA，是吧？</p>
<p>通常最快捷的办法是使用&nbsp;<code>git reflog</code>&nbsp;工具。当你 (在一个仓库下) 工作时，Git 会在你每次修改了 HEAD 时悄悄地将改动记录下来。当你提交或修改分支时，reflog 就会更新。<code>git update-ref</code>&nbsp;命令也可以更新 reflog，这是在本章前面的 “Git References” 部分我们使用该命令而不是手工将 SHA 值写入 ref 文件的理由。任何时间运行<code>git reflog</code>&nbsp;命令可以查看当前的状态：</p>
<div><div id="highlighter_895953" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git reflog</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">1a410ef HEAD@{</code><code class="actionscript3 value">0</code><code class="actionscript3 plain">}: 1a410efbd13591db07496601ebc7a059dd55cfe9: updating HEAD</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">ab1afef HEAD@{</code><code class="actionscript3 value">1</code><code class="actionscript3 plain">}: ab1afef80fac8e34258ff41fc1b867c702daa24b: updating HEAD</code></div></div></td></tr></tbody></table></div></div>
<p>可以看到我们签出的两个 commit ，但没有更多的相关信息。运行&nbsp;<code>git log -g</code>&nbsp;会输出 reflog 的正常日志，从而显示更多有用信息：</p>
<div><div id="highlighter_193782" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git log -g</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">commit 1a410efbd13591db07496601ebc7a059dd55cfe9</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">Reflog: HEAD@{</code><code class="actionscript3 value">0</code><code class="actionscript3 plain">} (Scott Chacon </code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">)</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">Reflog message: updating HEAD</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">Author: Scott Chacon </code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="actionscript3 keyword">Date</code><code class="actionscript3 plain">:&nbsp;&nbsp; Fri May </code><code class="actionscript3 value">22</code> <code class="actionscript3 value">18</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">22</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">37</code> <code class="actionscript3 value">2009</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">third commit</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="actionscript3 plain">commit ab1afef80fac8e34258ff41fc1b867c702daa24b</code></div><div class="line number14 index13 alt1"><code class="actionscript3 plain">Reflog: HEAD@{</code><code class="actionscript3 value">1</code><code class="actionscript3 plain">} (Scott Chacon </code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">)</code></div><div class="line number17 index16 alt2"><code class="actionscript3 plain">Reflog message: updating HEAD</code></div><div class="line number18 index17 alt1"><code class="actionscript3 plain">Author: Scott Chacon </code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="actionscript3 keyword">Date</code><code class="actionscript3 plain">:&nbsp;&nbsp; Fri May </code><code class="actionscript3 value">22</code> <code class="actionscript3 value">18</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">15</code><code class="actionscript3 plain">:</code><code class="actionscript3 value">24</code> <code class="actionscript3 value">2009</code> <code class="actionscript3 plain">-</code><code class="actionscript3 value">0700</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 plain">modified repo a bit</code></div></div></td></tr></tbody></table></div></div>
<p>看起来弄丢了的 commit 是底下那个，这样在那个 commit 上创建一个新分支就能把它恢复过来。比方说，可以在那个 commit (ab1afef) 上创建一个名为<code>recover-branch</code>&nbsp;的分支：</p>
<div><div id="highlighter_20961" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git branch recover-branch ab1afef</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git log --pretty=oneline recover-branch</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">ab1afef80fac8e34258ff41fc1b867c702daa24b modified repo a bit</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">484a59275031909e19aadb7c92262719cfcdf19a added repo.rb</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">1a410efbd13591db07496601ebc7a059dd55cfe9 third commit</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">cac0cab538b970a37ea1e769cbbde608743bc96d second commit</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">fdf4fc3344e67ab068f836878b6c4951e3b15f3d first commit</code></div></div></td></tr></tbody></table></div></div>
<p>酷！这样有了一个跟原来&nbsp;<code>master</code>&nbsp;一样的&nbsp;<code>recover-branch</code>&nbsp;分支，最新的两个 commit 又找回来了。接着，假设引起 commit 丢失的原因并没有记录在 reflog 中 ── 可以通过删除<code>recover-branch</code>&nbsp;和 reflog 来模拟这种情况。这样最新的两个 commit 不会被任何东西引用到：</p>
<pre></pre>
<div><div id="highlighter_833105" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git branch -D recover-branch</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ rm -Rf .git/logs/</code></div></div></td></tr></tbody></table></div></div>
<pre></pre>
<p>因为 reflog 数据是保存在&nbsp;<code>.git/logs/</code>&nbsp;目录下的，这样就没有 reflog 了。现在要怎样恢复 commit 呢？办法之一是使用<code>git fsck</code>&nbsp;工具，该工具会检查仓库的数据完整性。如果指定&nbsp;<code>--ful</code>&nbsp;选项，该命令显示所有未被其他对象引用 (指向) 的所有对象：</p>
<div><div id="highlighter_670251" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git fsck --full</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">dangling blob d670460b4b4aece5915caf5c68d12f560a9fe3e4</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">dangling commit ab1afef80fac8e34258ff41fc1b867c702daa24b</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">dangling tree aea790b9a58f6cf6f2804eeac9f0abbe9631e4c9</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">dangling blob 7108f7ecb345ee9d0084193f147cdad4d2998293</code></div></div></td></tr></tbody></table></div></div>
<p>本例中，可以从 dangling commit 找到丢失了的 commit。用相同的方法就可以恢复它，即创建一个指向该 SHA 的分支。</p>
<p>&nbsp;</p>
<p id="id407"><strong>移除对象</strong></p>
<p>Git 有许多过人之处，不过有一个功能有时却会带来问题：<code>git clone</code>&nbsp;会将包含每一个文件的所有历
史版本的整个项目下载下来。如果项目包含的仅仅是源代码的话这并没有什么坏处，毕竟 Git 
可以非常高效地压缩此类数据。不过如果有人在某个时刻往项目中添加了一个非常大的文件，那们即便他在后来的提交中将此文件删掉了，所有的签出都会下载这个
 大文件。因为历史记录中引用了这个文件，它会一直存在着。</p>
<p>当你将 Subversion 或 Perforce 仓库转换导入至 Git 时这会成为一个很严重的问题。在此类系统中，(签出时) 
不会下载整个仓库历史，所以这种情形不大会有不良后果。如果你从其他系统导入了一个仓库，或是发觉一个仓库的尺寸远超出预计，可以用下面的方法找到并移除
 大 (尺寸) 对象。</p>
<p>警告：此方法会破坏提交历史。为了移除对一个大文件的引用，从最早包含该引用的 tree 对象开始之后的所有 commit 
对象都会被重写。如果在刚导入一个仓库并在其他人在此基础上开始工作之前这么做，那没有什么问题 ── 否则你不得不通知所有协作者 (贡献者) 
去衍合你新修改的 commit 。</p>
<p>为了演示这点，往 test 仓库中加入一个大文件，然后在下次提交时将它删除，接着找到并将这个文件从仓库中永久删除。首先，加一个大文件进去：</p>
<div><div id="highlighter_325616" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ curl http:</code><code class="actionscript3 comments">//kernel.org/pub/software/scm/git/git-1.6.3.1.tar.bz2 &gt; git.tbz2</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ git add git.tbz2</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git commit -am </code><code class="actionscript3 string">'added git tarball'</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">[master 6df7640] added git tarball</code></div><div class="line number5 index4 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">files changed, </code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">insertions(+), </code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">deletions(-)</code></div><div class="line number6 index5 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 plain">create mode </code><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">git.tbz2</code></div></div></td></tr></tbody></table></div></div>
<p>喔，你并不想往项目中加进一个这么大的 tar 包。最后还是去掉它：</p>
<div><div id="highlighter_267267" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git rm git.tbz2</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">rm </code><code class="actionscript3 string">'git.tbz2'</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git commit -m </code><code class="actionscript3 string">'oops - removed large tarball'</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">[master da3f30d] oops - removed large tarball</code></div><div class="line number5 index4 alt2"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 value">1</code> <code class="actionscript3 plain">files changed, </code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">insertions(+), </code><code class="actionscript3 value">0</code> <code class="actionscript3 plain">deletions(-)</code></div><div class="line number6 index5 alt1"><code class="actionscript3 spaces">&nbsp;</code><code class="actionscript3 keyword">delete</code> <code class="actionscript3 plain">mode </code><code class="actionscript3 value">100644</code> <code class="actionscript3 plain">git.tbz2</code></div></div></td></tr></tbody></table></div></div>
<p>对仓库进行&nbsp;<code>gc</code>&nbsp;操作，并查看占用了空间：</p>
<div><div id="highlighter_299109" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git gc</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">Counting objects: </code><code class="actionscript3 value">21</code><code class="actionscript3 plain">, done.</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">Delta compression using </code><code class="actionscript3 value">2</code> <code class="actionscript3 plain">threads.</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">Compressing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">16</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">16</code><code class="actionscript3 plain">), done.</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">Writing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">21</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">21</code><code class="actionscript3 plain">), done.</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">Total </code><code class="actionscript3 value">21</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">3</code><code class="actionscript3 plain">), reused </code><code class="actionscript3 value">15</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">1</code><code class="actionscript3 plain">)</code></div></div></td></tr></tbody></table></div></div>
<p>可以运行&nbsp;<code>count-objects</code>&nbsp;以查看使用了多少空间：</p>
<div><div id="highlighter_620852" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git count-objects -v</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">count: </code><code class="actionscript3 value">4</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">size: </code><code class="actionscript3 value">16</code></div><div class="line number4 index3 alt1"><code class="actionscript3 keyword">in</code><code class="actionscript3 plain">-pack: </code><code class="actionscript3 value">21</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">packs: </code><code class="actionscript3 value">1</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">size-pack: </code><code class="actionscript3 value">2016</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">prune-packable: </code><code class="actionscript3 value">0</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">garbage: </code><code class="actionscript3 value">0</code></div></div></td></tr></tbody></table></div></div>
<p><code>size-pack</code>&nbsp;是以千字节为单位表示的 packfiles 的大小，因此已经使用了 2MB 
。而在这次提交之前仅用了 2K 左右 ── 
显然在这次提交时删除文件并没有真正将其从历史记录中删除。每当有人复制这个仓库去取得这个小项目时，都不得不复制所有 2MB 
数据，而这仅仅因为你曾经不小心加了个大文件。当我们来解决这个问题。</p>
<p>首先要找出这个文件。在本例中，你知道是哪个文件。假设你并不知道这一点，要如何找出哪个 (些) 文件占用了这么多的空间？如果运行&nbsp;<code>git gc</code>，所有对象会存入一个 packfile 文件；运行另一个底层命令<code>git verify-pack</code>&nbsp;以识别出大对象，对输出的第三列信息即文件大小进行排序，还可以将输出定向到&nbsp;<code>tail</code>&nbsp;命令，因为你只关心排在最后的那几个最大的文件：</p>
<div><div id="highlighter_359632" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git verify-pack -v .git/objects/pack/pack-3f8c0...bb.idx | sort -k </code><code class="actionscript3 value">3</code> <code class="actionscript3 plain">-n | tail -</code><code class="actionscript3 value">3</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">e3f094f522629ae358806b17daf78246c27c007b blob&nbsp;&nbsp; </code><code class="actionscript3 value">1486</code> <code class="actionscript3 value">734</code> <code class="actionscript3 value">4667</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">05408d195263d853f09dca71d55116663690c27c blob&nbsp;&nbsp; </code><code class="actionscript3 value">12908</code> <code class="actionscript3 value">3478</code> <code class="actionscript3 value">1189</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">7a9eb2fba2b1811321254ac360970fc169ba2330 blob&nbsp;&nbsp; </code><code class="actionscript3 value">2056716</code> <code class="actionscript3 value">2056872</code> <code class="actionscript3 value">5401</code></div></div></td></tr></tbody></table></div></div>
<p>最底下那个就是那个大文件：2MB 。要查看这到底是哪个文件，可以使用第 7 章中已经简单使用过的&nbsp;<code>rev-list</code>&nbsp;命令。若给&nbsp;<code>rev-list</code>&nbsp;命令传入&nbsp;<code>--objects</code>&nbsp;选项，它会列出所有 commit SHA 值，blob SHA 值及相应的文件路径。可以这样查看 blob 的文件名：</p>
<div><div id="highlighter_151940" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git rev-list --objects --all | grep 7a9eb2fb</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">7a9eb2fba2b1811321254ac360970fc169ba2330 git.tbz2</code></div></div></td></tr></tbody></table></div></div>
<p>接下来要将该文件从历史记录的所有 tree 中移除。很容易找出哪些 commit 修改了这个文件：</p>
<div><div id="highlighter_81549" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git log --pretty=oneline -- git.tbz2</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">da3f30d019005479c99eb4c3406225613985a1db oops - removed large tarball</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">6df764092f3e7c8f5f94cbe08ee5cf42e92a0289 added git tarball</code></div></div></td></tr></tbody></table></div></div>
<p>必须重写从&nbsp;<code>6df76</code>&nbsp;开始的所有 commit 才能将文件从 Git 历史中完全移除。这么做需要用到<strong><a href="http://blog.jobbole.com/26112/" target="_blank">第 6 章</a></strong>中用过的&nbsp;<code>filter-branch</code>&nbsp;命令：</p>
<div><div id="highlighter_981406" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git filter-branch --index-filter \</code></div><div class="line number2 index1 alt1"><code class="actionscript3 spaces">&nbsp;&nbsp;&nbsp;</code><code class="actionscript3 string">'git rm --cached --ignore-unmatch git.tbz2'</code> <code class="actionscript3 plain">-- 6df7640^..</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">Rewrite 6df764092f3e7c8f5f94cbe08ee5cf42e92a0289 (</code><code class="actionscript3 value">1</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">2</code><code class="actionscript3 plain">)rm </code><code class="actionscript3 string">'git.tbz2'</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">Rewrite da3f30d019005479c99eb4c3406225613985a1db (</code><code class="actionscript3 value">2</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">2</code><code class="actionscript3 plain">)</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">Ref </code><code class="actionscript3 string">'refs/heads/master'</code> <code class="actionscript3 plain">was rewritten</code></div></div></td></tr></tbody></table></div></div>
<p><code>--index-filter</code>&nbsp;选项类似于<strong><a href="http://blog.jobbole.com/26112/" target="_blank">第 6 章</a></strong>中使用的&nbsp;<code>--tree-filter</code>&nbsp;选项，但这里不是传入一个命令去修改磁盘上签出的文件，而是修改暂存区域或索引。不能用<code>rm file</code>&nbsp;命令来删除一个特定文件，而是必须用&nbsp;<code>git rm --cached</code>&nbsp;来删除它 ── 即从索引而不是磁盘删除它。这样做是出于速度考虑 ── 由于 Git 在运行你的 filter 之前无需将所有版本签出到磁盘上，这个操作会快得多。也可以用<code>--tree-filter</code>&nbsp;来完成相同的操作。<code>git rm</code>&nbsp;的&nbsp;<code>--ignore-unmatch</code>&nbsp;选项指定当你试图删除的内容并不存在时不显示错误。最后，因为你清楚问题是从哪个 commit 开始的，使用<code>filter-branch</code>&nbsp;重写自&nbsp;<code>6df7640</code>&nbsp;这个 commit 开始的所有历史记录。不这么做的话会重写所有历史记录，花费不必要的更多时间。</p>
<p>现在历史记录中已经不包含对那个文件的引用了。不过 reflog 以及运行&nbsp;<code>filter-branch</code>&nbsp;时 Git 往&nbsp;<code>.git/refs/original</code>&nbsp;添加的一些 refs 中仍有对它的引用，因此需要将这些引用删除并对仓库进行 repack 操作。在进行 repack 前需要将所有对这些 commits 的引用去除：</p>
<div><div id="highlighter_618593" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ rm -Rf .git/refs/original</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">$ rm -Rf .git/logs/</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">$ git gc</code></div><div class="line number4 index3 alt1"><code class="actionscript3 plain">Counting objects: </code><code class="actionscript3 value">19</code><code class="actionscript3 plain">, done.</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">Delta compression using </code><code class="actionscript3 value">2</code> <code class="actionscript3 plain">threads.</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">Compressing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">14</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">14</code><code class="actionscript3 plain">), done.</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">Writing objects: </code><code class="actionscript3 value">100</code><code class="actionscript3 plain">% (</code><code class="actionscript3 value">19</code><code class="actionscript3 plain">/</code><code class="actionscript3 value">19</code><code class="actionscript3 plain">), done.</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">Total </code><code class="actionscript3 value">19</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">3</code><code class="actionscript3 plain">), reused </code><code class="actionscript3 value">16</code> <code class="actionscript3 plain">(delta </code><code class="actionscript3 value">1</code><code class="actionscript3 plain">)</code></div></div></td></tr></tbody></table></div></div>
<p>看一下节省了多少空间。</p>
<div><div id="highlighter_282394" class="syntaxhighlighter notranslate actionscript3"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="actionscript3 plain">$ git count-objects -v</code></div><div class="line number2 index1 alt1"><code class="actionscript3 plain">count: </code><code class="actionscript3 value">8</code></div><div class="line number3 index2 alt2"><code class="actionscript3 plain">size: </code><code class="actionscript3 value">2040</code></div><div class="line number4 index3 alt1"><code class="actionscript3 keyword">in</code><code class="actionscript3 plain">-pack: </code><code class="actionscript3 value">19</code></div><div class="line number5 index4 alt2"><code class="actionscript3 plain">packs: </code><code class="actionscript3 value">1</code></div><div class="line number6 index5 alt1"><code class="actionscript3 plain">size-pack: </code><code class="actionscript3 value">7</code></div><div class="line number7 index6 alt2"><code class="actionscript3 plain">prune-packable: </code><code class="actionscript3 value">0</code></div><div class="line number8 index7 alt1"><code class="actionscript3 plain">garbage: </code><code class="actionscript3 value">0</code></div></div></td></tr></tbody></table></div></div>
<p>repack 后仓库的大小减小到了 7K ，远小于之前的 2MB 。从 size 值可以看出大文件对象还在松散对象中，其实并没有消失，不过这没有关系，重要的是在再进行推送或复制，这个对象不会再传送出去。如果真的要完全把这个对象删除，可以运行<code>git prune --expire</code>&nbsp;命令。</p>
<p>&nbsp;</p>
<p id="id408"><span style="color: #ff0000;"><strong>9.8&nbsp; 总结</strong></span></p>
<p id="aeaoofnhgocdbnbeljkmbjdmhbcokfdb-mousedown">现在你应该对 Git 
可以做什么相当了解了，并且在一定程度上也知道了 Git 是如何实现的。本章覆盖了许多 plumbing 命令 ── 
这些命令比较底层，且比你在本书其他部分学到的 porcelain 命令要来得简单。从底层了解 Git 的工作原理可以帮助你更好地理解为何 Git
 实现了目前的这些功能，也使你能够针对你的工作流写出自己的工具和脚本。</p>
<p>Git 作为一套 content-addressable 的文件系统，是一个非常强大的工具，而不仅仅只是一个 VCS 供人使用。希望借助于你新学到的 Git 内部原理的知识，你可以实现自己的有趣的应用，并以更高级便利的方式使用 Git。</p>
<p>&nbsp;</p>

        
        
    <div class="post-adds">
        <span data-post-id="26209" class=" btn-bluet-bigger href-style vote-post-up   register-user-only "><i class="fa  fa-thumbs-o-up"></i> <h10 id="26209votetotal"></h10> 赞</span>
        <span data-book-type="1" data-site-id="2" data-item-id="26209" data-item-type="1" class=" btn-bluet-bigger href-style bookmark-btn  register-user-only "><i class="fa fa-bookmark-o  "></i> 5 收藏</span>

                    <a href="#article-comment"><span class="btn-bluet-bigger href-style hide-on-480"><i class="fa fa-comments-o"></i>  评论</span></a>
        
        
        
        <!-- JiaThis Button BEGIN -->
        <div class="jiathis_style_24x24" style="display: inline-flex; position: relative; margin: 0; clear: both;float: right;">
            <a title="分享到新浪微博" class="jiathis_button_tsina"><span class="jiathis_txt jtico jtico_tsina"></span></a>
            <a title="分享到微信" class="jiathis_button_weixin"><span class="jiathis_txt jtico jtico_weixin"></span></a>
            <a title="分享到QQ空间" class="jiathis_button_qzone"><span class="jiathis_txt jtico jtico_qzone"></span></a>
            <a title="分享到Facebook" class="jiathis_button_fb hide-on-480"><span class="jiathis_txt jtico jtico_fb"></span></a>
            <a href="http://www.jiathis.com/share?uid=1745061" class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" target="_blank"></a>
        </div>

    </div>




        <!-- BEGIN #author-bio -->


<!-- END #author-bio -->
	</div>
	<!-- END .entry -->


<script type="text/javascript">
var jiathis_config={
	data_track_clickback:false,
	title:"分享从伯乐在线看到的一篇好文章 ",
	summary:"《Git详解之九：Git内部原理》",
	pic:"http://jbcdn2.b0.upaiyun.com/2012/08/20120201122841_684.png",
	appkey:{
         "tsina": 1473879058    },
	ralateuid:{
		"tsina": 1670481425	},
	hideMore:false
}
</script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jia.js" charset="utf-8"></script><script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/plugin.js" charset="utf-8"></script>
<!-- JiaThis Button END -->
			<div class="textwidget"><p><script language="javascript"> 
var randomNum = Math.round(Math.random()*2);
var image=new Array(3);
image[0]="http://ww2.sinaimg.cn/mw690/e5298966gw1evykwqsj8wj20h802smxh.jpg";
image[1]="http://ww3.sinaimg.cn/mw690/bfdcef89jw1f26ttffec8j20h802sjs4.jpg";
image[2]="http://ww3.sinaimg.cn/mw690/bfdcef89jw1f26tt5g8nwj20h802saar.jpg";
var imageUrl=image[randomNum];
var urls=new Array(3);
urls[0]="http://blog.jobbole.com/84342/?utm_source=blog.jobbole.com&amp;utm_medium=articleBanner&amp;utm_content=2015.9.16";
urls[1]="http://web.jobbole.com/85383/?utm_source=blog.jobbole.com&#038;utm_medium=rightBanner&#038;utm_content=2016.3.23";
urls[2]="http://web.jobbole.com/84494/?utm_source=blog.jobbole.com&#038;utm_medium=rightBanner&#038;utm_content=2016.3.23";
var url = urls[randomNum];
var imageHTML = "<a href='"+url+"' target='_blank'><img src='"+imageUrl+"' border='0'></a>";
document.write(imageHTML);
</script><a href="http://web.jobbole.com/84494/?utm_source=blog.jobbole.com&amp;utm_medium=rightBanner&amp;utm_content=2016.3.23" target="_blank"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/bfdcef89jw1f26tt5g8nwj20h802saar.jpg" border="0"></a></p>
</div>
		
</div>
<!-- END .post -->
    
<div class="wp_rp_wrap  wp_rp_plain" id="wp_rp_first"><div class="wp_rp_content"><h3 class="related_post_title">相关文章</h3><ul class="related_post wp_rp" style="visibility: visible"><li><a href="http://blog.jobbole.com/26112/" class="wp_rp_title">Git详解之六：Git工具</a></li><li><a href="http://blog.jobbole.com/25877/" class="wp_rp_title">Git详解之三：Git分支</a></li><li><a href="http://blog.jobbole.com/25808/" class="wp_rp_title">Git详解之二：Git基础</a></li><li><a href="http://blog.jobbole.com/26198/" class="wp_rp_title">Git详解之八：Git与其他系统</a></li><li><a href="http://blog.jobbole.com/25944/" class="wp_rp_title">Git详解之四：服务器上的Git</a></li><li><a href="http://blog.jobbole.com/26131/" class="wp_rp_title">Git详解之七：自定义Git</a></li><li><a href="http://blog.jobbole.com/25775/" class="wp_rp_title">Git详解之一：Git起步</a></li><li><a href="http://blog.jobbole.com/25660/" class="wp_rp_title">Git详解之五：分布式Git</a></li><li><a href="http://blog.jobbole.com/20069/" class="wp_rp_title">蒋鑫：为什么 Git 比 SVN 好</a></li><li><a href="http://blog.jobbole.com/55304/" class="wp_rp_title">软件版本控制介绍</a></li></ul></div></div>

    
<div style="text-align: left;">
    <h3>可能感兴趣的话题</h3>
    <ul style="font-size: 13px; list-style: disc inside;">
                        <li>
                    <a href="http://group.jobbole.com/15469/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="除电脑外，你最喜欢的数码产品有哪些？" target="_blank">除电脑外，你最喜欢的数码产品有哪些？</a>
                     · <a href="http://group.jobbole.com/15469/#comments" target="_blank"><i class="fa fa-comments-o"></i> 19</a>                </li>
                            <li>
                    <a href="http://group.jobbole.com/15468/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="作为程序员，来说说你最舍得花钱买的东西有哪些？" target="_blank">作为程序员，来说说你最舍得花钱买的东西有哪些？</a>
                     · <a href="http://group.jobbole.com/15468/#comments" target="_blank"><i class="fa fa-comments-o"></i> 83</a>                </li>
                            <li>
                    <a href="http://group.jobbole.com/15070/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="大家平时都坚持跑步吗？" target="_blank">大家平时都坚持跑步吗？</a>
                     · <a href="http://group.jobbole.com/15070/#comments" target="_blank"><i class="fa fa-comments-o"></i> 52</a>                </li>
                            <li>
                    <a href="http://group.jobbole.com/14924/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="一个90年程序员的自述" target="_blank">一个90年程序员的自述</a>
                     · <a href="http://group.jobbole.com/14924/#comments" target="_blank"><i class="fa fa-comments-o"></i> 27</a>                </li>
                            <li>
                    <a href="http://group.jobbole.com/16200/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="关于新手学习编程的路线" target="_blank">关于新手学习编程的路线</a>
                                    </li>
                            <li>
                    <a href="http://group.jobbole.com/16201/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="淘宝客服压力非常大，真的吗？" target="_blank">淘宝客服压力非常大，真的吗？</a>
                                    </li>
                            <li>
                    <a href="http://group.jobbole.com/16196/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="Java新手问题" target="_blank">Java新手问题</a>
                                    </li>
                            <li>
                    <a href="http://group.jobbole.com/13433/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="如果看待一个本科不是计算机专业的妹子, 走上了一条iOS的路?" target="_blank">如果看待一个本科不是计算机专业的妹子, 走上了一条iOS的路?</a>
                     · <a href="http://group.jobbole.com/13433/#comments" target="_blank"><i class="fa fa-comments-o"></i> 180</a>                </li>
                            <li>
                    <a href="http://group.jobbole.com/16191/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="码农怎么跟人沟通" target="_blank">码农怎么跟人沟通</a>
                     · <a href="http://group.jobbole.com/16191/#comments" target="_blank"><i class="fa fa-comments-o"></i> 3</a>                </li>
                            <li>
                    <a href="http://group.jobbole.com/15078/?utm_source=blog.jobbole.com&amp;utm_medium=article-related-group-topic" title="你旁边坐了一个吃货是怎样的一种体验？" target="_blank">你旁边坐了一个吃货是怎样的一种体验？</a>
                     · <a href="http://group.jobbole.com/15078/#comments" target="_blank"><i class="fa fa-comments-o"></i> 20</a>                </li>
                </ul>
</div>
    
        <!-- BEGIN .navigation -->
        <div class="navigation margin-20">

            <div class="alignleft"><a href="http://blog.jobbole.com/26198/" rel="prev">« Git详解之八：Git与其他系统</a></div>
            <div class="alignright"><a href="http://blog.jobbole.com/24326/" rel="next">信息图：是什么让手机应用加载变慢？ »</a></div>
            <div class="clear"></div>

        </div>
        <!-- END .navigation -->

    
	
            <div id="article-comment" class="dot-box center-align">

                        <a href="http://www.jobbole.com/login?redirect=http://blog.jobbole.com/26209/"><button type="button" class="btn btn-non-transparent">登录后评论</button></a>
            
            <a target="_blank" href="http://www.jobbole.com/register"><button type="button" class="btn btn-primary">新用户注册</button></a>

            <br><br>
            <span>直接登录</span>
            <style type="text/css">.t_login_text{margin:0; padding:0;}.t_login_button{margin:0; padding: 5px 0;}.t_login_button a{margin:0; padding-right:3px; line-height:25px}.t_login_button img{display:inline; border:none;}</style><!-- 使用社交帐号登录 来自 WordPress连接微博 插件 --><span class="connectBox1 t_login_button"><a href="http://blog.jobbole.com/wp-content/plugins/wp-connect/login.php?go=weixin&amp;redirect_url=http%3A%2F%2Fblog.jobbole.com%2F26209%2F" title="微信" rel="nofollow"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/btn_weixin.png"></a><a href="http://blog.jobbole.com/wp-content/plugins/wp-connect/login.php?go=qzone&amp;redirect_url=http%3A%2F%2Fblog.jobbole.com%2F26209%2F" title="QQ" rel="nofollow"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/btn_qzone.png"></a><a href="http://blog.jobbole.com/wp-content/plugins/wp-connect/login.php?go=sina&amp;redirect_url=http%3A%2F%2Fblog.jobbole.com%2F26209%2F" title="新浪微博" rel="nofollow"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/btn_sina.png"></a><a href="http://blog.jobbole.com/wp-content/plugins/wp-connect/login.php?go=douban&amp;redirect_url=http%3A%2F%2Fblog.jobbole.com%2F26209%2F" title="豆瓣" rel="nofollow"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/btn_douban.png"></a><a href="http://blog.jobbole.com/wp-content/plugins/wp-connect/login.php?go=github&amp;redirect_url=http%3A%2F%2Fblog.jobbole.com%2F26209%2F" title="GitHub" rel="nofollow"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/btn_github.png"></a></span>        </div>
    

    <div id="comment_list" class="comments">

        
    </div>
		

	
</div>
<!-- END .grid-8 -->

<!-- BEGIN #sidebar -->
<div id="sidebar" class="grid-4">

	    <div class="nav-search-box ">
                <form method="get" id="searchform" action="http://blog.jobbole.com">
            <select id="searchselect">
                                    <option selected="selected" value="http://blog.jobbole.com">博客</option>
                                    <option value="http://hao.jobbole.com">资源</option>
                                    <option value="http://design.jobbole.com">设计</option>
                                    <option value="http://web.jobbole.com">WEB前端</option>
                                    <option value="http://ios.jobbole.com">IOS</option>
                                    <option value="http://python.jobbole.com">Python</option>
                                    <option value="http://android.jobbole.com">安卓</option>
                                    <option value="http://top.jobbole.com">头条</option>
                                    <option value="http://group.jobbole.com">小组</option>
                                    <option value="http://date.jobbole.com">面向对象</option>
                            </select>
            <div class="input-wrapper">
                <input name="s" id="s" placeholder="输入搜索关键字" type="text">
            </div>
            <input id="searchsubmit" value="搜索" type="submit">
        </form>
    </div>
<div id="text-100" class="widget widget_text">			<div class="textwidget"><p><a href="http://edu.51cto.com/training/training_id-21.html?jobbole" target="_blank"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/bfdcef89jw1f1kuc0q6m2j208d03c0ss.jpg"></a></p>
</div>
		</div><div class="tabs tabbed_widget"><ul class="nav clearfix"><li class="active"><a id="link-tab1" href="#tab1" title="本周热门文章">本周热门文章</a></li><li><a id="link-tab2" href="#tab2" title="本月热门文章">本月热门文章</a></li><li><a id="link-tab3" href="#tab3" title="热门标签">热门标签</a></li></ul><div style="display: block;" id="tab1" class="tab"><div class="floated-thumb">
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta ">

                        <p>
                            <span class="numb">0</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98877/" title="一天只工作 3 小时的程序员，已坚持两年">一天只工作 3 小时的程序员，已坚...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta ">

                        <p>
                            <span class="numb">1</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98977/" title="程序员最爱 Mac、JS 是最热门技术">程序员最爱 Mac、JS 是最热门技术</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">2</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98879/" title="SQL 注入，永不过时的黑客技术">SQL 注入，永不过时的黑客技术</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">3</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98878/" title="最快的代码，是不运行的代码">最快的代码，是不运行的代码</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta ">

                        <p>
                            <span class="numb">4</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98876/" title="程序员编写技术文档的新手指南">程序员编写技术文档的新手指南</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">5</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98947/" title="盘点这些以国家名义研发的 Linux 系统">盘点这些以国家名义研发的 Linux ...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">6</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98902/" title="浏览器与服务器的消息通信">浏览器与服务器的消息通信</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">7</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98950/" title="性能测试的艺术">性能测试的艺术</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta ">

                        <p>
                            <span class="numb">8</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98899/" title="MySQL 索引及查询优化">MySQL 索引及查询优化</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta ">

                        <p>
                            <span class="numb">9</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/99034/" title="数据工程师常用的 Shell 命令">数据工程师常用的 Shell 命令</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                </div></div><div style="display: none;" id="tab2" class="tab"><div class="floated-thumb">
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">0</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98465/" title="为什么很少见工资高的程序员炫富？">为什么很少见工资高的程序员炫富？</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta ">

                        <p>
                            <span class="numb">1</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98487/" title="面试感悟：3年工作经验程序员应有的技能">面试感悟：3年工作经验程序员应有的...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">2</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98548/" title="神解释：向外行介绍程序员工作的复杂程度">神解释：向外行介绍程序员工作的复杂...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">3</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98488/" title="趣文：课堂上传纸条如何防范中间人攻击？">趣文：课堂上传纸条如何防范中间人攻...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">4</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98482/" title="我勒个去，程序员在开发时遇到的灵异现象">我勒个去，程序员在开发时遇到的灵异...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta ">

                        <p>
                            <span class="numb">5</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98212/" title="学会了 C 语言真的可以开发出很多东西吗？">学会了 C 语言真的可以开发出很多...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">6</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98420/" title="关于 App 程序员泡沫">关于 App 程序员泡沫</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">7</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98637/" title="女生节的一个分号，引发程序员的疯狂评论">女生节的一个分号，引发程序员的疯狂...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">8</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98634/" title="探索 .git 目录，让你真正了理解git">探索 .git 目录，让你真正了理解git</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                
                    
                    <!-- BEGIN .post-meta -->
                    <div class="post-meta  no-thumb">

                        <p>
                            <span class="numb">9</span>
                            <a class="meta-title" target="_blank" href="http://blog.jobbole.com/98029/" title="如何向外行解释PM频繁更改需求为什么会令程序员烦恼?">如何向外行解释PM频繁更改需求为什...</a><br>
                        </p>

                    </div>
                    <!-- END .post-meta -->

                    <div class="clear"></div>

                </div></div><div style="display: none;" id="tab3" class="tab"><p><a href="http://blog.jobbole.com/tag/net/" class="tag-link-1636" title="124 个话题" style="font-size: 13.455882352941px;">.Net</a>
<a href="http://blog.jobbole.com/tag/android/" class="tag-link-467" title="148 个话题" style="font-size: 14.176470588235px;">Android</a>
<a href="http://blog.jobbole.com/tag/app/" class="tag-link-1941" title="92 个话题" style="font-size: 12.117647058824px;">App</a>
<a href="http://blog.jobbole.com/tag/apple/" class="tag-link-180" title="37 个话题" style="font-size: 8.1029411764706px;">apple</a>
<a href="http://blog.jobbole.com/tag/bug/" class="tag-link-218" title="63 个话题" style="font-size: 10.470588235294px;">Bug</a>
<a href="http://blog.jobbole.com/tag/cpp/" class="tag-link-807" title="61 个话题" style="font-size: 10.264705882353px;">C++</a>
<a href="http://blog.jobbole.com/tag/c-sharp/" class="tag-link-2197" title="78 个话题" style="font-size: 11.397058823529px;">C sharp</a>
<a href="http://blog.jobbole.com/tag/css/" class="tag-link-711" title="68 个话题" style="font-size: 10.779411764706px;">CSS</a>
<a href="http://blog.jobbole.com/tag/c/" class="tag-link-757" title="193 个话题" style="font-size: 15.411764705882px;">C语言</a>
<a href="http://blog.jobbole.com/tag/facebook/" class="tag-link-164" title="107 个话题" style="font-size: 12.735294117647px;">Facebook</a>
<a href="http://blog.jobbole.com/tag/featuredpost/" class="tag-link-2241" title="622 个话题" style="font-size: 20.558823529412px;">featuredpost</a>
<a href="http://blog.jobbole.com/tag/git/" class="tag-link-885" title="79 个话题" style="font-size: 11.397058823529px;">Git</a>
<a href="http://blog.jobbole.com/tag/github/" class="tag-link-1253" title="64 个话题" style="font-size: 10.470588235294px;">Github</a>
<a href="http://blog.jobbole.com/tag/go/" class="tag-link-1633" title="37 个话题" style="font-size: 8.1029411764706px;">Go</a>
<a href="http://blog.jobbole.com/tag/google/" class="tag-link-198" title="278 个话题" style="font-size: 17.058823529412px;">Google</a>
<a href="http://blog.jobbole.com/tag/hadoop/" class="tag-link-862" title="37 个话题" style="font-size: 8.1029411764706px;">Hadoop</a>
<a href="http://blog.jobbole.com/tag/html5/" class="tag-link-182" title="84 个话题" style="font-size: 11.705882352941px;">HTML5</a>
<a href="http://blog.jobbole.com/tag/ios/" class="tag-link-860" title="231 个话题" style="font-size: 16.235294117647px;">iOS</a>
<a href="http://blog.jobbole.com/tag/it/" class="tag-link-513" title="43 个话题" style="font-size: 8.7205882352941px;">IT</a>
<a href="http://blog.jobbole.com/tag/java/" class="tag-link-457" title="147 个话题" style="font-size: 14.176470588235px;">java</a>
<a href="http://blog.jobbole.com/tag/javascript/" class="tag-link-683" title="276 个话题" style="font-size: 16.955882352941px;">Javascript</a>
<a href="http://blog.jobbole.com/tag/jquery/" class="tag-link-459" title="56 个话题" style="font-size: 9.9558823529412px;">jQuery</a>
<a href="http://blog.jobbole.com/tag/linux/" class="tag-link-190" title="340 个话题" style="font-size: 17.882352941176px;">Linux</a>
<a href="http://blog.jobbole.com/tag/mysql/" class="tag-link-191" title="90 个话题" style="font-size: 12.014705882353px;">MySQL</a>
<a href="http://blog.jobbole.com/tag/node-js/" class="tag-link-896" title="44 个话题" style="font-size: 8.8235294117647px;">Node.js</a>
<a href="http://blog.jobbole.com/tag/nosql/" class="tag-link-967" title="46 个话题" style="font-size: 9.0294117647059px;">NoSQL</a>
<a href="http://blog.jobbole.com/tag/objective-c/" class="tag-link-829" title="37 个话题" style="font-size: 8.1029411764706px;">Objective-C</a>
<a href="http://blog.jobbole.com/tag/php/" class="tag-link-168" title="113 个话题" style="font-size: 13.044117647059px;">php</a>
<a href="http://blog.jobbole.com/tag/python/" class="tag-link-663" title="171 个话题" style="font-size: 14.897058823529px;">Python</a>
<a href="http://blog.jobbole.com/tag/ruby/" class="tag-link-647" title="39 个话题" style="font-size: 8.3088235294118px;">Ruby</a>
<a href="http://blog.jobbole.com/tag/shell/" class="tag-link-1714" title="63 个话题" style="font-size: 10.470588235294px;">shell</a>
<a href="http://blog.jobbole.com/tag/soho/" class="tag-link-153" title="40 个话题" style="font-size: 8.4117647058824px;">soho</a>
<a href="http://blog.jobbole.com/tag/sql/" class="tag-link-857" title="54 个话题" style="font-size: 9.75px;">SQL</a>
<a href="http://blog.jobbole.com/tag/sql-server/" class="tag-link-2681" title="90 个话题" style="font-size: 12.014705882353px;">SQL Server</a>
<a href="http://blog.jobbole.com/tag/ui/" class="tag-link-1143" title="55 个话题" style="font-size: 9.8529411764706px;">UI</a>
<a href="http://blog.jobbole.com/tag/ui%e8%ae%be%e8%ae%a1/" class="tag-link-2548" title="142 个话题" style="font-size: 14.073529411765px;">UI设计</a>
<a href="http://blog.jobbole.com/tag/web/" class="tag-link-404" title="46 个话题" style="font-size: 9.0294117647059px;">Web</a>
<a href="http://blog.jobbole.com/tag/web-fundamentals/" class="tag-link-3560" title="38 个话题" style="font-size: 8.2058823529412px;">web fundamentals</a>
<a href="http://blog.jobbole.com/tag/web%e5%bc%80%e5%8f%91/" class="tag-link-493" title="118 个话题" style="font-size: 13.25px;">Web开发</a>
<a href="http://blog.jobbole.com/tag/book/" class="tag-link-1022" title="51 个话题" style="font-size: 9.5441176470588px;">书籍</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%92%e8%81%94%e7%bd%91/" class="tag-link-40" title="85 个话题" style="font-size: 11.705882352941px;">互联网</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%a4%e4%ba%92%e8%ae%be%e8%ae%a1/" class="tag-link-648" title="121 个话题" style="font-size: 13.352941176471px;">交互设计</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%a7%e5%93%81/" class="tag-link-522" title="92 个话题" style="font-size: 12.117647058824px;">产品</a>
<a href="http://blog.jobbole.com/tag/%e4%ba%a7%e5%93%81%e7%bb%8f%e7%90%86/" class="tag-link-549" title="57 个话题" style="font-size: 9.9558823529412px;">产品经理</a>
<a href="http://blog.jobbole.com/tag/%e4%bb%a3%e7%a0%81/" class="tag-link-489" title="105 个话题" style="font-size: 12.735294117647px;">代码</a>
<a href="http://blog.jobbole.com/tag/startup/" class="tag-link-4" title="205 个话题" style="font-size: 15.617647058824px;">创业</a>
<a href="http://blog.jobbole.com/tag/%e5%89%8d%e7%ab%af/" class="tag-link-1138" title="68 个话题" style="font-size: 10.779411764706px;">前端</a>
<a href="http://blog.jobbole.com/tag/%e5%9b%a2%e9%98%9f/" class="tag-link-551" title="59 个话题" style="font-size: 10.161764705882px;">团队</a>
<a href="http://blog.jobbole.com/tag/%e5%9b%be%e6%a0%87/" class="tag-link-319" title="36 个话题" style="font-size: 8px;">图标</a>
<a href="http://blog.jobbole.com/tag/%e5%a4%a7%e6%95%b0%e6%8d%ae/" class="tag-link-884" title="49 个话题" style="font-size: 9.3382352941176px;">大数据</a>
<a href="http://blog.jobbole.com/tag/%e5%a5%b3%e7%a8%8b%e5%ba%8f%e5%91%98/" class="tag-link-1460" title="54 个话题" style="font-size: 9.75px;">女程序员</a>
<a href="http://blog.jobbole.com/tag/%e5%a8%81%e5%ae%a2/" class="tag-link-129" title="40 个话题" style="font-size: 8.4117647058824px;">威客</a>
<a href="http://blog.jobbole.com/tag/%e5%ae%89%e5%85%a8/" class="tag-link-1214" title="142 个话题" style="font-size: 14.073529411765px;">安全</a>
<a href="http://blog.jobbole.com/tag/%e5%ae%89%e5%8d%93%e5%bc%80%e5%8f%91/" class="tag-link-3362" title="59 个话题" style="font-size: 10.161764705882px;">安卓开发</a>
<a href="http://blog.jobbole.com/tag/%e5%ae%a2%e6%88%b7/" class="tag-link-174" title="53 个话题" style="font-size: 9.6470588235294px;">客户</a>
<a href="http://blog.jobbole.com/tag/%e5%b7%a5%e5%85%b7/" class="tag-link-18" title="130 个话题" style="font-size: 13.661764705882px;">工具</a>
<a href="http://blog.jobbole.com/tag/%e5%b7%a5%e7%a8%8b%e5%b8%88/" class="tag-link-470" title="38 个话题" style="font-size: 8.2058823529412px;">工程师</a>
<a href="http://blog.jobbole.com/tag/%e5%bc%80%e5%8f%91%e4%ba%ba%e5%91%98/" class="tag-link-370" title="122 个话题" style="font-size: 13.352941176471px;">开发人员</a>
<a href="http://blog.jobbole.com/tag/%e5%bc%80%e6%ba%90/" class="tag-link-196" title="93 个话题" style="font-size: 12.117647058824px;">开源</a>
<a href="http://blog.jobbole.com/tag/%e5%be%ae%e8%bd%af/" class="tag-link-429" title="89 个话题" style="font-size: 11.911764705882px;">微软</a>
<a href="http://blog.jobbole.com/tag/%e6%8a%80%e6%9c%af%e9%9d%a2%e8%af%95/" class="tag-link-1876" title="49 个话题" style="font-size: 9.3382352941176px;">技术面试</a>
<a href="http://blog.jobbole.com/tag/%e6%8b%9b%e8%81%98/" class="tag-link-326" title="46 个话题" style="font-size: 9.0294117647059px;">招聘</a>
<a href="http://blog.jobbole.com/tag/%e6%95%88%e7%8e%87/" class="tag-link-415" title="53 个话题" style="font-size: 9.6470588235294px;">效率</a>
<a href="http://blog.jobbole.com/tag/%e6%95%99%e7%a8%8b/" class="tag-link-600" title="53 个话题" style="font-size: 9.6470588235294px;">教程</a>
<a href="http://blog.jobbole.com/tag/%e6%95%b0%e5%ad%a6/" class="tag-link-495" title="37 个话题" style="font-size: 8.1029411764706px;">数学</a>
<a href="http://blog.jobbole.com/tag/database/" class="tag-link-353" title="285 个话题" style="font-size: 17.161764705882px;">数据库</a>
<a href="http://blog.jobbole.com/tag/time-management/" class="tag-link-271" title="47 个话题" style="font-size: 9.1323529411765px;">时间管理</a>
<a href="http://blog.jobbole.com/tag/%e6%9c%8d%e5%8a%a1%e5%99%a8/" class="tag-link-311" title="43 个话题" style="font-size: 8.7205882352941px;">服务器</a>
<a href="http://blog.jobbole.com/tag/machinelearning/" class="tag-link-1910" title="76 个话题" style="font-size: 11.294117647059px;">机器学习</a>
<a href="http://blog.jobbole.com/tag/architecture/" class="tag-link-603" title="99 个话题" style="font-size: 12.426470588235px;">架构</a>
<a href="http://blog.jobbole.com/tag/%e6%b5%8b%e8%af%95/" class="tag-link-678" title="86 个话题" style="font-size: 11.808823529412px;">测试</a>
<a href="http://blog.jobbole.com/tag/%e6%b5%8f%e8%a7%88%e5%99%a8/" class="tag-link-63" title="52 个话题" style="font-size: 9.5441176470588px;">浏览器</a>
<a href="http://blog.jobbole.com/tag/%e6%b8%b8%e6%88%8f/" class="tag-link-797" title="70 个话题" style="font-size: 10.882352941176px;">游戏</a>
<a href="http://blog.jobbole.com/tag/%e7%94%a8%e6%88%b7/" class="tag-link-460" title="59 个话题" style="font-size: 10.161764705882px;">用户</a>
<a href="http://blog.jobbole.com/tag/%e7%94%a8%e6%88%b7%e4%bd%93%e9%aa%8c/" class="tag-link-580" title="197 个话题" style="font-size: 15.514705882353px;">用户体验</a>
<a href="http://blog.jobbole.com/tag/%e7%95%8c%e9%9d%a2/" class="tag-link-4190" title="47 个话题" style="font-size: 9.1323529411765px;">界面</a>
<a href="http://blog.jobbole.com/tag/%e7%a0%81%e5%86%9c%e6%95%85%e4%ba%8b/" class="tag-link-2863" title="54 个话题" style="font-size: 9.75px;">码农故事</a>
<a href="http://blog.jobbole.com/tag/%e7%a7%bb%e5%8a%a8%e5%ba%94%e7%94%a8/" class="tag-link-654" title="70 个话题" style="font-size: 10.882352941176px;">移动应用</a>
<a href="http://blog.jobbole.com/tag/%e7%a7%bb%e5%8a%a8%e7%ab%af/" class="tag-link-3904" title="45 个话题" style="font-size: 8.9264705882353px;">移动端</a>
<a href="http://blog.jobbole.com/tag/%e7%a8%8b%e5%ba%8f%e5%91%98/" class="tag-link-368" title="845 个话题" style="font-size: 22px;">程序员</a>
<a href="http://blog.jobbole.com/tag/algorithm/" class="tag-link-650" title="216 个话题" style="font-size: 15.926470588235px;">算法</a>
<a href="http://blog.jobbole.com/tag/management/" class="tag-link-32" title="37 个话题" style="font-size: 8.1029411764706px;">管理</a>
<a href="http://blog.jobbole.com/tag/%e7%bc%96%e7%a8%8b/" class="tag-link-389" title="139 个话题" style="font-size: 13.970588235294px;">编程</a>
<a href="http://blog.jobbole.com/tag/%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80/" class="tag-link-596" title="117 个话题" style="font-size: 13.147058823529px;">编程语言</a>
<a href="http://blog.jobbole.com/tag/%e7%bd%91%e7%ab%99/" class="tag-link-150" title="82 个话题" style="font-size: 11.602941176471px;">网站</a>
<a href="http://blog.jobbole.com/tag/%e7%bd%91%e9%a1%b5%e8%ae%be%e8%ae%a1/" class="tag-link-454" title="243 个话题" style="font-size: 16.441176470588px;">网页设计</a>
<a href="http://blog.jobbole.com/tag/%e8%81%8c%e5%9c%ba/" class="tag-link-253" title="363 个话题" style="font-size: 18.191176470588px;">职场</a>
<a href="http://blog.jobbole.com/tag/%e8%87%aa%e7%94%b1%e8%81%8c%e4%b8%9a/" class="tag-link-315" title="128 个话题" style="font-size: 13.558823529412px;">自由职业</a>
<a href="http://blog.jobbole.com/tag/translation/" class="tag-link-49" title="39 个话题" style="font-size: 8.3088235294118px;">英语</a>
<a href="http://blog.jobbole.com/tag/%e8%8b%b9%e6%9e%9c/" class="tag-link-183" title="52 个话题" style="font-size: 9.5441176470588px;">苹果</a>
<a href="http://blog.jobbole.com/tag/%e8%ae%be%e8%ae%a1/" class="tag-link-431" title="131 个话题" style="font-size: 13.661764705882px;">设计</a>
<a href="http://blog.jobbole.com/tag/%e8%ae%be%e8%ae%a1%e5%b8%88/" class="tag-link-436" title="208 个话题" style="font-size: 15.720588235294px;">设计师</a>
<a href="http://blog.jobbole.com/tag/%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f/" class="tag-link-1845" title="57 个话题" style="font-size: 9.9558823529412px;">设计模式</a>
<a href="http://blog.jobbole.com/tag/%e8%b6%a3%e6%96%87/" class="tag-link-2105" title="51 个话题" style="font-size: 9.5441176470588px;">趣文</a>
<a href="http://blog.jobbole.com/tag/%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e5%b8%88/" class="tag-link-400" title="39 个话题" style="font-size: 8.3088235294118px;">软件工程师</a>
<a href="http://blog.jobbole.com/tag/%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91/" class="tag-link-38" title="87 个话题" style="font-size: 11.808823529412px;">软件开发</a>
<a href="http://blog.jobbole.com/tag/%e9%9d%a2%e8%af%95/" class="tag-link-173" title="109 个话题" style="font-size: 12.838235294118px;">面试</a>
<a href="http://blog.jobbole.com/tag/%e9%a1%b9%e7%9b%ae/" class="tag-link-177" title="38 个话题" style="font-size: 8.2058823529412px;">项目</a>
<a href="http://blog.jobbole.com/tag/%e9%a1%b9%e7%9b%ae%e7%bb%8f%e7%90%86/" class="tag-link-1049" title="38 个话题" style="font-size: 8.2058823529412px;">项目经理</a>
<a href="http://blog.jobbole.com/tag/%e9%bb%91%e5%ae%a2/" class="tag-link-617" title="60 个话题" style="font-size: 10.264705882353px;">黑客</a></p></div></div><div id="text-85" class="widget widget_text">			<div class="textwidget"><p><script language="javascript"> 
var randomNum = Math.round(Math.random()*1);
var image=new Array(2);
image[0]="http://ww2.sinaimg.cn/mw690/e5298966gw1evyjrd4iqcj208c03c0t0.jpg";
image[1]="http://ww4.sinaimg.cn/mw690/bfdcef89gw1exedqx5njlj208c03c3yu.jpg";
var imageUrl=image[randomNum];
var urls=new Array(2);
urls[0]="http://blog.jobbole.com/84342/?utm_source=blog.jobbole.com&#038;utm_medium=rightBanner-2&#038;utm_content=2015.9.16";
urls[1]="http://group.jobbole.com/category/feedback/writer-team?utm_source=blog.jobbole.com&#038;utm_medium=rightBanner-2&#038;utm_content=2015.10.26";
var url = urls[randomNum];
var adHTML = "<a href='"+url+"' target='_blank'><img src='"+imageUrl+"' border='0'></a>";
document.write(adHTML);
</script><a href="http://blog.jobbole.com/84342/?utm_source=blog.jobbole.com&amp;utm_medium=rightBanner-2&amp;utm_content=2015.9.16" target="_blank"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/e5298966gw1evyjrd4iqcj208c03c0t0.jpg" border="0"></a></p>
</div>
		</div>
        <h3 class="widget-title">
            <a target="_blank" href="http://top.jobbole.com/category/news/">业界热点资讯</a>
            <span style="float:right;"><a target="_blank" href="http://top.jobbole.com/category/news/">更多 »</a></span>
        </h3>
        <!-- BEGIN .container -->
        <div class="container">
            
                <!-- BEGIN .grid-4 -->
                <div class="grid-4 floated-thumb">

                    
                        <!-- BEGIN .post-thumb -->
                        <div class="post-thumb">
                            <a target="_blank" href="http://top.jobbole.com/34203/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/565719730ba5cef93633ac3fb10cd4e5.jpg" alt="" height="50" width="50"></a>
                        </div>
                        <!-- END .post-thumb -->

                        <!-- BEGIN .post-meta -->
                        <div class="post-meta">

                            <p>
                                <a class="meta-title" title="红帽公布年收入 20.5 亿美元，证明开源是一笔大生意" target="_blank" href="http://top.jobbole.com/34203/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news">红帽公布年收入 20.5 亿美元，证明开源是一笔大生意</a><br>
                                2 小时前                                · <i class="fa fa-thumbs-o-up"></i> 2                                
                            </p>

                        </div>
                        <!-- END .post-meta -->

                        <div class="clear"></div>

                    
                        <!-- BEGIN .post-thumb -->
                        <div class="post-thumb">
                            <a target="_blank" href="http://top.jobbole.com/34198/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/433ac49144484146a07dc0d85b08b5ef.jpg" alt="" height="50" width="50"></a>
                        </div>
                        <!-- END .post-thumb -->

                        <!-- BEGIN .post-meta -->
                        <div class="post-meta">

                            <p>
                                <a class="meta-title" title="三星推出全新Maia主控固态硬盘：主打性价比" target="_blank" href="http://top.jobbole.com/34198/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news">三星推出全新Maia主控固态硬盘：主打性价比</a><br>
                                1 天前                                · <i class="fa fa-thumbs-o-up"></i> 2                                
                            </p>

                        </div>
                        <!-- END .post-meta -->

                        <div class="clear"></div>

                    
                        <!-- BEGIN .post-thumb -->
                        <div class="post-thumb">
                            <a target="_blank" href="http://top.jobbole.com/34197/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/6758e9757d9ba248830b1819c5b14233.jpg" alt="" height="50" width="50"></a>
                        </div>
                        <!-- END .post-thumb -->

                        <!-- BEGIN .post-meta -->
                        <div class="post-meta">

                            <p>
                                <a class="meta-title" title="CAD已放出：大家可以修改Steam游戏手柄和3D打印其配件了" target="_blank" href="http://top.jobbole.com/34197/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news">CAD已放出：大家可以修改Steam游戏手柄和3D打印其配...</a><br>
                                1 天前                                · <i class="fa fa-thumbs-o-up"></i> 2                                
                            </p>

                        </div>
                        <!-- END .post-meta -->

                        <div class="clear"></div>

                    
                        <!-- BEGIN .post-thumb -->
                        <div class="post-thumb">
                            <a target="_blank" href="http://top.jobbole.com/34196/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/f6ced86a04569fa0d1db0bd9ff4c5386.jpg" alt="" height="50" width="50"></a>
                        </div>
                        <!-- END .post-thumb -->

                        <!-- BEGIN .post-meta -->
                        <div class="post-meta">

                            <p>
                                <a class="meta-title" title="PowerPoint 2016的Designer工具更新变得更好用" target="_blank" href="http://top.jobbole.com/34196/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news">PowerPoint 2016的Designer工具更新变得更好用</a><br>
                                1 天前                                · <i class="fa fa-thumbs-o-up"></i> 2                                
                            </p>

                        </div>
                        <!-- END .post-meta -->

                        <div class="clear"></div>

                    
                        <!-- BEGIN .post-thumb -->
                        <div class="post-thumb">
                            <a target="_blank" href="http://top.jobbole.com/34189/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/565719730ba5cef93633ac3fb10cd4e5.jpg" alt="" height="50" width="50"></a>
                        </div>
                        <!-- END .post-thumb -->

                        <!-- BEGIN .post-meta -->
                        <div class="post-meta">

                            <p>
                                <a class="meta-title" title="研究人员发现一种高度隐秘的恶意程序，能感染不联网的计算机" target="_blank" href="http://top.jobbole.com/34189/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-top-news">研究人员发现一种高度隐秘的恶意程序，能感染不联网的计算机</a><br>
                                1 天前                                · <i class="fa fa-thumbs-o-up"></i> 2                                
                            </p>

                        </div>
                        <!-- END .post-meta -->

                        <div class="clear"></div>

                    
                </div>
                <!-- END .grid-4 -->

            
            <div class="clear"></div>

        </div>
        <!-- END .container -->
        <div id="text-98" class="widget widget_text">			<div class="textwidget"><p><script language="javascript"> 
var randomNum = Math.round(Math.random()*1);
var image=new Array(2);
image[0]="http://ww1.sinaimg.cn/mw690/bfdcef89gw1exedmapz9aj208c03c74r.jpg";  
image[1]="http://ww1.sinaimg.cn/mw690/bfdcef89gw1exedmapz9aj208c03c74r.jpg";
var imageUrl=image[randomNum];
var urls=new Array(2);
urls[0]="http://group.jobbole.com/7843/?utm_source=blog.jobbole.com&#038;utm_medium=rightBanner-3&#038;utm_content=2015.10.26";
urls[1]="http://group.jobbole.com/7843/?utm_source=blog.jobbole.com&#038;utm_medium=rightBanner-3&#038;utm_content=2015.10.26";
var url = urls[randomNum];
var adHTML = "<a href='"+url+"' target='_blank'><img src='"+imageUrl+"' border='0'></a>";
document.write(adHTML);
</script><a href="http://group.jobbole.com/7843/?utm_source=blog.jobbole.com&amp;utm_medium=rightBanner-3&amp;utm_content=2015.10.26" target="_blank"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/bfdcef89gw1exedmapz9aj208c03c74r.jpg" border="0"></a></p>
</div>
		</div>            <h3 class="widget-title">
                <a href="http://hao.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources-more" target="_blank">精选工具资源</a>
                <span style="float:right;"><a target="_blank" href="http://hao.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources-more">更多资源 »</a></span>
            </h3>
            <div class="container">
                <div class="grid-4">
                
                    <div class="floated-thumb">
                        <div class="post-thumb">
                            <a target="_blank" href="http://hao.jobbole.com/pure-css/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Pure.css：一套可用于所有Web项目的小型响应式CSS模块"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/6ed5e4a45063d307cfef3fc2a40e0ec9.png" alt="" height="50" width="50"></a>
                        </div>
                        <div class="post-meta">
                            <p>
                                <a class="meta-title" target="_blank" href="http://hao.jobbole.com/pure-css/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Pure.css：一套可用于所有Web项目的小型响应式CSS模块">Pure.css：一套可用于所有Web项目的小型响应式CSS模块</a><br>
                                <a href="http://hao.jobbole.com/category/css/" title="查看 CSS 中的全部文章" rel="category tag">CSS</a>, <a href="http://hao.jobbole.com/category/css/css-frameworks/" title="查看 框架 中的全部文章" rel="category tag">框架</a>
                            </p>
                        </div>
                        <div class="clear"></div>
                    </div>
                
                    <div class="floated-thumb">
                        <div class="post-thumb">
                            <a target="_blank" href="http://hao.jobbole.com/materialize/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Materialize：基于Material Design的现代响应式前端框架"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/f3ec9be439eb0585c4fd58cc3ebc1c83.png" alt="" height="50" width="50"></a>
                        </div>
                        <div class="post-meta">
                            <p>
                                <a class="meta-title" target="_blank" href="http://hao.jobbole.com/materialize/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Materialize：基于Material Design的现代响应式前端框架">Materialize：基于Material Design的现代响应式前端框架</a><br>
                                <a href="http://hao.jobbole.com/category/css/" title="查看 CSS 中的全部文章" rel="category tag">CSS</a>, <a href="http://hao.jobbole.com/category/css/css-frameworks/" title="查看 框架 中的全部文章" rel="category tag">框架</a>
                            </p>
                        </div>
                        <div class="clear"></div>
                    </div>
                
                    <div class="floated-thumb">
                        <div class="post-thumb">
                            <a target="_blank" href="http://hao.jobbole.com/material-design-lite/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Material Design Lite：Material Design风格网站框架"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/56706eca8cf9ff43c95c2c9adf61eb1a.png" alt="" height="50" width="50"></a>
                        </div>
                        <div class="post-meta">
                            <p>
                                <a class="meta-title" target="_blank" href="http://hao.jobbole.com/material-design-lite/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Material Design Lite：Material Design风格网站框架">Material Design Lite：Material Design风格网站...</a><br>
                                <a href="http://hao.jobbole.com/category/css/" title="查看 CSS 中的全部文章" rel="category tag">CSS</a>, <a href="http://hao.jobbole.com/category/css/css-frameworks/" title="查看 框架 中的全部文章" rel="category tag">框架</a>
                            </p>
                        </div>
                        <div class="clear"></div>
                    </div>
                
                    <div class="floated-thumb">
                        <div class="post-thumb">
                            <a target="_blank" href="http://hao.jobbole.com/semantic-ui/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Semantic UI：友好且功能强大的html框架"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/b7b88db1f0984f7124f9d17665c4f611.png" alt="" height="50" width="50"></a>
                        </div>
                        <div class="post-meta">
                            <p>
                                <a class="meta-title" target="_blank" href="http://hao.jobbole.com/semantic-ui/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Semantic UI：友好且功能强大的html框架">Semantic UI：友好且功能强大的html框架</a><br>
                                <a href="http://hao.jobbole.com/category/css/" title="查看 CSS 中的全部文章" rel="category tag">CSS</a>, <a href="http://hao.jobbole.com/category/css/css-frameworks/" title="查看 框架 中的全部文章" rel="category tag">框架</a>
                            </p>
                        </div>
                        <div class="clear"></div>
                    </div>
                
                    <div class="floated-thumb">
                        <div class="post-thumb">
                            <a target="_blank" href="http://hao.jobbole.com/skeleton/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Skeleton：一个超简单的响应式模板"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/aeec1d3aa18dc5ddb9002b04600fbd15.png" alt="" height="50" width="50"></a>
                        </div>
                        <div class="post-meta">
                            <p>
                                <a class="meta-title" target="_blank" href="http://hao.jobbole.com/skeleton/?utm_source=blog.jobbole.com&amp;utm_medium=sidebar-resources" title="Skeleton：一个超简单的响应式模板">Skeleton：一个超简单的响应式模板</a><br>
                                <a href="http://hao.jobbole.com/category/css/" title="查看 CSS 中的全部文章" rel="category tag">CSS</a>, <a href="http://hao.jobbole.com/category/css/css-frameworks/" title="查看 框架 中的全部文章" rel="category tag">框架</a>
                            </p>
                        </div>
                        <div class="clear"></div>
                    </div>
                                </div>
            </div>
        		<h3 class="widget-title">最新评论</h3>
		<ul>
		
					
			<li id="rc-comment-156033" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/wuweibuzhi6154"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/100.gif" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="C++11带来的优雅语法" href="http://blog.jobbole.com/99070/#comment-156033" rel="nofollow">C++11带来的优雅语法</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				c++高级特性越来越多了啊				</div>
			</li>
			
					
			<li id="rc-comment-156032" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/%E8%A5%BF%E7%93%9C%E5%A6%B9%E5%AD%90"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/bd8b509042d6dcc056fc529e056ea5d4.jpg" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="缓存、缓存算法和缓存框架简介" href="http://blog.jobbole.com/30940/#comment-156032" rel="nofollow">缓存、缓存算法和缓存框架简介</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				值得收藏 有时间好好研究 谢谢思密达~				</div>
			</li>
			
					
			<li id="rc-comment-156031" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/lamhudexingfang"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/100.jpg" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="通俗讲解傅里叶变换【完整版】" href="http://blog.jobbole.com/70549/#comment-156031" rel="nofollow">通俗讲解傅里叶变换【完整版】</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				好厉害，绝对分享点赞				</div>
			</li>
			
					
			<li id="rc-comment-156029" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/coco001"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/f99f153e079ca5e6c2385dd88b830a74.jpg" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="Hadoop学习笔记：MapReduce框架详解" href="http://blog.jobbole.com/84089/#comment-156029" rel="nofollow">Hadoop学习笔记：MapReduce框...</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				写的不错哦				</div>
			</li>
			
					
			<li id="rc-comment-156028" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/huangxiaofei"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/Corbis-42-221258652.jpg" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="程序员最爱 Mac、JS 是最热门技术" href="http://blog.jobbole.com/98977/#comment-156028" rel="nofollow">程序员最爱 Mac、JS 是最热...</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				不用改口，PHP还是最好的语言~ LOL				</div>
			</li>
			
					
			<li id="rc-comment-156027" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/huangxiaofei"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/Corbis-42-221258652.jpg" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="程序员最爱 Mac、JS 是最热门技术" href="http://blog.jobbole.com/98977/#comment-156027" rel="nofollow">程序员最爱 Mac、JS 是最热...</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				看得真仔细！非常感谢提出问题，目前已经修正！				</div>
			</li>
			
					
			<li id="rc-comment-156026" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/WangNianyi2001"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/5583f25151b335807139a01b8b8e8980.png" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="有没有一段代码，让你觉得人类的智慧也可以璀璨无比？" href="http://blog.jobbole.com/98471/#comment-156026" rel="nofollow">有没有一段代码，让你觉得人类的...</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				我刚想说“这不是M67的吗”，结果就看到第一句话了				</div>
			</li>
			
					
			<li id="rc-comment-156025" class="rc-item rc-comment rc-clearfix">
				<a target="_blank" href="http://www.jobbole.com/members/28054082531"><img class="rc-avatar rc-left" alt="" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/8fbdaaa5ea6d3b49c8c1c825aafeb5d9.png" height="34" width="34"></a>
				<div class="rc-info">
				Re:
				<a class="rc-post" target="_blank" title="StackOverflow 这么大，它的架构是怎么样的？" href="http://blog.jobbole.com/98633/#comment-156025" rel="nofollow">StackOverflow 这么大，它的...</a>
				</div>
				<div class="rc-timestamp"></div>
				<div class="rc-excerpt">
				技术不错，虽然是windows平台。				</div>
			</li>
			
				
		</ul>
        	
	<!-- BEGIN .container -->
	<div class="container">
	
		<!-- BEGIN .grid-2 -->
		<div class="grid-2">
			
						
		</div>
		<!-- END .grid-2 -->
		
		<!-- BEGIN .grid-2 -->
		<div class="grid-2">
			
						
		</div>
		<!-- END .grid-2 -->
		
		<div class="clear"></div>
			
	</div>
	<!-- END .container -->

</div>
<!-- END #sidebar -->
<div class="clear"></div>	


</div>
<!-- END #wrapper -->

<!-- BEGIN footer -->

    <footer>

        <!-- BEGIN .container -->
        <div class="container">

            <!-- BEGIN .grid-4 -->
            <div class="grid-4">

                <div id="text-3" class="widget widget_text"><h3 class="widget-title">关于伯乐在线博客</h3>			<div class="textwidget"><p>在
这个信息爆炸的时代，人们已然被大量、快速并且简短的信息所包围。然而，我们相信：过多“快餐”式的阅读只会令人“虚胖”，缺乏实质的内涵。伯乐在线博客
团队正试图以我们微薄的力量，把优秀的原创/译文分享给读者，做一个小而精的精选博客，为“快餐”添加一些“营养”元素。</p>
<p><b>快速链接</b><br>
<a target="_blank" href="http://group.jobbole.com/category/feedback/thanks">问题反馈与求助 » </a><br>
<a target="_blank" href="http://group.jobbole.com/category/feedback/trans-team/">加入伯乐翻译小组 » </a><br>
<a target="_blank" href="http://group.jobbole.com/category/feedback/writer-team/">加入伯乐原创写作 » </a></p>
</div>
		</div>
            </div>
            <!-- END .grid-4 -->

            <!-- BEGIN .grid-4 -->
            <div class="grid-4">

                <div id="text-4" class="widget widget_text"><h3 class="widget-title">关注我们</h3>			<div class="textwidget"><p>新浪微博：<a href="http://weibo.com/jobbole" target="_blank">@伯乐在线官方微博</a><br>
RSS：<a href="http://blog.jobbole.com/feed/" target="_blank">订阅地址</a><br>
推荐微信号 <br>
<img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/iprogrammer_weixin.png" height="110" width="100"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/ui_weixin.png" height="110" width="100"><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/geekfan_weixin.png" height="110" width="100"></p>
<p><strong>合作联系</strong><br>
Email：<a href="mailto:bd@jobbole.com">bd@Jobbole.com</a><br>
QQ： 2302462408  （加好友请注明来意）</p>
</div>
		</div>
            </div>
            <!-- END .grid-4 -->

            <!-- BEGIN .grid-4 -->
            <div class="grid-4">

                <div id="text-7" class="widget widget_text"><h3 class="widget-title">更多频道</h3>			<div class="textwidget"><p><a href="http://group.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">小组</a> – 好的话题、有启发的回复、值得信赖的圈子<br>
<a href="http://top.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">头条</a> – 分享和发现有价值的内容与观点<br>
<a href="http://date.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">相亲</a> – 为IT单身男女服务的征婚传播平台<br>
<a href="http://hao.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">资源</a> – 优秀的工具资源导航<br>
<a href="http://fanyi.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">翻译</a> – 翻译传播优秀的外文文章<br>
<a href="http://blog.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">文章</a> – 国内外的精选文章<br>
<a href="http://design.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">设计</a> – UI,网页，交互和用户体验<br>
<a href="http://ios.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">iOS</a> – 专注iOS技术分享<br>
<a href="http://android.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">安卓</a> – 专注Android技术分享<br>
<a href="http://web.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">前端</a> – JavaScript, HTML5, CSS<br>
<a href="http://www.importnew.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">Java</a> – 专注Java技术分享<br>
<a href="http://python.jobbole.com/?utm_source=blog.jobbole.com&amp;utm_medium=bottomText" target="_blank">Python</a> – 专注Python技术分享</p>
</div>
		</div>
            </div>
            <!-- END .grid-4 -->

            <div class="clear"></div>

        </div>
        <!-- END .container -->

        <!-- BEGIN #bottom -->
        <div id="bottom">

            <!-- BEGIN .container -->
            <div class="container">

                <!-- BEGIN .grid-12 -->
                <div class="grid-12">

                    <p>© 2016 伯乐在线
                    <span style="margin-left: 40px;">
                        <a href="http://www.jobbole.com/">首页</a>&nbsp;&nbsp;
                        <a href="http://blog.jobbole.com/">博客</a>&nbsp;&nbsp;
                        <a href="http://hao.jobbole.com/">资源</a>&nbsp;&nbsp;
                        <a href="http://group.jobbole.com/">小组</a>&nbsp;&nbsp;
                        <a href="http://date.jobbole.com/">相亲</a>&nbsp;&nbsp;
                        <a href="http://group.jobbole.com/category/feedback/thanks/"><i class="fa fa-bullhorn"></i> 反馈</a>
                    </span>
                <span style="float:right; ">
                    本站由 <a href="http://www.ucloud.cn/?utm_source=zanzhu&amp;utm_campaign=bolezaixian&amp;utm_medium=display" target="_blank">UCloud</a> 赞助云主机
                </span>
                    </p>

                </div>
                <!-- END .grid-12 -->

                <div class="clear"></div>

            </div>
            <!-- END .container -->

        </div>
        <!-- END #bottom -->
    </footer>

    
<!-- END footer -->




<!-- WP SyntaxHighlighter Ver.1.7.3 Begin -->
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shCore.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shLegacy.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shAutoloader.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushAppleScript.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushAS3.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushBash.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushColdFusion.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushCpp.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushCSharp.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushCss.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushDelphi.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushDiff.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushErlang.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushJava.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushJavaFX.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushJScript.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushPerl.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushPhp.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushPlain.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushPowerShell.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushPython.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushRuby.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushSass.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushScala.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushSql.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushVb.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shBrushXml.js"></script>
<script type="text/javascript">//<![CDATA[
	SyntaxHighlighter.autoloader(
	"applescript	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushAppleScript.js?ver=3.0"
	,"as3 actionscript3	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushAS3.js?ver=3.0"
	,"bash shell	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushBash.js?ver=3.0"
	,"cf coldfusion	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushColdFusion.js?ver=3.0"
	,"cpp c	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js?ver=3.0"
	,"c# c-sharp csharp	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCSharp.js?ver=3.0"
	,"css	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCss.js?ver=3.0"
	,"delphi pas pascal	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushDelphi.js?ver=3.0"
	,"diff patch	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushDiff.js?ver=3.0"
	,"erl erlang	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushErlang.js?ver=3.0"
	,"java	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js?ver=3.0"
	,"jfx javafx	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJavaFX.js?ver=3.0"
	,"js jscript javascript	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJScript.js?ver=3.0"
	,"perl pl	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPerl.js?ver=3.0"
	,"php	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPhp.js?ver=3.0"
	,"plain text	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPlain.js?ver=3.0"
	,"ps powershell	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPowerShell.js?ver=3.0"
	,"py python	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPython.js?ver=3.0"
	,"rails ror ruby rb	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushRuby.js?ver=3.0"
	,"sass scss	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushSass.js?ver=3.0"
	,"scala	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushScala.js?ver=3.0"
	,"sql	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushSql.js?ver=3.0"
	,"vb vbnet	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushVb.js?ver=3.0"
	,"xml xhtml xslt html	http://blog.jobbole.com/wp-content/plugins/wp-syntaxhighlighter/syntaxhighlighter3/scripts/shBrushXml.js?ver=3.0"
	);
	SyntaxHighlighter.defaults['auto-links'] = false;
	SyntaxHighlighter.defaults['quick-code'] = true;
	SyntaxHighlighter.defaults['title'] = '';
	SyntaxHighlighter.defaults['class-name'] = 'notranslate';
	SyntaxHighlighter.defaults['collapse'] = false;
	SyntaxHighlighter.defaults['first-line'] = 1;
	SyntaxHighlighter.defaults['gutter'] = true;
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['smart-tabs'] = true;
	SyntaxHighlighter.defaults['tab-size'] = 4;
	SyntaxHighlighter.defaults['toolbar'] = false;
 SyntaxHighlighter.config.stripBrs = true;
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = "Can't find brush for: ";
	SyntaxHighlighter.config.strings.brushNotHtmlScript = "Brush wasn't configured for html-script option: ";
	SyntaxHighlighter.all();
	dp.SyntaxHighlighter.HighlightAll('code')
//]]></script>
<!-- WP SyntaxHighlighter Ver.1.7.3 End -->
<script type="text/javascript">
/* <![CDATA[ */
var thickboxL10n = {"next":"\u4e0b\u4e00\u9875 >","prev":"< \u4e0a\u4e00\u9875","image":"\u56fe\u50cf","of":"\/","close":"\u5173\u95ed","noiframes":"\u8fd9\u4e2a\u529f\u80fd\u9700\u8981 iframe \u7684\u652f\u6301\u3002\u60a8\u53ef\u80fd\u7981\u6b62\u4e86 iframe \u7684\u663e\u793a\uff0c\u6216\u60a8\u7684\u6d4f\u89c8\u5668\u4e0d\u652f\u6301\u6b64\u529f\u80fd\u3002","loadingAnimation":"http:\/\/blog.jobbole.com\/wp-includes\/js\/thickbox\/loadingAnimation.gif","closeImage":"http:\/\/blog.jobbole.com\/wp-includes\/js\/thickbox\/tb-close.png"};
/* ]]> */
</script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/thickbox.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/underscore.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/shortcode.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/media-upload.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var viewsCacheL10n = {"admin_ajax_url":"http:\/\/blog.jobbole.com\/wp-admin\/admin-ajax.php","post_id":"26209"};
/* ]]> */
</script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/postviews-cache.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/ready.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/easing.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/validate.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/touchwipe.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/caroufredsel.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/flexslider.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/jplayer.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/fitvids.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/selectnav.js"></script>
<script type="text/javascript" src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/effects.js"></script>


<div id="full-btm">
<a><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/back-btm.png" alt="跳到底部" title="跳到底部" width="20" border="0"></a>
</div>

<script type="text/javascript">
jQuery('#full-btm').click(function(){
    jQuery('html, body').animate({scrollTop:jQuery(document).height()}, 'slow');
    return false;
});
</script>

<div id="full-top">
<a><img src="Git%E8%AF%A6%E8%A7%A3%E4%B9%8B%E4%B9%9D%EF%BC%9AGit%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86%20-%20%E5%8D%9A%E5%AE%A2%20-%20%E4%BC%AF%E4%B9%90%E5%9C%A8%E7%BA%BF_files/back-top.png" alt="返回顶部" title="返回顶部" width="20" border="0"></a>
</div>

<script type="text/javascript">
jQuery('#full-top').click(function(){
    jQuery('html, body').animate({scrollTop:0}, 'slow');
    return false;
});

</script>





</body><!-- END body --></html>
<!-- END html -->