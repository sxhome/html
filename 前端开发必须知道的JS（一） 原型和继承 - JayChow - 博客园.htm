<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>前端开发必须知道的JS（一） 原型和继承 - JayChow - 博客园</title>
<link type="text/css" rel="stylesheet" href="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/blog-common.css">
<link id="MainCss" type="text/css" rel="stylesheet" href="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/bundle-nature.css">
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/ljchow/rss">
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/ljchow/rsd.xml">
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/ljchow/wlwmanifest.xml">
<script src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/encoder.js" type="text/javascript"></script><script src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'ljchow', cb_enable_mathjax=false;</script>
<script src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/blog-common.js" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>
<!--PageBeginHtml Block Begin-->
    <style type="text/css">
.btnJay
        {
            border: solid 1px #7AC4EA;
            background-color: White;
            color: #154BA0;
            padding-top: 3px;
            cursor:pointer;
        }
        .txtJay
        {
            font-family: Arial, Tahoma;
            font-size: 12px;
        }
        .textareaJay{
            border: solid 1px #7AC4EA;
            overflow:auto;
            width:600px;
            height:150px;
            background-color:#F5FBFF;
        }
/*---for 置顶帖---*/
.ulJay
        {
list-style-type:square;
            line-height:25px;
            font-size: 15px;
            font-family: Verdana,Arial,Helvetica,sans-serif;
        }
        .ulJay li
        {
            color:#666666;
        }
        .ulJay a:link
        {            
            color: #666666;
            text-decoration: none;
        }
        .ulJay a:visited
        {
            color: #666666;
            text-decoration: none;
        }
        .ulJay a:hover
        {
            color: #78AFD3;
            text-decoration: underline;
        }
        .ulJay a:active
        {
            color: #666666;
            text-decoration: none;
        }
    </style>
<!--PageBeginHtml Block End-->

<!--done-->
<div id="banner"><div id="bnr_pic">
<!--done-->
<div class="header">
	<div class="headerText">
		<a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/ljchow/">JayChow</a><br>
	</div><br>
	<div class="headerDis">var JayChow={MyMotto: "人生惟读书与做事尔，又何必贪恋太多。", MyTarget: "恍若女人般的优雅code，恍若女人般的用户体验。"}</div>
</div>
</div></div>
<div id="main">
	<!-- left starts -->
	<div id="left">
		<div id="mystats">
			<br>
				
<!--done-->
<div class="blogStats">
随笔 - 19&nbsp;
文章 - 0&nbsp;
评论 - 334&nbsp;

</div>
			
		</div>
		<div id="mylinks">
<!--done-->
<a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a>&nbsp;&nbsp;<a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/ljchow/">首页</a>&nbsp;&nbsp;<a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a>&nbsp;&nbsp;<a id="MyLinks1_ContactLink" accesskey="9" class="menu" rel="nofollow" href="http://msg.cnblogs.com/send/JayChow">联系</a>&nbsp;&nbsp;<a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a>&nbsp;&nbsp;<a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/ljchow/rss">订阅</a>&nbsp;<a id="MyLinks1_XMLLink" href="http://www.cnblogs.com/ljchow/rss"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/xml.gif" alt="订阅"></a></div>
		<div id="topics">
			
<div id="post_detail">
<div class="post">
	<div class="postTitle">
		<h1><a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html">前端开发必须知道的JS（一） 原型和继承</a></h1>
	</div>
	<div id="cnblogs_post_body"><p>　　原型和闭包是Js语言的难点，此文主要讲原型及原型实现的继承，在（二）中会讲下闭包，希望对大家有所帮助。若有疑问或不正之处，欢迎提出指正和讨论。</p>
<p><strong>一. 原型与构造函数</strong></p>
<p>　　Js所有的函数都有一个prototype属性，这个属性引用了一个对象，即原型对象，也简称原型。这个函数包括构造函数和普通函数，我们讲的更多是构造函数的原型，但是也不能否定普通函数也有原型。譬如普通函数：</p>
<div class="cnblogs_code">
<pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style="color: #0000ff;">function</span><span style="color: #000000;"> F(){<br>　　;<br>}<br>alert(F.prototype </span><span style="color: #0000ff;">instanceof</span><span style="color: #000000;"> Object) </span><span style="color: #008000;">//</span><span style="color: #008000;">true</span></div></pre>
</div>
<p>&nbsp;</p>
<p>　　构造函数，也即构造对象。首先了解下通过构造函数实例化对象的过程。</p>
<div class="cnblogs_code">
<pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style="color: #0000ff;">function</span><span style="color: #000000;"> A(x){<br>　　</span><span style="color: #0000ff;">this</span><span style="color: #000000;">.x</span><span style="color: #000000;">=</span><span style="color: #000000;">x;<br>}<br></span><span style="color: #0000ff;">var</span><span style="color: #000000;"> obj</span><span style="color: #000000;">=</span><span style="color: #0000ff;">new</span><span style="color: #000000;"> A(</span><span style="color: #000000;">1</span><span style="color: #000000;">);</span></div></pre>
</div>
<p>实例化obj对象有三步：</p>
<p>　　1. 创建obj对象：obj=new Object();</p>
<p>　　2. 将obj的内部__proto__指向构造他的函数A的prototype，同时，obj.constructor===A.prototype.constructor(这个是永远成立的，即使A.prototype不再指向原来的A原型，也就是说：<strong>类的实例对象的constructor属性永远指向"构造函数"的prototype.constructor</strong>)，从而使得obj.constructor.prototype指向A.prototype（obj.constructor.prototype===A.prototype，当A.prototype改变时则不成立，下文有遇到）。obj.constructor.prototype与的内部_proto_是两码事，实例化对象时用的是_proto_，obj是没有prototype属性的，但是有内部的__proto__，通过__proto__来取得原型链上的原型属性和原型方法，FireFox公开了__proto__，可以在FireFox中alert（obj.__proto__）；</p>
<p>　　3. 将obj作为this去调用构造函数A，从而设置成员（即对象属性和对象方法）并初始化。</p>
<p>　　当这3步完成，这个obj对象就与构造函数A再无联系，这个时候即使构造函数A再加任何成员，都不再影响已经实例化的obj对象了。此时，obj对象具有了x属性，同时具有了构造函数A的原型对象的所有成员，当然，此时该原型对象是没有成员的。</p>
<p><strong>　　原型对象初始是空的</strong>，也就是没有一个成员（即原型属性和原型方法）。可以通过如下方法验证原型对象具有多少成员。</p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style="color: #0000ff;">var</span><span style="color: #000000;"> num</span><span style="color: #000000;">=</span><span style="color: #000000;">0</span><span style="color: #000000;">;<br></span><span style="color: #0000ff;">for</span><span style="color: #000000;">(o </span><span style="color: #0000ff;">in</span><span style="color: #000000;"> A.prototype) {<br>　　alert(o);</span><span style="color: #008000;">//</span><span style="color: #008000;">alert出原型属性名字</span><span style="color: #008000;"><br></span><span style="color: #000000;">　　num</span><span style="color: #000000;">++</span><span style="color: #000000;">;<br>}<br>alert(</span><span style="color: #000000;">"</span><span style="color: #000000;">member: </span><span style="color: #000000;">"</span><span style="color: #000000;"> </span><span style="color: #000000;">+</span><span style="color: #000000;"> num);</span><span style="color: #008000;">//</span><span style="color: #008000;">alert出原型所有成员个数。</span></div></pre>
</div>
<p>&nbsp;</p>
<p>　　但是，一旦定义了原型属性或原型方法，则所有通过该构造函数实例化出来的所有对象，都继承了这些原型属性和原型方法，这是通过内部的_proto_链来实现的。</p>
<p>　　譬如</p>
<p>　　A.prototype.say=function(){alert("Hi")};</p>
<p>　　那所有的A的对象都具有了say方法，这个原型对象的say方法是唯一的副本给大家共享的，而不是每一个对象都有关于say方法的一个副本。</p>
<p>&nbsp;</p>
<p><strong>二. 原型与继承</strong></p>
<p>　　首先，看个简单的继承实现。</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style="color: #008080;">1</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> A(x){<br></span><span style="color: #008080;">2</span> 　　<span style="color: #0000ff;">this</span><span style="color: #000000;">.x</span><span style="color: #000000;">=</span><span style="color: #000000;">x;<br></span><span style="color: #008080;">3</span> <span style="color: #000000;">}  </span></div><div><span style="color: #008080;">4</span> <span style="color: #000000;">&nbsp;</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> B(x,y){<br></span><span style="color: #008080;">5</span> 　　<span style="color: #0000ff;">this</span><span style="color: #000000;">.tmpObj</span><span style="color: #000000;">=</span><span style="color: #000000;">A;<br></span><span style="color: #008080;">6</span> 　　<span style="color: #0000ff;">this</span><span style="color: #000000;">.tmpObj(x);<br></span><span style="color: #008080;">7</span> 　　<span style="color: #0000ff;">delete</span><span style="color: #000000;"> </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.tmpObj;<br></span><span style="color: #008080;">8</span> 　　<span style="color: #0000ff;">this</span><span style="color: #000000;">.y</span><span style="color: #000000;">=</span><span style="color: #000000;">y;<br></span><span style="color: #008080;">9</span> <span style="color: #000000;">}</span></div></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>&nbsp;</p>
<p>　　第5、6、7行：创建临时属性tmpObj引用构造函数A，然后在B内部执行，执行完后删除。当在B内部执行了this.x=x后（这里的this是B的对象），B当然就拥有了x属性，当然B的x属性和A的x属性两者是独立，所以并不能算严格的继承。第5、6、7行有更简单的实现，就是通过call(apply)方法：A.call(this,x);</p>
<p>这两种方法都有将this传递到A的执行里，this指向的是B的对象，这就是为什么不直接A(x)的原因。这种继承方式即是类继承（js没有类，这里只是指构造函数），虽然继承了A构造对象的所有属性方法，但是不能继承A的原型对象的成员。而要实现这个目的，就是在此基础上再添加原型继承。</p>
<p>&nbsp;</p>
<p>　　通过下面的例子，就能很深入地了解原型，以及原型参与实现的完美继承。（本文核心在此^_^）</p>
<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/copycode.gif" alt="复制代码"></a></span></div>
<pre><div><!--<br /><br />Code highlighting produced by Actipro CodeHighlighter (freeware)<br />http://www.CodeHighlighter.com/<br /><br />--><span style="color: #008080;"> 1</span> <span style="color: #000000;"> </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> A(x){<br></span><span style="color: #008080;"> 2</span> <span style="color: #000000;"> 　　</span><span style="color: #0000ff;">this</span><span style="color: #000000;">.x </span><span style="color: #000000;">=</span><span style="color: #000000;"> x;<br></span><span style="color: #008080;"> 3</span> <span style="color: #000000;"> }<br></span><span style="color: #008080;"> 4</span> <span style="color: #000000;"> A.prototype.a </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #000000;">"</span><span style="color: #000000;">a</span><span style="color: #000000;">"</span><span style="color: #000000;">;<br></span><span style="color: #008080;"> 5</span> <span style="color: #000000;"> </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> B(x,y){<br></span><span style="color: #008080;"> 6</span> <span style="color: #000000;"> 　　</span><span style="color: #0000ff;">this</span><span style="color: #000000;">.y </span><span style="color: #000000;">=</span><span style="color: #000000;"> y;<br></span><span style="color: #008080;"> 7</span> <span style="color: #000000;"> 　　A.call(</span><span style="color: #0000ff;">this,</span><span style="color: #000000;">x);<br></span><span style="color: #008080;"> 8</span> <span style="color: #000000;"> }<br></span><span style="color: #008080;"> 9</span> <span style="color: #000000;"> B.prototype.b1 </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000ff;">function</span><span style="color: #000000;">(){<br></span><span style="color: #008080;">10</span> <span style="color: #000000;"> 　　alert(</span><span style="color: #000000;">"</span><span style="color: #000000;">b1</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br></span><span style="color: #008080;">11</span> <span style="color: #000000;"> }<br></span><span style="color: #008080;">12</span> <span style="color: #000000;"> B.prototype </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> A();<br></span><span style="color: #008080;">13</span> <span style="color: #000000;"> B.prototype.b2 </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000ff;">function</span><span style="color: #000000;">(){<br></span><span style="color: #008080;">14</span> <span style="color: #000000;"> 　　alert(</span><span style="color: #000000;">"</span><span style="color: #000000;">b2</span><span style="color: #000000;">"</span><span style="color: #000000;">);<br></span><span style="color: #008080;">15</span> <span style="color: #000000;"> }<br></span><span style="color: #008080;">16</span> <span style="color: #000000;"> B.prototype.constructor </span><span style="color: #000000;">=</span><span style="color: #000000;"> B;<br></span><span style="color: #008080;">17</span> <span style="color: #000000;"> </span><span style="color: #0000ff;">var</span><span style="color: #000000;"> obj </span><span style="color: #000000;">=</span><span style="color: #000000;"> </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> B(</span><span style="color: #000000;">1</span><span style="color: #000000;">,</span><span style="color: #000000;">3</span><span style="color: #000000;">);</span></div></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/copycode.gif" alt="复制代码"></a></span></div></div>
<p>　　这个例子讲的就是B继承A。第7行类继承：<span style="font-family: 'Courier New'; color: #000000;">A.call(</span><span style="font-family: 'Courier New'; color: #0000ff;">this</span><span style="font-family: 'Courier New'; color: #000000;">.x);上面已讲过。实现原型继承的是第12行：<span style="font-family: 'Courier New'; color: #000000;">B.prototype </span><span style="font-family: 'Courier New'; color: #000000;">=</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #0000ff;">new</span><span style="font-family: 'Courier New'; color: #000000;"> A();</span></span></p>
<p><span style="font-family: 'Courier New', 'courier new';">　　就是说把B的原型指向了A的1个实例对象，这个实例对象具有x属性，为undefined，还具有a属性，值为"a"。所以B原型也具有了这2个属性（或者说，B和A建立了原型链，B是A的下级）。而因为方才的类继承，B的实例对象也具有了x属性，也就是说obj对象有2个同名的x属性，此时原型属性x要让位于实例对象属性x，所以obj.x是1，而非undefined。第13行又定义了原型方法b2，所以B原型也具有了b2。虽然第9~11行设置了原型方法b1，但是你会发现第12行执行后，B原型不再具有b1方法，也就是obj.b1是undefined。因为第12行使得B原型指向改变，原来具有b1的原型对象被抛弃，自然就没有b1了。</span></p>
<p><span style="font-family: 'Courier New', 'courier new';"><br></span></p>
<p><span style="font-family: 'Courier New', 'courier new';">　　第12行执行完后，B原型（B.prototype）指向了A的实例对象，而A的实例对象的构造器是构造函数A，所以B.prototype.constructor就是构造对象A了（换句话说，A构造了B的原型）。</span></p>
<p><span style="font-family: 'Courier New', 'courier new';">alert(B.prototype.constructor)出来后就是"function A(x){...}" 。同样地，obj.constructor也是A构造对象，alert(obj.constructor)出来后就是"function A(x){...}" ，也就是说B.prototype.constructor===obj.constructor（true），但是B.prototype===obj.constructor.prototype（false），因为前者是B的原型，具有成员：x,a,b2，后者是A的原型，具有成员：a。如何修正这个问题呢，就在第16行，将B原型的构造器重新指向了B构造函数，那么B.prototype===obj.constructor.prototype（true），都具有成员：x,a,b2。</span></p>
<p><span style="font-family: 'Courier New', 'courier new';"><br></span></p>
<p><span style="font-family: 'Courier New', 'courier new';">　　如果没有第16行，那是不是obj = new B(1,3)会去调用A构造函数实例化呢？答案是否定的，你会发现obj.y=3，所以仍然是调用的B构造函数实例化的。虽然obj.constructor===A(true)，但是对于new B()的行为来说，执行了上面所说的通过构造函数创建实例对象的3个步骤，第一步，创建空对象；第二步，obj.__proto__ === B.prototype，B.prototype是具有x,a,b2成员的，obj.constructor指向了B.prototype.constructor，即构造函数A；第三步，调用的构造函数B去设置和初始化成员，具有了属性x,y。虽然不加16行不影响obj的属性，但如上一段说，却影响obj.constructor和obj.constructor.prototype。所以在使用了原型继承后，要进行修正的操作。</span></p>
<p><span style="font-family: 'Courier New', 'courier new';">　　关于第12、16行，总言之，第12行使得B原型继承了A的原型对象的所有成员，但是也使得B的实例对象的构造器的原型指向了A原型，所以要通过第16行修正这个缺陷。</span></p>
<p><span style="font-family: 'Courier New', 'courier new';"><br></span></p>
<p><span style="font-family: 'Courier New', 'courier new';">　　毕了。</span></p></div><div style="display: block;" id="MySignature"><br>
<div id="AllanboltSignature">
<p id="PSignature" style="border-top: #e0e0e0 1px dashed; border-right: #e0e0e0 1px dashed; border-bottom: #e0e0e0 1px dashed; border-left: #e0e0e0 1px dashed;            padding-top: 10px;padding-right: 10px;padding-bottom: 10px;padding-left: 60px;            background: url(http://www.cnblogs.com/images/cnblogs_com/lloydsheng/239039/o_copyright.gif) #e5f1f4 no-repeat 1% 50%;            font-family: 微软雅黑; font-size:11px;">

作者：<a href="http://ljchow.cnblogs.com/" target="_blank">JayChow</a>
<br>
出处：<a href="http://ljchow.cnblogs.com/" target="_blank">http://ljchow.cnblogs.com</a>
<br>本文版权归作者和博客园共有，欢迎转载，请在文章页面明显位置给出原文链接。
</p>
</div>
<div>
<span class="txtJay">----------------华丽丽分隔线下是懒人的快速回复----------------</span>
<br>

<input class="btnJay" name="article_support" value="支持" title="文章不错，支持一下！" type="button">
<input class="btnJay" name="article_pass" value="飘过" title="飘过~~" type="button">
<input class="btnJay" name="article_pass1" value="踩踩" title="踩一下~~" type="button">
</div>
</div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory">分类: <a href="http://www.cnblogs.com/ljchow/category/249098.html">javascript</a></div>
<div id="EntryTag">标签: <a href="http://www.cnblogs.com/ljchow/tag/%E5%8E%9F%E5%9E%8B%20%E7%BB%A7%E6%89%BF/">原型 继承</a></div>
<div id="blog_post_info"><div id="green_channel">
<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(1753526,cb_blogId,1);green_channel_success(this,'谢谢推荐！');">好文要顶</a>
<a id="green_channel_follow" onclick="c_follow();" href="javascript:void(0);">关注我</a>
<a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a><a id="green_channel_contact" href="http://msg.cnblogs.com/send/JayChow" target="_blank">联系我</a>
<a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/icon_weibo_24.png" alt=""></a>
<a id="green_channel_wechat" href="javascript:void(0);" title="分享至微信" onclick="shareOnWechat()"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/wechat.png" alt=""></a>
</div>
<div id="author_profile">
<div id="author_profile_info" class="author_profile_info">
<a href="http://home.cnblogs.com/u/ljchow/" target="_blank"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/u53347.jpg" class="author_avatar" alt=""></a>
<div id="author_profile_detail" class="author_profile_info">
<a href="http://home.cnblogs.com/u/ljchow/">JayChow</a><br>
<a href="http://home.cnblogs.com/u/ljchow/followees">关注 - 15</a><br>
<a href="http://home.cnblogs.com/u/ljchow/followers">粉丝 - 138</a>
</div>
</div>
<div class="clear"></div>
<div id="author_profile_honor">荣誉：<a href="http://www.cnblogs.com/expert/" target="_blank">推荐博客</a></div>
<div id="author_profile_follow">
    <a href="javascript:void(0);" onclick="c_follow();return false;">+加关注</a>
</div>
</div>
<div id="div_digg">										
    <div class="diggit" onclick="votePost(1753526,'Digg')">
        <span class="diggnum" id="digg_count">14</span>
    </div>
	<div class="buryit" onclick="votePost(1753526,'Bury')"> 
		<span class="burynum" id="bury_count">0</span>
	</div>
	<div class="clear"></div>	
	<div class="diggword" id="digg_tips">
    (请您对文章做出评价)
    </div>	
</div>
</div>
<div class="clear"></div>
<div id="post_next_prev"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/02/1750267.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/ljchow/archive/2010/06/02/1750267.html" title="发布于2010-06-02 20:36">人生励志文章集中营</a><br><a href="http://www.cnblogs.com/ljchow/archive/2010/06/09/1754352.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/ljchow/archive/2010/06/09/1754352.html" title="发布于2010-06-09 08:17">Js动画（一）基础</a><br></div>
</div>


	<div class="postDesc">posted on <span id="post-date">2010-06-08 08:10</span> <a href="http://www.cnblogs.com/ljchow/">JayChow</a> 阅读(<span id="post_view_count">21520</span>) 评论(<span id="post_comment_count">69</span>)  <a href="http://i.cnblogs.com/EditPosts.aspx?postid=1753526" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(1753526);return false;">收藏</a></div>
</div>
<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=67146,cb_entryId=1753526,cb_blogApp=currentBlogApp,cb_blogUserGuid='467211ab-4d0d-de11-9e4d-001cf0cd104b',cb_entryCreatedDate='2010/6/8 8:10:00';loadViewCount(cb_entryId);</script>

</div><a name="!comments"></a><div id="blog-comments-placeholder"><div id="comments_pager_top"><div class="pager"><a href="#%21comments" onclick="commentManager.renderComments(1,50);return false;">&lt; Prev</a><a href="#%21comments" onclick="commentManager.renderComments(1,50);return false;">1</a><span class="current">2</span></div></div>
<!--done-->
<br>
<div class="feedback_area_title">发表评论</div>
<div class="feedbackNoItems"></div>
	

		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1847015" class="layer">#51楼</a><a name="1847015" id="comment_anchor_1847015"></a>  <span class="comment_date">2010-06-13 09:13</span> | <a id="a_comment_author_1847015" class="feedbackmanagelink" href="http://home.cnblogs.com/u/108023/" target="_blank">笨笨的狐狸</a> <a href="http://msg.cnblogs.com/send/%E7%AC%A8%E7%AC%A8%E7%9A%84%E7%8B%90%E7%8B%B8" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1847015" class="blog_comment_body">文章不错，支持一下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1847015,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1847015,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1847016" class="layer">#52楼</a><a name="1847016" id="comment_anchor_1847016"></a>  <span class="comment_date">2010-06-13 09:13</span> | <a id="a_comment_author_1847016" class="feedbackmanagelink" href="http://home.cnblogs.com/u/108023/" target="_blank">笨笨的狐狸</a> <a href="http://msg.cnblogs.com/send/%E7%AC%A8%E7%AC%A8%E7%9A%84%E7%8B%90%E7%8B%B8" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1847016" class="blog_comment_body">踩一下~~</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1847016,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1847016,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1856573" class="layer">#53楼</a><a name="1856573" id="comment_anchor_1856573"></a>  <span class="comment_date">2010-06-25 09:57</span> | <a id="a_comment_author_1856573" class="feedbackmanagelink" href="http://www.cnblogs.com/joyan/" target="_blank">我是警察谁知道</a> <a href="http://msg.cnblogs.com/send/%E6%88%91%E6%98%AF%E8%AD%A6%E5%AF%9F%E8%B0%81%E7%9F%A5%E9%81%93" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1856573" class="blog_comment_body">一直不是很懂，但也有那么一小点头绪了，</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1856573,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1856573,'Bury',this)">反对(0)</a></div><span id="comment_1856573_avatar" style="display:none;">http://pic.cnblogs.com/face/u139092.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1856744" class="layer">#54楼</a><a name="1856744" id="comment_anchor_1856744"></a>  <span class="comment_date">2010-06-25 11:03</span> | <a id="a_comment_author_1856744" class="feedbackmanagelink" href="http://www.cnblogs.com/Leo_wl/" target="_blank">HackerVirus</a> <a href="http://msg.cnblogs.com/send/HackerVirus" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1856744" class="blog_comment_body">文章不错，支持一下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1856744,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1856744,'Bury',this)">反对(0)</a></div><span id="comment_1856744_avatar" style="display:none;">http://pic.cnblogs.com/face/u104109.gif</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1860238" class="layer">#55楼</a><a name="1860238" id="comment_anchor_1860238"></a>  <span class="comment_date">2010-06-29 17:18</span> | <a id="a_comment_author_1860238" class="feedbackmanagelink" href="http://www.cnblogs.com/DreamWork/" target="_blank">非空</a> <a href="http://msg.cnblogs.com/send/%E9%9D%9E%E7%A9%BA" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1860238" class="blog_comment_body">文章不错，支持一下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1860238,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1860238,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1864697" class="layer">#56楼</a><a name="1864697" id="comment_anchor_1864697"></a>  <span class="comment_date">2010-07-06 10:02</span> | <a id="a_comment_author_1864697" class="feedbackmanagelink" href="http://www.cnblogs.com/guopei/" target="_blank">郭培</a> <a href="http://msg.cnblogs.com/send/%E9%83%AD%E5%9F%B9" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1864697" class="blog_comment_body"><fieldset class="comment_quote"><legend><a href="#1844887" title="查看引用原文">引用</a></legend>山天大畜：文章不错，支持一下！</fieldset><br><fieldset class="comment_quote"><legend>引用</legend>紫玉云天：<br>@JayChow<br><fieldset class="comment_quote"><legend>引用</legend>JayChow：<br><fieldset class="comment_quote"><legend>引用</legend>紫玉云天：原型是不错的东西，但闭包就算了吧。</fieldset><br>啊 为什么呢</fieldset><br><br><br>闭包性能远不如原型，而且据说在ie早期版本中存在内存问题</fieldset><br>以前IE6之前的版本存在内存泄漏的问题，现在的IE7之后就做了修复，而且IE6现在也有补丁来解决内存泄漏的问题，但仅限于XP上的IE6。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1864697,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1864697,'Bury',this)">反对(0)</a></div><span id="comment_1864697_avatar" style="display:none;">http://pic.cnblogs.com/face/u75329.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1865186" class="layer">#57楼</a><a name="1865186" id="comment_anchor_1865186"></a>  <span class="comment_date">2010-07-06 17:10</span> | <a id="a_comment_author_1865186" class="feedbackmanagelink" href="http://www.cnblogs.com/guopei/" target="_blank">郭培</a> <a href="http://msg.cnblogs.com/send/%E9%83%AD%E5%9F%B9" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1865186" class="blog_comment_body">1. 创建obj对象：obj=new Object();<br>这块儿应该是obj=new A();吧</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1865186,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1865186,'Bury',this)">反对(0)</a></div><span id="comment_1865186_avatar" style="display:none;">http://pic.cnblogs.com/face/u75329.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1865515" class="layer">#58楼</a><a name="1865515" id="comment_anchor_1865515"></a>[<span class="louzhu">楼主</span>]  <span class="comment_date">2010-07-07 00:32</span> | <a id="a_comment_author_1865515" class="feedbackmanagelink" href="http://www.cnblogs.com/ljchow/" target="_blank">JayChow</a> <a href="http://msg.cnblogs.com/send/JayChow" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1865515" class="blog_comment_body">关于闭包，看我写的（二）吧。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1865515,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1865515,'Bury',this)">反对(0)</a></div><span id="comment_1865515_avatar" style="display:none;">http://pic.cnblogs.com/face/u53347.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1865520" class="layer">#59楼</a><a name="1865520" id="comment_anchor_1865520"></a>[<span class="louzhu">楼主</span>]  <span class="comment_date">2010-07-07 00:41</span> | <a id="a_comment_author_1865520" class="feedbackmanagelink" href="http://www.cnblogs.com/ljchow/" target="_blank">JayChow</a> <a href="http://msg.cnblogs.com/send/JayChow" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1865520" class="blog_comment_body"><a href="#1865186" title="查看所回复的评论" onclick="commentManager.renderComments(0,50,1865186);">@</a>郭培<br>是一个空对象，你看第3步用A实例这个空对象。</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1865520,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1865520,'Bury',this)">反对(0)</a></div><span id="comment_1865520_avatar" style="display:none;">http://pic.cnblogs.com/face/u53347.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1865859" class="layer">#60楼</a><a name="1865859" id="comment_anchor_1865859"></a>  <span class="comment_date">2010-07-07 12:29</span> | <a id="a_comment_author_1865859" class="feedbackmanagelink" href="http://www.cnblogs.com/poissonnotes/" target="_blank">poisson_notes</a> <a href="http://msg.cnblogs.com/send/poisson_notes" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1865859" class="blog_comment_body">文章不错，支持一下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1865859,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1865859,'Bury',this)">反对(0)</a></div><span id="comment_1865859_avatar" style="display:none;">http://pic.cnblogs.com/face/u112695.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1866204" class="layer">#61楼</a><a name="1866204" id="comment_anchor_1866204"></a>  <span class="comment_date">2010-07-07 18:32</span> | <a id="a_comment_author_1866204" class="feedbackmanagelink" href="http://www.cnblogs.com/pig_wang/" target="_blank">pig_wang</a> <a href="http://msg.cnblogs.com/send/pig_wang" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1866204" class="blog_comment_body">文章不错，支持一下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1866204,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1866204,'Bury',this)">反对(0)</a></div><span id="comment_1866204_avatar" style="display:none;">http://pic.cnblogs.com/face/u129035.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1866364" class="layer">#62楼</a><a name="1866364" id="comment_anchor_1866364"></a>  <span class="comment_date">2010-07-07 23:09</span> | <a id="a_comment_author_1866364" class="feedbackmanagelink" href="http://www.cnblogs.com/babyzone2004/" target="_blank">橡树小屋</a> <a href="http://msg.cnblogs.com/send/%E6%A9%A1%E6%A0%91%E5%B0%8F%E5%B1%8B" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1866364" class="blog_comment_body">文章不错，支持一下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1866364,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1866364,'Bury',this)">反对(0)</a></div><span id="comment_1866364_avatar" style="display:none;">http://pic.cnblogs.com/face/u144149.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1866701" class="layer">#63楼</a><a name="1866701" id="comment_anchor_1866701"></a>  <span class="comment_date">2010-07-08 13:05</span> | <a id="a_comment_author_1866701" class="feedbackmanagelink" href="http://www.cnblogs.com/guopei/" target="_blank">郭培</a> <a href="http://msg.cnblogs.com/send/%E9%83%AD%E5%9F%B9" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1866701" class="blog_comment_body"><fieldset class="comment_quote"><legend><a href="#1865520" title="查看引用原文">引用</a></legend>JayChow：<br>@郭培<br>是一个空对象，你看第3步用A实例这个空对象。</fieldset><br>嗯，看到下面就明白了，谢谢</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1866701,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1866701,'Bury',this)">反对(0)</a></div><span id="comment_1866701_avatar" style="display:none;">http://pic.cnblogs.com/face/u75329.jpg</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#1868107" class="layer">#64楼</a><a name="1868107" id="comment_anchor_1868107"></a>  <span class="comment_date">2010-07-10 00:18</span> | <a id="a_comment_author_1868107" class="feedbackmanagelink" href="http://home.cnblogs.com/u/135360/" target="_blank">WushanRen</a> <a href="http://msg.cnblogs.com/send/WushanRen" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_1868107" class="blog_comment_body">文章不错，支持一下！</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(1868107,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(1868107,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#3088417" class="layer">#65楼</a><a name="3088417" id="comment_anchor_3088417"></a>  <span class="comment_date">2014-12-17 20:43</span> | <a id="a_comment_author_3088417" class="feedbackmanagelink" href="http://www.cnblogs.com/limingxi/" target="_blank">李明夕</a> <a href="http://msg.cnblogs.com/send/%E6%9D%8E%E6%98%8E%E5%A4%95" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3088417" class="blog_comment_body">原型继承的constructor属性维护如果用 B.prototype.constructor = B;的话，会导致原型链断开,无法回溯。<br>已知obj的话，回溯constructor仅能访问到B,而无法访问到A</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3088417,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3088417,'Bury',this)">反对(0)</a></div><span id="comment_3088417_avatar" style="display:none;">http://pic.cnblogs.com/face/561243/20140506121138.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#3088420" class="layer">#66楼</a><a name="3088420" id="comment_anchor_3088420"></a>  <span class="comment_date">2014-12-17 20:50</span> | <a id="a_comment_author_3088420" class="feedbackmanagelink" href="http://www.cnblogs.com/limingxi/" target="_blank">李明夕</a> <a href="http://msg.cnblogs.com/send/%E6%9D%8E%E6%98%8E%E5%A4%95" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3088420" class="blog_comment_body">在构造函数内部用对象自身的属性进行constructor维护，<br>function B(){<br>  this.constructor = arguments.callee;<br><br>}<br>不会破坏原型链，多开辟的属性空间也可以几乎不计</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3088420,'Digg',this)">支持(1)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3088420,'Bury',this)">反对(0)</a></div><span id="comment_3088420_avatar" style="display:none;">http://pic.cnblogs.com/face/561243/20140506121138.png</span>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#3222056" class="layer">#67楼</a><a name="3222056" id="comment_anchor_3222056"></a>  <span class="comment_date">2015-07-05 23:42</span> | <a id="a_comment_author_3222056" class="feedbackmanagelink" href="http://home.cnblogs.com/u/781659/" target="_blank">a_flydog</a> <a href="http://msg.cnblogs.com/send/a_flydog" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3222056" class="blog_comment_body">现在看看还是有帮助</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3222056,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3222056,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#3311344" class="layer">#68楼</a><a name="3311344" id="comment_anchor_3311344"></a>  <span class="comment_date">2015-11-21 19:07</span> | <a id="a_comment_author_3311344" class="feedbackmanagelink" href="http://home.cnblogs.com/u/841370/" target="_blank">helloworld-</a> <a href="http://msg.cnblogs.com/send/helloworld-" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3311344" class="blog_comment_body">涨知识了，谢谢楼主，最近在原型与继承这里卡了好久</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3311344,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3311344,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	
		<div class="feedbackItem">
			<div class="feedbackListSubtitle">
				<div class="feedbackManage">
					&nbsp;&nbsp;<span class="comment_actions"></span>
				</div>
				<a href="#3311925" class="layer">#69楼</a><a name="3311925" id="comment_anchor_3311925"></a><span id="comment-maxId" style="display:none;">3311925</span><span id="comment-maxDate" style="display:none;">2015/11/23 10:25:56</span>  <span class="comment_date">2015-11-23 10:25</span> | <a id="a_comment_author_3311925" class="feedbackmanagelink" href="http://www.cnblogs.com/youthlagoon/" target="_blank">挚爱菲</a> <a href="http://msg.cnblogs.com/send/%E6%8C%9A%E7%88%B1%E8%8F%B2" title="发送站内短消息" class="sendMsg2This">&nbsp;</a>
			</div>
			<div class="feedbackCon">
				<div id="comment_body_3311925" class="blog_comment_body">楼主，针对你这样的叙述：<br>“obj.constructor===A.prototype.constructor(这个是永远成立的，即使A.prototype不再指向原来的A原型，也就是说：类的实例对象的constructor属性永远指向"构造函数"的prototype.constructor)，从而使得obj.constructor.prototype指向A.prototype（obj.constructor.prototype===A.prototype，当A.prototype改变时则不成立，下文有遇到）”<br>我有试过，发现 和你说的刚好相反呢：<br>function A(x) {<br>this.x = x;<br>}<br>function B(x) {<br>this.x = x;<br>}<br>var obj = new A(1);//（1）创建obj对象<br>A.prototype = B;//（2）A.prototype不再指向原来的A原型<br>console.log(obj.constructor == A.prototype.constructor);<br>console.log(obj.constructor.prototype == A.prototype);<br>console.log(obj.constructor === A.prototype.constructor);<br>console.log(obj.constructor.prototype === A.prototype);<br>结果：<br>false<br>true<br>false<br>true</div><div class="comment_vote"><a href="javascript:void(0);" class="comment_digg" onclick="return voteComment(3311925,'Digg',this)">支持(0)</a><a href="javascript:void(0);" class="comment_bury" onclick="return voteComment(3311925,'Bury',this)">反对(0)</a></div>
			</div>
		</div>
	<div id="comments_pager_bottom"><div class="pager"><a href="#%21comments" onclick="commentManager.renderComments(1,50);return false;">&lt; Prev</a><a href="#%21comments" onclick="commentManager.renderComments(1,50);return false;">1</a><span class="current">2</span></div></div></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
<div id="comment_form_container"><div class="login_tips">注册用户登录后才能发表评论，请 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return login('commentform');">登录</a> 或 <a rel="nofollow" href="javascript:void(0);" class="underline" onclick="return register();">注册</a>，<a href="http://www.cnblogs.com/">访问</a>网站首页。</div></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="site_nav_under"><a href="http://www.ucancode.com/index.htm" target="_blank">【推荐】50万行VC++源码: 大型组态工控、电力仿真CAD与GIS源码库</a><br><a href="http://www.rongcloud.cn/" target="_blank">【推荐】融云即时通讯云－专注为 App 开发者提供IM云服务</a><br><a href="https://www.jpush.cn/" target="_blank">【福利】极光推送-富媒体+大数据驱动精准推送，完全免费开放啦</a><br><a href="http://click.aliyun.com/m/994/" target="_blank">【精品】根据网站PV推荐完整架构方案</a><br></div>
<div id="opt_under_post"></div>
<script type="text/javascript">
    fixPostBodyFormat();
</script>
<div id="google_ad_c1" class="c_ad_block"><a href="http://www.gcpowertools.com.cn/products/activereports_overview.htm?utm_source=cnblogs&amp;utm_medium=blogpage&amp;utm_term=bottom&amp;utm_content=AR&amp;utm_campaign=community" target="_blank"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/24442-20151030141346279-2034275742.gif" alt="" title="" height="250" width="300"></a></div>
<div id="under_post_news"><div class="itnews c_ad_block"><b>最新IT新闻</b>:<br> ·  <a href="http://news.cnblogs.com/n/534238/" target="_blank">俄罗斯计划2030年建立月球基地</a><br> ·  <a href="http://news.cnblogs.com/n/534237/" target="_blank">李开复：创新工场愿与传统企业加深合作</a><br> ·  <a href="http://news.cnblogs.com/n/534236/" target="_blank">周鸿祎谈360私有化：已分完百亿美元投资额度</a><br> ·  <a href="http://news.cnblogs.com/n/534235/" target="_blank">少量DNA可存下全球所有数字信息</a><br> ·  <a href="http://news.cnblogs.com/n/534234/" target="_blank">扎克伯格闺女应该知道的九件事</a><br>» <a href="http://news.cnblogs.com/" title="IT新闻" target="_blank">更多新闻...</a></div></div>
<div id="google_ad_c2" class="c_ad_block"><a href="http://e.jikexueyuan.com/html5.html?hmsr=cnb_banner_html5_09.14" target="_blank"><img src="%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%BF%85%E9%A1%BB%E7%9F%A5%E9%81%93%E7%9A%84JS%EF%BC%88%E4%B8%80%EF%BC%89%20%E5%8E%9F%E5%9E%8B%E5%92%8C%E7%BB%A7%E6%89%BF%20-%20JayChow%20-%20%E5%8D%9A%E5%AE%A2%E5%9B%AD_files/24442-20150914101329570-406117032.jpg" alt="" title="" height="60" width="468"></a></div>
<div id="under_post_kb"><div class="itnews c_ad_block" id="kb_block"><b>最新知识库文章</b>:<br><div id="kb_recent"> ·  <a href="http://kb.cnblogs.com/page/527814/" target="_blank">从涂鸦到发布——理解API的设计过程</a><br> ·  <a href="http://kb.cnblogs.com/page/531834/" target="_blank">好的架构是进化来的，不是设计来的</a><br> ·  <a href="http://kb.cnblogs.com/page/532236/" target="_blank">被误解的MVC和被神化的MVVM</a><br> ·  <a href="http://kb.cnblogs.com/page/530046/" target="_blank">再谈设计和编码</a><br> ·  <a href="http://kb.cnblogs.com/page/531270/" target="_blank">什么时候应该避免写代码注释？</a><br></div>» <a href="http://kb.cnblogs.com/" target="_blank">更多知识库文章...</a></div></div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
</script>
</div>

		</div>
	</div>
	<!-- left ends -->
	<!-- right starts -->
	<div id="right">
		<!-- 右侧工具部分 -->
		<div id="right_content">
	
			
<!--done-->
<h2 class="listtitle">公告</h2>
<div class="newsItem">
	<div id="blog-news"><p>学习，总结，分享，进步。</p>
<p>本博客所有文章，若非特别声明，均为原创。希望大家支持原创，转载请注明出处即可。</p><div id="profile_block">昵称：<a href="http://home.cnblogs.com/u/ljchow/">JayChow</a><br>园龄：<a href="http://home.cnblogs.com/u/ljchow/" title="入园时间：2009-03-10">6年8个月</a><br>荣誉：<a href="http://www.cnblogs.com/expert/">推荐博客</a><br>粉丝：<a href="http://home.cnblogs.com/u/ljchow/followers/">138</a><br>关注：<a href="http://home.cnblogs.com/u/ljchow/followees/">15</a><div id="p_b_follow"><a href="javascript:void(0);" onclick="cnblogs.UserManager.FollowBlogger('467211ab-4d0d-de11-9e4d-001cf0cd104b')">+加关注</a></div></div></div><script type="text/javascript">loadBlogNews();</script>
</div>

	
			<div id="calendar"><div id="blog-calendar" style=""><table id="blogCalendar" class="Cal" title="Calendar" cellpadding="0" cellspacing="0">
	<tbody><tr><td colspan="7"><table class="CalTitle" cellspacing="0">
		<tbody><tr><td class="CalNextPrev"><a href="javascript:void(0);" onclick="loadBlogCalendar('2010/05/01');return false;">&lt;</a></td><td align="center">2010年6月</td><td class="CalNextPrev" align="right"><a href="javascript:void(0);" onclick="loadBlogCalendar('2010/07/01');return false;">&gt;</a></td></tr>
	</tbody></table></td></tr><tr><th class="CalDayHeader" abbr="日" scope="col" align="center">日</th><th class="CalDayHeader" abbr="一" scope="col" align="center">一</th><th class="CalDayHeader" abbr="二" scope="col" align="center">二</th><th class="CalDayHeader" abbr="三" scope="col" align="center">三</th><th class="CalDayHeader" abbr="四" scope="col" align="center">四</th><th class="CalDayHeader" abbr="五" scope="col" align="center">五</th><th class="CalDayHeader" abbr="六" scope="col" align="center">六</th></tr><tr><td class="CalOtherMonthDay" align="center">30</td><td class="CalOtherMonthDay" align="center">31</td><td align="center"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/01.html"><u>1</u></a></td><td align="center"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/02.html"><u>2</u></a></td><td align="center">3</td><td align="center">4</td><td class="CalWeekendDay" align="center">5</td></tr><tr><td class="CalWeekendDay" align="center">6</td><td align="center">7</td><td align="center"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08.html"><u>8</u></a></td><td align="center"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/09.html"><u>9</u></a></td><td align="center"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/10.html"><u>10</u></a></td><td align="center">11</td><td class="CalWeekendDay" align="center">12</td></tr><tr><td class="CalWeekendDay" align="center">13</td><td align="center">14</td><td align="center">15</td><td align="center">16</td><td align="center">17</td><td align="center">18</td><td class="CalWeekendDay" align="center">19</td></tr><tr><td class="CalWeekendDay" align="center">20</td><td align="center">21</td><td align="center">22</td><td align="center">23</td><td align="center">24</td><td align="center"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/25.html"><u>25</u></a></td><td class="CalWeekendDay" align="center">26</td></tr><tr><td class="CalWeekendDay" align="center">27</td><td align="center">28</td><td align="center">29</td><td align="center"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/30.html"><u>30</u></a></td><td class="CalOtherMonthDay" align="center">1</td><td class="CalOtherMonthDay" align="center">2</td><td class="CalOtherMonthDay" align="center">3</td></tr><tr><td class="CalOtherMonthDay" align="center">4</td><td class="CalOtherMonthDay" align="center">5</td><td class="CalOtherMonthDay" align="center">6</td><td class="CalOtherMonthDay" align="center">7</td><td class="CalOtherMonthDay" align="center">8</td><td class="CalOtherMonthDay" align="center">9</td><td class="CalOtherMonthDay" align="center">10</td></tr>
</tbody></table></div><script type="text/javascript">loadBlogDefaultCalendar();</script></div>
			
				<div id="leftcontentcontainer">
					<div id="blog-sidecolumn"><div id="sidebar_search" class="sidebar-block">
<div id="sidebar_search" class="mySearch">
<h3 class="catListTitle">搜索</h3>
<div id="sidebar_search_box">
<div id="widget_my_zzk" class="div_my_zzk"><input id="q" onkeydown="return zzk_go_enter(event);" class="input_my_zzk" type="text">&nbsp;<input onclick="zzk_go()" value="找找看" id="btnZzk" class="btn_my_zzk" type="button"></div>

</div>
</div>

</div><div id="sidebar_shortcut" class="sidebar-block">
<h3 class="catListTitle">常用链接</h3>
<ul>
<li><a href="http://www.cnblogs.com/ljchow/p/" title="我的博客的随笔列表">我的随笔</a></li><li><a href="http://www.cnblogs.com/ljchow/MyComments.html" title="我发表过的评论列表">我的评论</a></li><li><a href="http://www.cnblogs.com/ljchow/OtherPosts.html" title="我评论过的随笔列表">我的参与</a></li><li><a href="http://www.cnblogs.com/ljchow/RecentComments.html" title="我的博客的评论列表">最新评论</a></li><li><a href="http://www.cnblogs.com/ljchow/tag/" title="我的博客的标签列表">我的标签</a></li>
</ul>
<div id="itemListLin_con" style="display:none;">

</div></div><div id="sidebar_recentposts" class="sidebar-block">
<h3 class="catListTitle">最新随笔</h3>
<div class="RecentComment" id="RecentPosts">
<ul style="word-break:break-all">
<li><a href="http://www.cnblogs.com/ljchow/archive/2011/01/24/1943579.html">1. 郁闷，郁闷</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/09/10/1822799.html">2. Js组件的一些写法（一）</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/08/31/1814094.html">3. 腾讯的一个不固定高度消息的滚动特效</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/07/27/1785632.html">4. 三栏宽度自适应布局及等高的思考</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/07/06/1768749.html">5. 前端开发必须知道的JS（二） 闭包及应用</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/30/1768683.html">6. 分享下如何写JS数组sort的比较函数</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/25/1762955.html">7. JS写for循环，为什么一定要加var</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/25/1764843.html">8. 无题</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/10/1755182.html">9. Js动画（二）梦幻西游之逍遥生游览北俱芦洲</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/09/1754352.html">10. Js动画（一）基础</a></li>
</ul>
</div>
</div><div id="sidebar_toptags" class="sidebar-block">
<h3 class="catListTitle">我的标签</h3>
<div id="MyTag">
<ul>
<li><a href="http://www.cnblogs.com/ljchow/tag/%E5%8A%A8%E7%94%BB/">动画</a>(2)</li><li><a href="http://www.cnblogs.com/ljchow/tag/%E6%8B%96%E6%8B%BD/">拖拽</a>(2)</li><li><a href="http://www.cnblogs.com/ljchow/tag/%E6%97%A0%E5%88%B7%E6%96%B0%E4%B8%8A%E4%BC%A0/">无刷新上传</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/%E5%8E%9F%E5%9E%8B%20%E7%BB%A7%E6%89%BF/">原型 继承</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/%E9%9D%9E%E6%8A%80%E6%9C%AF/">非技术</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/%E4%BA%BA%E7%94%9F/">人生</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/CssHack/">CssHack</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/loading/">loading</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/ToolTip/">ToolTip</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/%E9%97%AD%E5%8C%85/">闭包</a>(1)</li><li><a href="http://www.cnblogs.com/ljchow/tag/">更多</a></li>
</ul>
</div></div><div id="sidebar_categories">
<!--done-->

		<h1 class="catListTitle">随笔分类</h1>
		
				<ul>
			
				<li class="catList">
				 <a id="CatList_LinkList_0_Link_0" class="listitem" href="http://www.cnblogs.com/ljchow/category/251864.html">.net(c#)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_0_Link_1" class="listitem" href="http://www.cnblogs.com/ljchow/category/249099.html">css(2)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_0_Link_2" class="listitem" href="http://www.cnblogs.com/ljchow/category/249098.html">javascript(13)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_0_Link_3" class="listitem" href="http://www.cnblogs.com/ljchow/category/249100.html">非技术(3)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_0_Link_4" class="listitem" href="http://www.cnblogs.com/ljchow/category/251865.html">数据结构与算法</a>
				</li>
			
				</ul>
			
	
		<h1 class="catListTitle">随笔档案</h1>
		
				<ul>
			
				<li class="catList">
				 <a id="CatList_LinkList_1_Link_0" class="listitem" href="http://www.cnblogs.com/ljchow/archive/2011/01.html">2011年1月 (1)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_1_Link_1" class="listitem" href="http://www.cnblogs.com/ljchow/archive/2010/09.html">2010年9月 (1)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_1_Link_2" class="listitem" href="http://www.cnblogs.com/ljchow/archive/2010/08.html">2010年8月 (1)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_1_Link_3" class="listitem" href="http://www.cnblogs.com/ljchow/archive/2010/07.html">2010年7月 (3)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_1_Link_4" class="listitem" href="http://www.cnblogs.com/ljchow/archive/2010/06.html">2010年6月 (8)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_1_Link_5" class="listitem" href="http://www.cnblogs.com/ljchow/archive/2010/05.html">2010年5月 (3)</a>
				</li>
			
				<li class="catList">
				 <a id="CatList_LinkList_1_Link_6" class="listitem" href="http://www.cnblogs.com/ljchow/archive/2010/04.html">2010年4月 (2)</a>
				</li>
			
				</ul>
			
	
</div><div id="sidebar_recentcomments" class="sidebar-block"><div id="recent_comments_wrap">
<h3 class="catListTitle">最新评论</h3>
<div class="RecentComment" id="RecentComments">
	<div id="RecentCommentsBlock"><ul>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html#3311925">1. Re:前端开发必须知道的JS（一） 原型和继承</a></li>
    <li class="recent_comment_body">楼主，针对你这样的叙述：“obj.constructor===A.prototype.constructor(这个是永远成立的，即使A.prototype不再指向原来的A原型，也就是说：类的实例对象的......</li>
    <li class="recent_comment_author">--挚爱菲</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html#3311344">2. Re:前端开发必须知道的JS（一） 原型和继承</a></li>
    <li class="recent_comment_body">涨知识了，谢谢楼主，最近在原型与继承这里卡了好久</li>
    <li class="recent_comment_author">--helloworld-</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/ljchow/archive/2010/04/08/1707808.html#3266414">3. Re:JS实现非图片动态loading</a></li>
    <li class="recent_comment_body">有bug  连续多点几次Start 然后再点end</li>
    <li class="recent_comment_author">--misaky</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html#3222056">4. Re:前端开发必须知道的JS（一） 原型和继承</a></li>
    <li class="recent_comment_body">现在看看还是有帮助</li>
    <li class="recent_comment_author">--a_flydog</li>
    <li class="recent_comment_title"><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html#3088420">5. Re:前端开发必须知道的JS（一） 原型和继承</a></li>
    <li class="recent_comment_body">在构造函数内部用对象自身的属性进行constructor维护，function B(){ this.constructor = arguments.callee;}不会破坏原型链，多开辟的属性空间也......</li>
    <li class="recent_comment_author">--李明夕</li>
</ul>
</div>
</div>
</div></div><div id="sidebar_topviewedposts" class="sidebar-block"><div id="topview_posts_wrap">
<h3 class="catListTitle">阅读排行榜</h3>
<div class="RecentComment" id="TopViewPosts"> 
	<div id="TopViewPostsBlock"><ul><li><a href="http://www.cnblogs.com/ljchow/archive/2010/04/27/1721695.html">1. 再谈js拖拽（一）(29197)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html">2. 前端开发必须知道的JS（一） 原型和继承(21519)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/25/1762955.html">3. JS写for循环，为什么一定要加var(13105)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/09/1754352.html">4. Js动画（一）基础(11641)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/05/07/1729345.html">5. 再谈js拖拽（二）仿iGoogle自定义首页模块拖拽(7875)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/07/06/1768749.html">6. 前端开发必须知道的JS（二） 闭包及应用(7195)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/05/31/1748639.html">7. JS实现tooltip的封装(4469)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/10/1755182.html">8. Js动画（二）梦幻西游之逍遥生游览北俱芦洲(4074)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/09/10/1822799.html">9. Js组件的一些写法（一）(3938)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/30/1768683.html">10. 分享下如何写JS数组sort的比较函数(2891)</a></li></ul></div>
</div>
</div></div><div id="sidebar_topcommentedposts" class="sidebar-block"><div id="topfeedback_posts_wrap">
<h3 class="catListTitle">评论排行榜</h3>
<div class="RecentComment" id="TopCommentsPosts">
	<div id="TopFeedbackPostsBlock"><ul><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html">1. 前端开发必须知道的JS（一） 原型和继承(69)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/10/1755182.html">2. Js动画（二）梦幻西游之逍遥生游览北俱芦洲(57)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/09/1754352.html">3. Js动画（一）基础(44)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/25/1762955.html">4. JS写for循环，为什么一定要加var(39)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/05/07/1729345.html">5. 再谈js拖拽（二）仿iGoogle自定义首页模块拖拽(26)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/04/27/1721695.html">6. 再谈js拖拽（一）(25)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/07/06/1768749.html">7. 前端开发必须知道的JS（二） 闭包及应用(15)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/05/31/1748639.html">8. JS实现tooltip的封装(13)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/05/17/1737799.html">9. 无刷新上传解析csv文件(10)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/01/1748702.html">10. 前端开发必须知道的CSS(一) CSS Hack(10)</a></li></ul></div>
</div></div></div><div id="sidebar_topdiggedposts" class="sidebar-block"><div id="topdigg_posts_wrap">
<h3 class="catListTitle">推荐排行榜</h3>
<div class="RecentComment">
	<div id="TopDiggPostsBlock"><ul><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/09/1754352.html">1. Js动画（一）基础(18)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/08/1753526.html">2. 前端开发必须知道的JS（一） 原型和继承(14)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/07/06/1768749.html">3. 前端开发必须知道的JS（二） 闭包及应用(13)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/10/1755182.html">4. Js动画（二）梦幻西游之逍遥生游览北俱芦洲(13)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/04/27/1721695.html">5. 再谈js拖拽（一）(11)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/25/1762955.html">6. JS写for循环，为什么一定要加var(7)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/05/07/1729345.html">7. 再谈js拖拽（二）仿iGoogle自定义首页模块拖拽(6)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/01/1748702.html">8. 前端开发必须知道的CSS(一) CSS Hack(5)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/04/08/1707808.html">9. JS实现非图片动态loading(4)</a></li><li><a href="http://www.cnblogs.com/ljchow/archive/2010/06/30/1768683.html">10. 分享下如何写JS数组sort的比较函数(4)</a></li></ul></div>
</div></div></div></div><script type="text/javascript">loadBlogSideColumn();</script>
				</div>
			
		</div>
		<!-- //右侧工具部分 -->
		<div id="footer">
			
<!--done-->
Copyright ©2015 JayChow
		</div>
	</div>
	<!-- right ends -->
	<div class="clear"></div>
	
</div>

<!--PageEndHtml Block Begin-->


<!--PageEndHtml Block End-->


</body></html>